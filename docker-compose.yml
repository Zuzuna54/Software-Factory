version: "3.8"

services:
  postgres:
    image: ankane/pgvector:latest
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: agent_team
      POSTGRES_USER: agent_user
      POSTGRES_PASSWORD: agent_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./infra/docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U agent_user -d agent_team"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  python:
    build:
      context: .
      dockerfile: infra/docker/python/Dockerfile
    volumes:
      - .:/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://agent_user:agent_password@postgres:5432/agent_team
      - REDIS_URL=redis://redis:6379/0
    command: sleep infinity

  node:
    build:
      context: .
      dockerfile: infra/docker/node/Dockerfile
    volumes:
      - .:/app
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://agent_user:agent_password@postgres:5432/agent_team
    command: sleep infinity

volumes:
  postgres_data:
  redis_data:
