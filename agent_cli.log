2025-05-04 19:52:20,493 - agent.cli - INFO - Initializing CLI services...
2025-05-04 19:52:20,493 - agents.db.postgres - INFO - Initializing PostgreSQL connection pool...
2025-05-04 19:52:20,493 - agents.db.postgres - ERROR - Failed to initialize database pool: invalid DSN: scheme is expected to be either "postgresql" or "postgres", got 'postgresql+asyncpg'
Traceback (most recent call last):
  File "/Users/giorgobg/Desktop/Software Factory/agents/cli/../../agents/db/postgres.py", line 70, in initialize
    self.pool = await asyncpg.create_pool(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/pool.py", line 418, in _async__init__
    await self._initialize()
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/pool.py", line 445, in _initialize
    await first_ch.connect()
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/pool.py", line 132, in connect
    self._con = await self._pool._get_new_connection()
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/pool.py", line 517, in _get_new_connection
    con = await self._connect(
          ^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connection.py", line 2421, in connect
    return await connect_utils._connect(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<20 lines>...
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connect_utils.py", line 1041, in _connect
    addrs, params, config = _parse_connect_arguments(**kwargs)
                            ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connect_utils.py", line 749, in _parse_connect_arguments
    addrs, params = _parse_connect_dsn_and_args(
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        dsn=dsn, host=host, port=port, user=user,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
        target_session_attrs=target_session_attrs,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        krbsrvname=krbsrvname, gsslib=gsslib)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connect_utils.py", line 283, in _parse_connect_dsn_and_args
    raise exceptions.ClientConfigurationError(
        'invalid DSN: scheme is expected to be either '
        '"postgresql" or "postgres", got {!r}'.format(parsed.scheme))
asyncpg.exceptions._base.ClientConfigurationError: invalid DSN: scheme is expected to be either "postgresql" or "postgres", got 'postgresql+asyncpg'
2025-05-04 19:52:20,498 - agent.cli - ERROR - CLI Initialization failed: invalid DSN: scheme is expected to be either "postgresql" or "postgres", got 'postgresql+asyncpg'
Traceback (most recent call last):
  File "/Users/giorgobg/Desktop/Software Factory/agents/cli/agent_cli.py", line 76, in initialize
    await self.db_client.initialize()
  File "/Users/giorgobg/Desktop/Software Factory/agents/cli/../../agents/db/postgres.py", line 70, in initialize
    self.pool = await asyncpg.create_pool(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/pool.py", line 418, in _async__init__
    await self._initialize()
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/pool.py", line 445, in _initialize
    await first_ch.connect()
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/pool.py", line 132, in connect
    self._con = await self._pool._get_new_connection()
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/pool.py", line 517, in _get_new_connection
    con = await self._connect(
          ^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connection.py", line 2421, in connect
    return await connect_utils._connect(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<20 lines>...
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connect_utils.py", line 1041, in _connect
    addrs, params, config = _parse_connect_arguments(**kwargs)
                            ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connect_utils.py", line 749, in _parse_connect_arguments
    addrs, params = _parse_connect_dsn_and_args(
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        dsn=dsn, host=host, port=port, user=user,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
        target_session_attrs=target_session_attrs,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        krbsrvname=krbsrvname, gsslib=gsslib)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connect_utils.py", line 283, in _parse_connect_dsn_and_args
    raise exceptions.ClientConfigurationError(
        'invalid DSN: scheme is expected to be either '
        '"postgresql" or "postgres", got {!r}'.format(parsed.scheme))
asyncpg.exceptions._base.ClientConfigurationError: invalid DSN: scheme is expected to be either "postgresql" or "postgres", got 'postgresql+asyncpg'
2025-05-04 19:52:20,500 - agents.db.postgres - WARNING - Attempted to close an uninitialized or already closed connection pool.
2025-05-04 19:52:20,500 - agent.cli - INFO - CLI resources closed.
2025-05-04 19:53:33,175 - agent.cli - INFO - Initializing CLI services...
2025-05-04 19:53:33,175 - agents.db.postgres - INFO - Initializing PostgreSQL connection pool...
2025-05-04 19:53:33,176 - agents.db.postgres - ERROR - Failed to initialize database pool: invalid DSN: scheme is expected to be either "postgresql" or "postgres", got 'postgresql+asyncpg'
Traceback (most recent call last):
  File "/Users/giorgobg/Desktop/Software Factory/agents/cli/../../agents/db/postgres.py", line 70, in initialize
    self.pool = await asyncpg.create_pool(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/pool.py", line 418, in _async__init__
    await self._initialize()
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/pool.py", line 445, in _initialize
    await first_ch.connect()
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/pool.py", line 132, in connect
    self._con = await self._pool._get_new_connection()
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/pool.py", line 517, in _get_new_connection
    con = await self._connect(
          ^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connection.py", line 2421, in connect
    return await connect_utils._connect(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<20 lines>...
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connect_utils.py", line 1041, in _connect
    addrs, params, config = _parse_connect_arguments(**kwargs)
                            ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connect_utils.py", line 749, in _parse_connect_arguments
    addrs, params = _parse_connect_dsn_and_args(
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        dsn=dsn, host=host, port=port, user=user,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
        target_session_attrs=target_session_attrs,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        krbsrvname=krbsrvname, gsslib=gsslib)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connect_utils.py", line 283, in _parse_connect_dsn_and_args
    raise exceptions.ClientConfigurationError(
        'invalid DSN: scheme is expected to be either '
        '"postgresql" or "postgres", got {!r}'.format(parsed.scheme))
asyncpg.exceptions._base.ClientConfigurationError: invalid DSN: scheme is expected to be either "postgresql" or "postgres", got 'postgresql+asyncpg'
2025-05-04 19:53:33,180 - agent.cli - ERROR - CLI Initialization failed: invalid DSN: scheme is expected to be either "postgresql" or "postgres", got 'postgresql+asyncpg'
Traceback (most recent call last):
  File "/Users/giorgobg/Desktop/Software Factory/agents/cli/agent_cli.py", line 76, in initialize
    await self.db_client.initialize()
  File "/Users/giorgobg/Desktop/Software Factory/agents/cli/../../agents/db/postgres.py", line 70, in initialize
    self.pool = await asyncpg.create_pool(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/pool.py", line 418, in _async__init__
    await self._initialize()
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/pool.py", line 445, in _initialize
    await first_ch.connect()
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/pool.py", line 132, in connect
    self._con = await self._pool._get_new_connection()
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/pool.py", line 517, in _get_new_connection
    con = await self._connect(
          ^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connection.py", line 2421, in connect
    return await connect_utils._connect(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<20 lines>...
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connect_utils.py", line 1041, in _connect
    addrs, params, config = _parse_connect_arguments(**kwargs)
                            ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connect_utils.py", line 749, in _parse_connect_arguments
    addrs, params = _parse_connect_dsn_and_args(
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        dsn=dsn, host=host, port=port, user=user,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
        target_session_attrs=target_session_attrs,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        krbsrvname=krbsrvname, gsslib=gsslib)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connect_utils.py", line 283, in _parse_connect_dsn_and_args
    raise exceptions.ClientConfigurationError(
        'invalid DSN: scheme is expected to be either '
        '"postgresql" or "postgres", got {!r}'.format(parsed.scheme))
asyncpg.exceptions._base.ClientConfigurationError: invalid DSN: scheme is expected to be either "postgresql" or "postgres", got 'postgresql+asyncpg'
2025-05-04 19:53:33,182 - agents.db.postgres - WARNING - Attempted to close an uninitialized or already closed connection pool.
2025-05-04 19:53:33,183 - agent.cli - INFO - CLI resources closed.
2025-05-04 19:54:15,250 - agent.cli - INFO - Initializing CLI services...
2025-05-04 19:54:15,250 - agents.db.postgres - INFO - Initializing PostgreSQL connection pool...
2025-05-04 19:54:15,250 - agents.db.postgres - ERROR - Failed to initialize database pool: invalid DSN: scheme is expected to be either "postgresql" or "postgres", got 'postgresql+asyncpg'
Traceback (most recent call last):
  File "/Users/giorgobg/Desktop/Software Factory/agents/cli/../../agents/db/postgres.py", line 70, in initialize
    self.pool = await asyncpg.create_pool(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/pool.py", line 418, in _async__init__
    await self._initialize()
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/pool.py", line 445, in _initialize
    await first_ch.connect()
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/pool.py", line 132, in connect
    self._con = await self._pool._get_new_connection()
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/pool.py", line 517, in _get_new_connection
    con = await self._connect(
          ^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connection.py", line 2421, in connect
    return await connect_utils._connect(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<20 lines>...
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connect_utils.py", line 1041, in _connect
    addrs, params, config = _parse_connect_arguments(**kwargs)
                            ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connect_utils.py", line 749, in _parse_connect_arguments
    addrs, params = _parse_connect_dsn_and_args(
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        dsn=dsn, host=host, port=port, user=user,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
        target_session_attrs=target_session_attrs,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        krbsrvname=krbsrvname, gsslib=gsslib)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connect_utils.py", line 283, in _parse_connect_dsn_and_args
    raise exceptions.ClientConfigurationError(
        'invalid DSN: scheme is expected to be either '
        '"postgresql" or "postgres", got {!r}'.format(parsed.scheme))
asyncpg.exceptions._base.ClientConfigurationError: invalid DSN: scheme is expected to be either "postgresql" or "postgres", got 'postgresql+asyncpg'
2025-05-04 19:54:15,255 - agent.cli - ERROR - CLI Initialization failed: invalid DSN: scheme is expected to be either "postgresql" or "postgres", got 'postgresql+asyncpg'
Traceback (most recent call last):
  File "/Users/giorgobg/Desktop/Software Factory/agents/cli/agent_cli.py", line 76, in initialize
    await self.db_client.initialize()
  File "/Users/giorgobg/Desktop/Software Factory/agents/cli/../../agents/db/postgres.py", line 70, in initialize
    self.pool = await asyncpg.create_pool(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/pool.py", line 418, in _async__init__
    await self._initialize()
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/pool.py", line 445, in _initialize
    await first_ch.connect()
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/pool.py", line 132, in connect
    self._con = await self._pool._get_new_connection()
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/pool.py", line 517, in _get_new_connection
    con = await self._connect(
          ^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connection.py", line 2421, in connect
    return await connect_utils._connect(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<20 lines>...
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connect_utils.py", line 1041, in _connect
    addrs, params, config = _parse_connect_arguments(**kwargs)
                            ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connect_utils.py", line 749, in _parse_connect_arguments
    addrs, params = _parse_connect_dsn_and_args(
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        dsn=dsn, host=host, port=port, user=user,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
        target_session_attrs=target_session_attrs,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        krbsrvname=krbsrvname, gsslib=gsslib)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connect_utils.py", line 283, in _parse_connect_dsn_and_args
    raise exceptions.ClientConfigurationError(
        'invalid DSN: scheme is expected to be either '
        '"postgresql" or "postgres", got {!r}'.format(parsed.scheme))
asyncpg.exceptions._base.ClientConfigurationError: invalid DSN: scheme is expected to be either "postgresql" or "postgres", got 'postgresql+asyncpg'
2025-05-04 19:54:15,257 - agents.db.postgres - WARNING - Attempted to close an uninitialized or already closed connection pool.
2025-05-04 19:54:15,257 - agent.cli - INFO - CLI resources closed.
2025-05-04 19:55:56,477 - agent.cli - INFO - Initializing CLI services...
2025-05-04 19:55:56,477 - agents.db.postgres - INFO - Initializing PostgreSQL connection pool...
2025-05-04 19:55:56,487 - agents.db.postgres - ERROR - Failed to initialize database pool: [Errno 8] nodename nor servname provided, or not known
Traceback (most recent call last):
  File "/Users/giorgobg/Desktop/Software Factory/agents/cli/../../agents/db/postgres.py", line 70, in initialize
    self.pool = await asyncpg.create_pool(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/pool.py", line 418, in _async__init__
    await self._initialize()
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/pool.py", line 445, in _initialize
    await first_ch.connect()
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/pool.py", line 132, in connect
    self._con = await self._pool._get_new_connection()
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/pool.py", line 517, in _get_new_connection
    con = await self._connect(
          ^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connection.py", line 2421, in connect
    return await connect_utils._connect(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<20 lines>...
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connect_utils.py", line 1075, in _connect
    raise last_error or exceptions.TargetServerAttributeNotMatched(
    ...<2 lines>...
    )
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connect_utils.py", line 1049, in _connect
    conn = await _connect_addr(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connect_utils.py", line 886, in _connect_addr
    return await __connect_addr(params, True, *args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connect_utils.py", line 931, in __connect_addr
    tr, pr = await connector
             ^^^^^^^^^^^^^^^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connect_utils.py", line 802, in _create_ssl_connection
    tr, pr = await loop.create_connection(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<2 lines>...
        host, port)
        ^^^^^^^^^^^
  File "/usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/asyncio/base_events.py", line 1117, in create_connection
    infos = await self._ensure_resolved(
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        (host, port), family=family,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        type=socket.SOCK_STREAM, proto=proto, flags=flags, loop=self)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/asyncio/base_events.py", line 1500, in _ensure_resolved
    return await loop.getaddrinfo(host, port, family=family, type=type,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                  proto=proto, flags=flags)
                                  ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/asyncio/base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 8] nodename nor servname provided, or not known
2025-05-04 19:55:56,496 - agent.cli - ERROR - CLI Initialization failed: [Errno 8] nodename nor servname provided, or not known
Traceback (most recent call last):
  File "/Users/giorgobg/Desktop/Software Factory/agents/cli/agent_cli.py", line 74, in initialize
    await self.db_client.initialize()
  File "/Users/giorgobg/Desktop/Software Factory/agents/cli/../../agents/db/postgres.py", line 70, in initialize
    self.pool = await asyncpg.create_pool(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/pool.py", line 418, in _async__init__
    await self._initialize()
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/pool.py", line 445, in _initialize
    await first_ch.connect()
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/pool.py", line 132, in connect
    self._con = await self._pool._get_new_connection()
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/pool.py", line 517, in _get_new_connection
    con = await self._connect(
          ^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connection.py", line 2421, in connect
    return await connect_utils._connect(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<20 lines>...
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connect_utils.py", line 1075, in _connect
    raise last_error or exceptions.TargetServerAttributeNotMatched(
    ...<2 lines>...
    )
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connect_utils.py", line 1049, in _connect
    conn = await _connect_addr(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connect_utils.py", line 886, in _connect_addr
    return await __connect_addr(params, True, *args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connect_utils.py", line 931, in __connect_addr
    tr, pr = await connector
             ^^^^^^^^^^^^^^^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connect_utils.py", line 802, in _create_ssl_connection
    tr, pr = await loop.create_connection(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<2 lines>...
        host, port)
        ^^^^^^^^^^^
  File "/usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/asyncio/base_events.py", line 1117, in create_connection
    infos = await self._ensure_resolved(
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        (host, port), family=family,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        type=socket.SOCK_STREAM, proto=proto, flags=flags, loop=self)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/asyncio/base_events.py", line 1500, in _ensure_resolved
    return await loop.getaddrinfo(host, port, family=family, type=type,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                  proto=proto, flags=flags)
                                  ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/asyncio/base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/usr/local/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 8] nodename nor servname provided, or not known
2025-05-04 19:55:56,500 - agents.db.postgres - WARNING - Attempted to close an uninitialized or already closed connection pool.
2025-05-04 19:55:56,500 - agent.cli - INFO - CLI resources closed.
2025-05-04 19:57:10,694 - agent.cli - INFO - Initializing CLI services...
2025-05-04 19:57:10,695 - agents.db.postgres - INFO - Initializing PostgreSQL connection pool...
2025-05-04 19:57:10,695 - agents.db.postgres - ERROR - Failed to initialize database pool: invalid DSN: scheme is expected to be either "postgresql" or "postgres", got 'postgresql+asyncpg'
Traceback (most recent call last):
  File "/Users/giorgobg/Desktop/Software Factory/agents/cli/../../agents/db/postgres.py", line 70, in initialize
    self.pool = await asyncpg.create_pool(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/pool.py", line 418, in _async__init__
    await self._initialize()
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/pool.py", line 445, in _initialize
    await first_ch.connect()
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/pool.py", line 132, in connect
    self._con = await self._pool._get_new_connection()
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/pool.py", line 517, in _get_new_connection
    con = await self._connect(
          ^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connection.py", line 2421, in connect
    return await connect_utils._connect(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<20 lines>...
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connect_utils.py", line 1041, in _connect
    addrs, params, config = _parse_connect_arguments(**kwargs)
                            ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connect_utils.py", line 749, in _parse_connect_arguments
    addrs, params = _parse_connect_dsn_and_args(
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        dsn=dsn, host=host, port=port, user=user,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
        target_session_attrs=target_session_attrs,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        krbsrvname=krbsrvname, gsslib=gsslib)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connect_utils.py", line 283, in _parse_connect_dsn_and_args
    raise exceptions.ClientConfigurationError(
        'invalid DSN: scheme is expected to be either '
        '"postgresql" or "postgres", got {!r}'.format(parsed.scheme))
asyncpg.exceptions._base.ClientConfigurationError: invalid DSN: scheme is expected to be either "postgresql" or "postgres", got 'postgresql+asyncpg'
2025-05-04 19:57:10,700 - agent.cli - ERROR - CLI Initialization failed: invalid DSN: scheme is expected to be either "postgresql" or "postgres", got 'postgresql+asyncpg'
Traceback (most recent call last):
  File "/Users/giorgobg/Desktop/Software Factory/agents/cli/agent_cli.py", line 74, in initialize
    await self.db_client.initialize()
  File "/Users/giorgobg/Desktop/Software Factory/agents/cli/../../agents/db/postgres.py", line 70, in initialize
    self.pool = await asyncpg.create_pool(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/pool.py", line 418, in _async__init__
    await self._initialize()
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/pool.py", line 445, in _initialize
    await first_ch.connect()
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/pool.py", line 132, in connect
    self._con = await self._pool._get_new_connection()
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/pool.py", line 517, in _get_new_connection
    con = await self._connect(
          ^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connection.py", line 2421, in connect
    return await connect_utils._connect(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<20 lines>...
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connect_utils.py", line 1041, in _connect
    addrs, params, config = _parse_connect_arguments(**kwargs)
                            ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connect_utils.py", line 749, in _parse_connect_arguments
    addrs, params = _parse_connect_dsn_and_args(
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        dsn=dsn, host=host, port=port, user=user,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
        target_session_attrs=target_session_attrs,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        krbsrvname=krbsrvname, gsslib=gsslib)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connect_utils.py", line 283, in _parse_connect_dsn_and_args
    raise exceptions.ClientConfigurationError(
        'invalid DSN: scheme is expected to be either '
        '"postgresql" or "postgres", got {!r}'.format(parsed.scheme))
asyncpg.exceptions._base.ClientConfigurationError: invalid DSN: scheme is expected to be either "postgresql" or "postgres", got 'postgresql+asyncpg'
2025-05-04 19:57:10,702 - agents.db.postgres - WARNING - Attempted to close an uninitialized or already closed connection pool.
2025-05-04 19:57:10,703 - agent.cli - INFO - CLI resources closed.
2025-05-04 19:57:24,486 - agent.cli - INFO - Initializing CLI services...
2025-05-04 19:57:24,487 - agents.db.postgres - INFO - Initializing PostgreSQL connection pool...
2025-05-04 19:57:24,495 - agents.db.postgres - ERROR - Failed to initialize database pool: role "user" does not exist
Traceback (most recent call last):
  File "/Users/giorgobg/Desktop/Software Factory/agents/cli/../../agents/db/postgres.py", line 70, in initialize
    self.pool = await asyncpg.create_pool(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/pool.py", line 418, in _async__init__
    await self._initialize()
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/pool.py", line 445, in _initialize
    await first_ch.connect()
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/pool.py", line 132, in connect
    self._con = await self._pool._get_new_connection()
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/pool.py", line 517, in _get_new_connection
    con = await self._connect(
          ^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connection.py", line 2421, in connect
    return await connect_utils._connect(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<20 lines>...
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connect_utils.py", line 1049, in _connect
    conn = await _connect_addr(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connect_utils.py", line 886, in _connect_addr
    return await __connect_addr(params, True, *args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connect_utils.py", line 934, in __connect_addr
    await connected
asyncpg.exceptions.InvalidAuthorizationSpecificationError: role "user" does not exist
2025-05-04 19:57:24,500 - agent.cli - ERROR - CLI Initialization failed: role "user" does not exist
Traceback (most recent call last):
  File "/Users/giorgobg/Desktop/Software Factory/agents/cli/agent_cli.py", line 74, in initialize
    await self.db_client.initialize()
  File "/Users/giorgobg/Desktop/Software Factory/agents/cli/../../agents/db/postgres.py", line 70, in initialize
    self.pool = await asyncpg.create_pool(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/pool.py", line 418, in _async__init__
    await self._initialize()
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/pool.py", line 445, in _initialize
    await first_ch.connect()
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/pool.py", line 132, in connect
    self._con = await self._pool._get_new_connection()
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/pool.py", line 517, in _get_new_connection
    con = await self._connect(
          ^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connection.py", line 2421, in connect
    return await connect_utils._connect(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<20 lines>...
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connect_utils.py", line 1049, in _connect
    conn = await _connect_addr(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connect_utils.py", line 886, in _connect_addr
    return await __connect_addr(params, True, *args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connect_utils.py", line 934, in __connect_addr
    await connected
asyncpg.exceptions.InvalidAuthorizationSpecificationError: role "user" does not exist
2025-05-04 19:57:24,502 - agents.db.postgres - WARNING - Attempted to close an uninitialized or already closed connection pool.
2025-05-04 19:57:24,502 - agent.cli - INFO - CLI resources closed.
2025-05-04 19:58:13,059 - agent.cli - INFO - Initializing CLI services...
2025-05-04 19:58:13,059 - agents.db.postgres - INFO - Initializing PostgreSQL connection pool...
2025-05-04 19:58:13,084 - agents.db.postgres - INFO - PostgreSQL connection pool initialized successfully.
2025-05-04 19:58:13,085 - agents.llm.vertex_gemini_provider - INFO - Vertex AI initialized for project 'ai-team-458821' in location 'us-central1'
2025-05-04 19:58:13,085 - agents.llm.vertex_gemini_provider - ERROR - Failed to load model gemini-1.5-flash-001: module 'google.cloud.aiplatform' has no attribute 'GenerativeModel'
Traceback (most recent call last):
  File "/Users/giorgobg/Desktop/Software Factory/agents/cli/../../agents/llm/vertex_gemini_provider.py", line 60, in __init__
    self.model_instance = aiplatform.GenerativeModel(self.model_name)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: module 'google.cloud.aiplatform' has no attribute 'GenerativeModel'
2025-05-04 19:58:13,086 - agent.cli - ERROR - CLI Initialization failed: module 'google.cloud.aiplatform' has no attribute 'GenerativeModel'
Traceback (most recent call last):
  File "/Users/giorgobg/Desktop/Software Factory/agents/cli/agent_cli.py", line 77, in initialize
    self.llm_provider = VertexGeminiProvider()
                        ~~~~~~~~~~~~~~~~~~~~^^
  File "/Users/giorgobg/Desktop/Software Factory/agents/cli/../../agents/llm/vertex_gemini_provider.py", line 60, in __init__
    self.model_instance = aiplatform.GenerativeModel(self.model_name)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: module 'google.cloud.aiplatform' has no attribute 'GenerativeModel'
2025-05-04 19:58:13,087 - agents.db.postgres - INFO - Closing PostgreSQL connection pool...
2025-05-04 19:58:13,091 - agents.db.postgres - INFO - PostgreSQL connection pool closed.
2025-05-04 19:58:13,091 - agent.cli - INFO - CLI resources closed.
2025-05-04 19:59:26,871 - agent.cli - INFO - Initializing CLI services...
2025-05-04 19:59:26,872 - agents.db.postgres - INFO - Initializing PostgreSQL connection pool...
2025-05-04 19:59:26,895 - agents.db.postgres - INFO - PostgreSQL connection pool initialized successfully.
2025-05-04 19:59:26,895 - agents.llm.vertex_gemini_provider - INFO - Vertex AI initialized for project 'ai-team-458821' in location 'us-central1'
2025-05-04 19:59:26,895 - agents.llm.vertex_gemini_provider - ERROR - Failed to load model gemini-1.5-flash-001: module 'google.cloud.aiplatform' has no attribute 'GenerativeModel'
Traceback (most recent call last):
  File "/Users/giorgobg/Desktop/Software Factory/agents/cli/../../agents/llm/vertex_gemini_provider.py", line 60, in __init__
    self.model_instance = aiplatform.GenerativeModel(self.model_name)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: module 'google.cloud.aiplatform' has no attribute 'GenerativeModel'
2025-05-04 19:59:26,900 - agent.cli - ERROR - CLI Initialization failed: module 'google.cloud.aiplatform' has no attribute 'GenerativeModel'
Traceback (most recent call last):
  File "/Users/giorgobg/Desktop/Software Factory/agents/cli/agent_cli.py", line 77, in initialize
    self.llm_provider = VertexGeminiProvider()
                        ~~~~~~~~~~~~~~~~~~~~^^
  File "/Users/giorgobg/Desktop/Software Factory/agents/cli/../../agents/llm/vertex_gemini_provider.py", line 60, in __init__
    self.model_instance = aiplatform.GenerativeModel(self.model_name)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: module 'google.cloud.aiplatform' has no attribute 'GenerativeModel'
2025-05-04 19:59:26,903 - agents.db.postgres - INFO - Closing PostgreSQL connection pool...
2025-05-04 19:59:26,907 - agents.db.postgres - INFO - PostgreSQL connection pool closed.
2025-05-04 19:59:26,908 - agent.cli - INFO - CLI resources closed.
2025-05-04 20:01:46,087 - agent.cli - INFO - Initializing CLI services...
2025-05-04 20:01:46,087 - agents.db.postgres - INFO - Initializing PostgreSQL connection pool...
2025-05-04 20:01:46,108 - agents.db.postgres - INFO - PostgreSQL connection pool initialized successfully.
2025-05-04 20:01:46,108 - agents.llm.vertex_gemini_provider - INFO - Vertex AI initialized for project 'ai-team-458821' in location 'us-central1'
2025-05-04 20:01:46,109 - agents.llm.vertex_gemini_provider - ERROR - Failed to load model gemini-1.5-flash-001: module 'google.cloud.aiplatform' has no attribute 'GenerativeModel'
Traceback (most recent call last):
  File "/Users/giorgobg/Desktop/Software Factory/agents/cli/../../agents/llm/vertex_gemini_provider.py", line 60, in __init__
    self.model_instance = aiplatform.GenerativeModel(self.model_name)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: module 'google.cloud.aiplatform' has no attribute 'GenerativeModel'
2025-05-04 20:01:46,110 - agent.cli - ERROR - CLI Initialization failed: module 'google.cloud.aiplatform' has no attribute 'GenerativeModel'
Traceback (most recent call last):
  File "/Users/giorgobg/Desktop/Software Factory/agents/cli/agent_cli.py", line 77, in initialize
    self.llm_provider = VertexGeminiProvider()
                        ~~~~~~~~~~~~~~~~~~~~^^
  File "/Users/giorgobg/Desktop/Software Factory/agents/cli/../../agents/llm/vertex_gemini_provider.py", line 60, in __init__
    self.model_instance = aiplatform.GenerativeModel(self.model_name)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: module 'google.cloud.aiplatform' has no attribute 'GenerativeModel'
2025-05-04 20:01:46,111 - agents.db.postgres - INFO - Closing PostgreSQL connection pool...
2025-05-04 20:01:46,114 - agents.db.postgres - INFO - PostgreSQL connection pool closed.
2025-05-04 20:01:46,115 - agent.cli - INFO - CLI resources closed.
2025-05-04 20:03:18,032 - agent.cli - INFO - Initializing CLI services...
2025-05-04 20:03:18,032 - agents.db.postgres - INFO - Initializing PostgreSQL connection pool...
2025-05-04 20:03:18,053 - agents.db.postgres - INFO - PostgreSQL connection pool initialized successfully.
2025-05-04 20:03:18,053 - agents.llm.vertex_gemini_provider - INFO - Vertex AI initialized for project 'ai-team-458821' in location 'us-central1'
2025-05-04 20:03:18,053 - agents.llm.vertex_gemini_provider - ERROR - Failed to load model gemini-1.5-flash-001: module 'google.cloud.aiplatform' has no attribute 'GenerativeModel'
Traceback (most recent call last):
  File "/Users/giorgobg/Desktop/Software Factory/agents/cli/../../agents/llm/vertex_gemini_provider.py", line 60, in __init__
    self.model_instance = aiplatform.GenerativeModel(self.model_name)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: module 'google.cloud.aiplatform' has no attribute 'GenerativeModel'
2025-05-04 20:03:18,055 - agent.cli - ERROR - CLI Initialization failed: module 'google.cloud.aiplatform' has no attribute 'GenerativeModel'
Traceback (most recent call last):
  File "/Users/giorgobg/Desktop/Software Factory/agents/cli/agent_cli.py", line 77, in initialize
    self.llm_provider = VertexGeminiProvider()
                        ~~~~~~~~~~~~~~~~~~~~^^
  File "/Users/giorgobg/Desktop/Software Factory/agents/cli/../../agents/llm/vertex_gemini_provider.py", line 60, in __init__
    self.model_instance = aiplatform.GenerativeModel(self.model_name)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: module 'google.cloud.aiplatform' has no attribute 'GenerativeModel'
2025-05-04 20:03:18,056 - agents.db.postgres - INFO - Closing PostgreSQL connection pool...
2025-05-04 20:03:18,059 - agents.db.postgres - INFO - PostgreSQL connection pool closed.
2025-05-04 20:03:18,059 - agent.cli - INFO - CLI resources closed.
2025-05-04 20:05:00,136 - agent.cli - INFO - Initializing CLI services...
2025-05-04 20:05:00,136 - agents.db.postgres - INFO - Initializing PostgreSQL connection pool...
2025-05-04 20:05:00,158 - agents.db.postgres - INFO - PostgreSQL connection pool initialized successfully.
2025-05-04 20:05:00,158 - agents.llm.vertex_gemini_provider - INFO - Vertex AI initialized for project 'ai-team-458821' in location 'us-central1'
2025-05-04 20:05:00,158 - agents.llm.vertex_gemini_provider - INFO - Loaded Gemini model: gemini-1.5-flash-001
2025-05-04 20:05:00,159 - agents.llm.vertex_gemini_provider - ERROR - Failed to load embedding model text-embedding-004: module 'google.cloud.aiplatform' has no attribute 'language_models'
Traceback (most recent call last):
  File "/Users/giorgobg/Desktop/Software Factory/agents/cli/../../agents/llm/vertex_gemini_provider.py", line 76, in __init__
    aiplatform.language_models.TextEmbeddingModel.from_pretrained(
    ^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: module 'google.cloud.aiplatform' has no attribute 'language_models'
2025-05-04 20:05:00,160 - agent.cli - ERROR - CLI Initialization failed: module 'google.cloud.aiplatform' has no attribute 'language_models'
Traceback (most recent call last):
  File "/Users/giorgobg/Desktop/Software Factory/agents/cli/agent_cli.py", line 77, in initialize
    self.llm_provider = VertexGeminiProvider()
                        ~~~~~~~~~~~~~~~~~~~~^^
  File "/Users/giorgobg/Desktop/Software Factory/agents/cli/../../agents/llm/vertex_gemini_provider.py", line 76, in __init__
    aiplatform.language_models.TextEmbeddingModel.from_pretrained(
    ^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: module 'google.cloud.aiplatform' has no attribute 'language_models'
2025-05-04 20:05:00,161 - agents.db.postgres - INFO - Closing PostgreSQL connection pool...
2025-05-04 20:05:00,165 - agents.db.postgres - INFO - PostgreSQL connection pool closed.
2025-05-04 20:05:00,165 - agent.cli - INFO - CLI resources closed.
2025-05-04 20:05:29,550 - agent.cli - INFO - Initializing CLI services...
2025-05-04 20:05:29,550 - agents.db.postgres - INFO - Initializing PostgreSQL connection pool...
2025-05-04 20:05:29,572 - agents.db.postgres - INFO - PostgreSQL connection pool initialized successfully.
2025-05-04 20:05:29,572 - agents.llm.vertex_gemini_provider - INFO - Vertex AI initialized for project 'ai-team-458821' in location 'us-central1'
2025-05-04 20:05:29,572 - agents.llm.vertex_gemini_provider - INFO - Loaded Gemini model: gemini-1.5-flash-001
2025-05-04 20:05:34,569 - agents.llm.vertex_gemini_provider - ERROR - Failed to load embedding model text-embedding-004: 403 Caller does not have required permission to use project development-449400. Grant the caller the roles/serviceusage.serviceUsageConsumer role, or a custom role with the serviceusage.services.use permission, by visiting https://console.developers.google.com/iam-admin/iam/project?project=development-449400 and then retry. Propagation of the new permission may take a few minutes. [reason: "USER_PROJECT_DENIED"
domain: "googleapis.com"
metadata {
  key: "service"
  value: "aiplatform.googleapis.com"
}
metadata {
  key: "containerInfo"
  value: "development-449400"
}
metadata {
  key: "consumer"
  value: "projects/development-449400"
}
, locale: "en-US"
message: "Caller does not have required permission to use project development-449400. Grant the caller the roles/serviceusage.serviceUsageConsumer role, or a custom role with the serviceusage.services.use permission, by visiting https://console.developers.google.com/iam-admin/iam/project?project=development-449400 and then retry. Propagation of the new permission may take a few minutes."
, links {
  description: "Google developer console IAM admin"
  url: "https://console.developers.google.com/iam-admin/iam/project?project=development-449400"
}
]
Traceback (most recent call last):
  File "/Users/giorgobg/Desktop/Software Factory/agents/cli/../../agents/llm/vertex_gemini_provider.py", line 79, in __init__
    self.embedding_model = TextEmbeddingModel.from_pretrained(
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.embedding_model_name
        ^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/vertexai/_model_garden/_model_garden_models.py", line 289, in from_pretrained
    return _from_pretrained(interface_class=cls, model_name=model_name)
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/vertexai/_model_garden/_model_garden_models.py", line 206, in _from_pretrained
    model_info = _get_model_info(
        model_id=model_name,
        schema_to_class_map={interface_class._INSTANCE_SCHEMA_URI: interface_class},
    )
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/vertexai/_model_garden/_model_garden_models.py", line 122, in _get_model_info
    _publisher_models._PublisherModel(  # pylint: disable=protected-access
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        resource_name=model_id
        ^^^^^^^^^^^^^^^^^^^^^^
    )._gca_resource
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/cloud/aiplatform/_publisher_models.py", line 77, in __init__
    self._gca_resource = getattr(self.api_client, self._getter_method)(
                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        name=full_resource_name, retry=base._DEFAULT_RETRY
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/cloud/aiplatform_v1/services/model_garden_service/client.py", line 876, in get_publisher_model
    response = rpc(
        request,
    ...<2 lines>...
        metadata=metadata,
    )
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/gapic_v1/method.py", line 131, in __call__
    return wrapped_func(*args, **kwargs)
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 294, in retry_wrapped_func
    return retry_target(
        target,
    ...<3 lines>...
        on_error=on_error,
    )
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 156, in retry_target
    next_sleep = _retry_error_helper(
        exc,
    ...<6 lines>...
        timeout,
    )
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/retry/retry_base.py", line 214, in _retry_error_helper
    raise final_exc from source_exc
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 147, in retry_target
    result = target()
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 78, in error_remapped_callable
    raise exceptions.from_grpc_error(exc) from exc
google.api_core.exceptions.PermissionDenied: 403 Caller does not have required permission to use project development-449400. Grant the caller the roles/serviceusage.serviceUsageConsumer role, or a custom role with the serviceusage.services.use permission, by visiting https://console.developers.google.com/iam-admin/iam/project?project=development-449400 and then retry. Propagation of the new permission may take a few minutes. [reason: "USER_PROJECT_DENIED"
domain: "googleapis.com"
metadata {
  key: "service"
  value: "aiplatform.googleapis.com"
}
metadata {
  key: "containerInfo"
  value: "development-449400"
}
metadata {
  key: "consumer"
  value: "projects/development-449400"
}
, locale: "en-US"
message: "Caller does not have required permission to use project development-449400. Grant the caller the roles/serviceusage.serviceUsageConsumer role, or a custom role with the serviceusage.services.use permission, by visiting https://console.developers.google.com/iam-admin/iam/project?project=development-449400 and then retry. Propagation of the new permission may take a few minutes."
, links {
  description: "Google developer console IAM admin"
  url: "https://console.developers.google.com/iam-admin/iam/project?project=development-449400"
}
]
2025-05-04 20:05:34,575 - agent.cli - ERROR - CLI Initialization failed: 403 Caller does not have required permission to use project development-449400. Grant the caller the roles/serviceusage.serviceUsageConsumer role, or a custom role with the serviceusage.services.use permission, by visiting https://console.developers.google.com/iam-admin/iam/project?project=development-449400 and then retry. Propagation of the new permission may take a few minutes. [reason: "USER_PROJECT_DENIED"
domain: "googleapis.com"
metadata {
  key: "service"
  value: "aiplatform.googleapis.com"
}
metadata {
  key: "containerInfo"
  value: "development-449400"
}
metadata {
  key: "consumer"
  value: "projects/development-449400"
}
, locale: "en-US"
message: "Caller does not have required permission to use project development-449400. Grant the caller the roles/serviceusage.serviceUsageConsumer role, or a custom role with the serviceusage.services.use permission, by visiting https://console.developers.google.com/iam-admin/iam/project?project=development-449400 and then retry. Propagation of the new permission may take a few minutes."
, links {
  description: "Google developer console IAM admin"
  url: "https://console.developers.google.com/iam-admin/iam/project?project=development-449400"
}
]
Traceback (most recent call last):
  File "/Users/giorgobg/Desktop/Software Factory/agents/cli/agent_cli.py", line 77, in initialize
    self.llm_provider = VertexGeminiProvider()
                        ~~~~~~~~~~~~~~~~~~~~^^
  File "/Users/giorgobg/Desktop/Software Factory/agents/cli/../../agents/llm/vertex_gemini_provider.py", line 79, in __init__
    self.embedding_model = TextEmbeddingModel.from_pretrained(
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.embedding_model_name
        ^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/vertexai/_model_garden/_model_garden_models.py", line 289, in from_pretrained
    return _from_pretrained(interface_class=cls, model_name=model_name)
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/vertexai/_model_garden/_model_garden_models.py", line 206, in _from_pretrained
    model_info = _get_model_info(
        model_id=model_name,
        schema_to_class_map={interface_class._INSTANCE_SCHEMA_URI: interface_class},
    )
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/vertexai/_model_garden/_model_garden_models.py", line 122, in _get_model_info
    _publisher_models._PublisherModel(  # pylint: disable=protected-access
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        resource_name=model_id
        ^^^^^^^^^^^^^^^^^^^^^^
    )._gca_resource
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/cloud/aiplatform/_publisher_models.py", line 77, in __init__
    self._gca_resource = getattr(self.api_client, self._getter_method)(
                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        name=full_resource_name, retry=base._DEFAULT_RETRY
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/cloud/aiplatform_v1/services/model_garden_service/client.py", line 876, in get_publisher_model
    response = rpc(
        request,
    ...<2 lines>...
        metadata=metadata,
    )
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/gapic_v1/method.py", line 131, in __call__
    return wrapped_func(*args, **kwargs)
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 294, in retry_wrapped_func
    return retry_target(
        target,
    ...<3 lines>...
        on_error=on_error,
    )
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 156, in retry_target
    next_sleep = _retry_error_helper(
        exc,
    ...<6 lines>...
        timeout,
    )
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/retry/retry_base.py", line 214, in _retry_error_helper
    raise final_exc from source_exc
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 147, in retry_target
    result = target()
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 78, in error_remapped_callable
    raise exceptions.from_grpc_error(exc) from exc
google.api_core.exceptions.PermissionDenied: 403 Caller does not have required permission to use project development-449400. Grant the caller the roles/serviceusage.serviceUsageConsumer role, or a custom role with the serviceusage.services.use permission, by visiting https://console.developers.google.com/iam-admin/iam/project?project=development-449400 and then retry. Propagation of the new permission may take a few minutes. [reason: "USER_PROJECT_DENIED"
domain: "googleapis.com"
metadata {
  key: "service"
  value: "aiplatform.googleapis.com"
}
metadata {
  key: "containerInfo"
  value: "development-449400"
}
metadata {
  key: "consumer"
  value: "projects/development-449400"
}
, locale: "en-US"
message: "Caller does not have required permission to use project development-449400. Grant the caller the roles/serviceusage.serviceUsageConsumer role, or a custom role with the serviceusage.services.use permission, by visiting https://console.developers.google.com/iam-admin/iam/project?project=development-449400 and then retry. Propagation of the new permission may take a few minutes."
, links {
  description: "Google developer console IAM admin"
  url: "https://console.developers.google.com/iam-admin/iam/project?project=development-449400"
}
]
2025-05-04 20:05:34,578 - agents.db.postgres - INFO - Closing PostgreSQL connection pool...
2025-05-04 20:05:34,588 - agents.db.postgres - INFO - PostgreSQL connection pool closed.
2025-05-04 20:05:34,588 - agent.cli - INFO - CLI resources closed.
2025-05-04 20:06:45,564 - agent.cli - INFO - Initializing CLI services...
2025-05-04 20:06:45,564 - agents.db.postgres - INFO - Initializing PostgreSQL connection pool...
2025-05-04 20:06:45,585 - agents.db.postgres - INFO - PostgreSQL connection pool initialized successfully.
2025-05-04 20:06:45,586 - agents.llm.vertex_gemini_provider - INFO - Vertex AI initialized for project 'ai-team-458821' in location 'us-central1'
2025-05-04 20:06:45,586 - agents.llm.vertex_gemini_provider - INFO - Loaded Gemini model: gemini-1.5-flash-001
2025-05-04 20:06:47,295 - agents.llm.vertex_gemini_provider - ERROR - Failed to load embedding model text-embedding-004: 403 Caller does not have required permission to use project development-449400. Grant the caller the roles/serviceusage.serviceUsageConsumer role, or a custom role with the serviceusage.services.use permission, by visiting https://console.developers.google.com/iam-admin/iam/project?project=development-449400 and then retry. Propagation of the new permission may take a few minutes. [reason: "USER_PROJECT_DENIED"
domain: "googleapis.com"
metadata {
  key: "service"
  value: "aiplatform.googleapis.com"
}
metadata {
  key: "containerInfo"
  value: "development-449400"
}
metadata {
  key: "consumer"
  value: "projects/development-449400"
}
, locale: "en-US"
message: "Caller does not have required permission to use project development-449400. Grant the caller the roles/serviceusage.serviceUsageConsumer role, or a custom role with the serviceusage.services.use permission, by visiting https://console.developers.google.com/iam-admin/iam/project?project=development-449400 and then retry. Propagation of the new permission may take a few minutes."
, links {
  description: "Google developer console IAM admin"
  url: "https://console.developers.google.com/iam-admin/iam/project?project=development-449400"
}
]
Traceback (most recent call last):
  File "/Users/giorgobg/Desktop/Software Factory/agents/cli/../../agents/llm/vertex_gemini_provider.py", line 79, in __init__
    self.embedding_model = TextEmbeddingModel.from_pretrained(
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.embedding_model_name
        ^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/vertexai/_model_garden/_model_garden_models.py", line 289, in from_pretrained
    return _from_pretrained(interface_class=cls, model_name=model_name)
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/vertexai/_model_garden/_model_garden_models.py", line 206, in _from_pretrained
    model_info = _get_model_info(
        model_id=model_name,
        schema_to_class_map={interface_class._INSTANCE_SCHEMA_URI: interface_class},
    )
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/vertexai/_model_garden/_model_garden_models.py", line 122, in _get_model_info
    _publisher_models._PublisherModel(  # pylint: disable=protected-access
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        resource_name=model_id
        ^^^^^^^^^^^^^^^^^^^^^^
    )._gca_resource
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/cloud/aiplatform/_publisher_models.py", line 77, in __init__
    self._gca_resource = getattr(self.api_client, self._getter_method)(
                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        name=full_resource_name, retry=base._DEFAULT_RETRY
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/cloud/aiplatform_v1/services/model_garden_service/client.py", line 876, in get_publisher_model
    response = rpc(
        request,
    ...<2 lines>...
        metadata=metadata,
    )
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/gapic_v1/method.py", line 131, in __call__
    return wrapped_func(*args, **kwargs)
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 294, in retry_wrapped_func
    return retry_target(
        target,
    ...<3 lines>...
        on_error=on_error,
    )
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 156, in retry_target
    next_sleep = _retry_error_helper(
        exc,
    ...<6 lines>...
        timeout,
    )
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/retry/retry_base.py", line 214, in _retry_error_helper
    raise final_exc from source_exc
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 147, in retry_target
    result = target()
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 78, in error_remapped_callable
    raise exceptions.from_grpc_error(exc) from exc
google.api_core.exceptions.PermissionDenied: 403 Caller does not have required permission to use project development-449400. Grant the caller the roles/serviceusage.serviceUsageConsumer role, or a custom role with the serviceusage.services.use permission, by visiting https://console.developers.google.com/iam-admin/iam/project?project=development-449400 and then retry. Propagation of the new permission may take a few minutes. [reason: "USER_PROJECT_DENIED"
domain: "googleapis.com"
metadata {
  key: "service"
  value: "aiplatform.googleapis.com"
}
metadata {
  key: "containerInfo"
  value: "development-449400"
}
metadata {
  key: "consumer"
  value: "projects/development-449400"
}
, locale: "en-US"
message: "Caller does not have required permission to use project development-449400. Grant the caller the roles/serviceusage.serviceUsageConsumer role, or a custom role with the serviceusage.services.use permission, by visiting https://console.developers.google.com/iam-admin/iam/project?project=development-449400 and then retry. Propagation of the new permission may take a few minutes."
, links {
  description: "Google developer console IAM admin"
  url: "https://console.developers.google.com/iam-admin/iam/project?project=development-449400"
}
]
2025-05-04 20:06:47,301 - agent.cli - ERROR - CLI Initialization failed: 403 Caller does not have required permission to use project development-449400. Grant the caller the roles/serviceusage.serviceUsageConsumer role, or a custom role with the serviceusage.services.use permission, by visiting https://console.developers.google.com/iam-admin/iam/project?project=development-449400 and then retry. Propagation of the new permission may take a few minutes. [reason: "USER_PROJECT_DENIED"
domain: "googleapis.com"
metadata {
  key: "service"
  value: "aiplatform.googleapis.com"
}
metadata {
  key: "containerInfo"
  value: "development-449400"
}
metadata {
  key: "consumer"
  value: "projects/development-449400"
}
, locale: "en-US"
message: "Caller does not have required permission to use project development-449400. Grant the caller the roles/serviceusage.serviceUsageConsumer role, or a custom role with the serviceusage.services.use permission, by visiting https://console.developers.google.com/iam-admin/iam/project?project=development-449400 and then retry. Propagation of the new permission may take a few minutes."
, links {
  description: "Google developer console IAM admin"
  url: "https://console.developers.google.com/iam-admin/iam/project?project=development-449400"
}
]
Traceback (most recent call last):
  File "/Users/giorgobg/Desktop/Software Factory/agents/cli/agent_cli.py", line 77, in initialize
    self.llm_provider = VertexGeminiProvider()
                        ~~~~~~~~~~~~~~~~~~~~^^
  File "/Users/giorgobg/Desktop/Software Factory/agents/cli/../../agents/llm/vertex_gemini_provider.py", line 79, in __init__
    self.embedding_model = TextEmbeddingModel.from_pretrained(
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.embedding_model_name
        ^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/vertexai/_model_garden/_model_garden_models.py", line 289, in from_pretrained
    return _from_pretrained(interface_class=cls, model_name=model_name)
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/vertexai/_model_garden/_model_garden_models.py", line 206, in _from_pretrained
    model_info = _get_model_info(
        model_id=model_name,
        schema_to_class_map={interface_class._INSTANCE_SCHEMA_URI: interface_class},
    )
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/vertexai/_model_garden/_model_garden_models.py", line 122, in _get_model_info
    _publisher_models._PublisherModel(  # pylint: disable=protected-access
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        resource_name=model_id
        ^^^^^^^^^^^^^^^^^^^^^^
    )._gca_resource
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/cloud/aiplatform/_publisher_models.py", line 77, in __init__
    self._gca_resource = getattr(self.api_client, self._getter_method)(
                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        name=full_resource_name, retry=base._DEFAULT_RETRY
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/cloud/aiplatform_v1/services/model_garden_service/client.py", line 876, in get_publisher_model
    response = rpc(
        request,
    ...<2 lines>...
        metadata=metadata,
    )
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/gapic_v1/method.py", line 131, in __call__
    return wrapped_func(*args, **kwargs)
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 294, in retry_wrapped_func
    return retry_target(
        target,
    ...<3 lines>...
        on_error=on_error,
    )
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 156, in retry_target
    next_sleep = _retry_error_helper(
        exc,
    ...<6 lines>...
        timeout,
    )
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/retry/retry_base.py", line 214, in _retry_error_helper
    raise final_exc from source_exc
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 147, in retry_target
    result = target()
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 78, in error_remapped_callable
    raise exceptions.from_grpc_error(exc) from exc
google.api_core.exceptions.PermissionDenied: 403 Caller does not have required permission to use project development-449400. Grant the caller the roles/serviceusage.serviceUsageConsumer role, or a custom role with the serviceusage.services.use permission, by visiting https://console.developers.google.com/iam-admin/iam/project?project=development-449400 and then retry. Propagation of the new permission may take a few minutes. [reason: "USER_PROJECT_DENIED"
domain: "googleapis.com"
metadata {
  key: "service"
  value: "aiplatform.googleapis.com"
}
metadata {
  key: "containerInfo"
  value: "development-449400"
}
metadata {
  key: "consumer"
  value: "projects/development-449400"
}
, locale: "en-US"
message: "Caller does not have required permission to use project development-449400. Grant the caller the roles/serviceusage.serviceUsageConsumer role, or a custom role with the serviceusage.services.use permission, by visiting https://console.developers.google.com/iam-admin/iam/project?project=development-449400 and then retry. Propagation of the new permission may take a few minutes."
, links {
  description: "Google developer console IAM admin"
  url: "https://console.developers.google.com/iam-admin/iam/project?project=development-449400"
}
]
2025-05-04 20:06:47,304 - agents.db.postgres - INFO - Closing PostgreSQL connection pool...
2025-05-04 20:06:47,308 - agents.db.postgres - INFO - PostgreSQL connection pool closed.
2025-05-04 20:06:47,308 - agent.cli - INFO - CLI resources closed.
2025-05-04 20:07:29,046 - agent.cli - INFO - Initializing CLI services...
2025-05-04 20:07:29,046 - agents.db.postgres - INFO - Initializing PostgreSQL connection pool...
2025-05-04 20:07:29,067 - agents.db.postgres - INFO - PostgreSQL connection pool initialized successfully.
2025-05-04 20:07:29,068 - agents.llm.vertex_gemini_provider - INFO - Vertex AI initialized for project 'ai-team-458821' in location 'us-central1'
2025-05-04 20:07:29,068 - agents.llm.vertex_gemini_provider - INFO - Loaded Gemini model: gemini-1.5-flash-001
2025-05-04 20:07:30,941 - agents.llm.vertex_gemini_provider - ERROR - Failed to load embedding model text-embedding-004: 403 Vertex AI API has not been used in project ai-team-458821 before or it is disabled. Enable it by visiting https://console.developers.google.com/apis/api/aiplatform.googleapis.com/overview?project=ai-team-458821 then retry. If you enabled this API recently, wait a few minutes for the action to propagate to our systems and retry. [reason: "SERVICE_DISABLED"
domain: "googleapis.com"
metadata {
  key: "service"
  value: "aiplatform.googleapis.com"
}
metadata {
  key: "serviceTitle"
  value: "Vertex AI API"
}
metadata {
  key: "containerInfo"
  value: "ai-team-458821"
}
metadata {
  key: "consumer"
  value: "projects/ai-team-458821"
}
metadata {
  key: "activationUrl"
  value: "https://console.developers.google.com/apis/api/aiplatform.googleapis.com/overview?project=ai-team-458821"
}
, locale: "en-US"
message: "Vertex AI API has not been used in project ai-team-458821 before or it is disabled. Enable it by visiting https://console.developers.google.com/apis/api/aiplatform.googleapis.com/overview?project=ai-team-458821 then retry. If you enabled this API recently, wait a few minutes for the action to propagate to our systems and retry."
, links {
  description: "Google developers console API activation"
  url: "https://console.developers.google.com/apis/api/aiplatform.googleapis.com/overview?project=ai-team-458821"
}
]
Traceback (most recent call last):
  File "/Users/giorgobg/Desktop/Software Factory/agents/cli/../../agents/llm/vertex_gemini_provider.py", line 79, in __init__
    self.embedding_model = TextEmbeddingModel.from_pretrained(
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.embedding_model_name
        ^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/vertexai/_model_garden/_model_garden_models.py", line 289, in from_pretrained
    return _from_pretrained(interface_class=cls, model_name=model_name)
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/vertexai/_model_garden/_model_garden_models.py", line 206, in _from_pretrained
    model_info = _get_model_info(
        model_id=model_name,
        schema_to_class_map={interface_class._INSTANCE_SCHEMA_URI: interface_class},
    )
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/vertexai/_model_garden/_model_garden_models.py", line 122, in _get_model_info
    _publisher_models._PublisherModel(  # pylint: disable=protected-access
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        resource_name=model_id
        ^^^^^^^^^^^^^^^^^^^^^^
    )._gca_resource
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/cloud/aiplatform/_publisher_models.py", line 77, in __init__
    self._gca_resource = getattr(self.api_client, self._getter_method)(
                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        name=full_resource_name, retry=base._DEFAULT_RETRY
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/cloud/aiplatform_v1/services/model_garden_service/client.py", line 876, in get_publisher_model
    response = rpc(
        request,
    ...<2 lines>...
        metadata=metadata,
    )
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/gapic_v1/method.py", line 131, in __call__
    return wrapped_func(*args, **kwargs)
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 294, in retry_wrapped_func
    return retry_target(
        target,
    ...<3 lines>...
        on_error=on_error,
    )
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 156, in retry_target
    next_sleep = _retry_error_helper(
        exc,
    ...<6 lines>...
        timeout,
    )
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/retry/retry_base.py", line 214, in _retry_error_helper
    raise final_exc from source_exc
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 147, in retry_target
    result = target()
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 78, in error_remapped_callable
    raise exceptions.from_grpc_error(exc) from exc
google.api_core.exceptions.PermissionDenied: 403 Vertex AI API has not been used in project ai-team-458821 before or it is disabled. Enable it by visiting https://console.developers.google.com/apis/api/aiplatform.googleapis.com/overview?project=ai-team-458821 then retry. If you enabled this API recently, wait a few minutes for the action to propagate to our systems and retry. [reason: "SERVICE_DISABLED"
domain: "googleapis.com"
metadata {
  key: "service"
  value: "aiplatform.googleapis.com"
}
metadata {
  key: "serviceTitle"
  value: "Vertex AI API"
}
metadata {
  key: "containerInfo"
  value: "ai-team-458821"
}
metadata {
  key: "consumer"
  value: "projects/ai-team-458821"
}
metadata {
  key: "activationUrl"
  value: "https://console.developers.google.com/apis/api/aiplatform.googleapis.com/overview?project=ai-team-458821"
}
, locale: "en-US"
message: "Vertex AI API has not been used in project ai-team-458821 before or it is disabled. Enable it by visiting https://console.developers.google.com/apis/api/aiplatform.googleapis.com/overview?project=ai-team-458821 then retry. If you enabled this API recently, wait a few minutes for the action to propagate to our systems and retry."
, links {
  description: "Google developers console API activation"
  url: "https://console.developers.google.com/apis/api/aiplatform.googleapis.com/overview?project=ai-team-458821"
}
]
2025-05-04 20:07:30,947 - agent.cli - ERROR - CLI Initialization failed: 403 Vertex AI API has not been used in project ai-team-458821 before or it is disabled. Enable it by visiting https://console.developers.google.com/apis/api/aiplatform.googleapis.com/overview?project=ai-team-458821 then retry. If you enabled this API recently, wait a few minutes for the action to propagate to our systems and retry. [reason: "SERVICE_DISABLED"
domain: "googleapis.com"
metadata {
  key: "service"
  value: "aiplatform.googleapis.com"
}
metadata {
  key: "serviceTitle"
  value: "Vertex AI API"
}
metadata {
  key: "containerInfo"
  value: "ai-team-458821"
}
metadata {
  key: "consumer"
  value: "projects/ai-team-458821"
}
metadata {
  key: "activationUrl"
  value: "https://console.developers.google.com/apis/api/aiplatform.googleapis.com/overview?project=ai-team-458821"
}
, locale: "en-US"
message: "Vertex AI API has not been used in project ai-team-458821 before or it is disabled. Enable it by visiting https://console.developers.google.com/apis/api/aiplatform.googleapis.com/overview?project=ai-team-458821 then retry. If you enabled this API recently, wait a few minutes for the action to propagate to our systems and retry."
, links {
  description: "Google developers console API activation"
  url: "https://console.developers.google.com/apis/api/aiplatform.googleapis.com/overview?project=ai-team-458821"
}
]
Traceback (most recent call last):
  File "/Users/giorgobg/Desktop/Software Factory/agents/cli/agent_cli.py", line 77, in initialize
    self.llm_provider = VertexGeminiProvider()
                        ~~~~~~~~~~~~~~~~~~~~^^
  File "/Users/giorgobg/Desktop/Software Factory/agents/cli/../../agents/llm/vertex_gemini_provider.py", line 79, in __init__
    self.embedding_model = TextEmbeddingModel.from_pretrained(
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.embedding_model_name
        ^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/vertexai/_model_garden/_model_garden_models.py", line 289, in from_pretrained
    return _from_pretrained(interface_class=cls, model_name=model_name)
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/vertexai/_model_garden/_model_garden_models.py", line 206, in _from_pretrained
    model_info = _get_model_info(
        model_id=model_name,
        schema_to_class_map={interface_class._INSTANCE_SCHEMA_URI: interface_class},
    )
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/vertexai/_model_garden/_model_garden_models.py", line 122, in _get_model_info
    _publisher_models._PublisherModel(  # pylint: disable=protected-access
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        resource_name=model_id
        ^^^^^^^^^^^^^^^^^^^^^^
    )._gca_resource
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/cloud/aiplatform/_publisher_models.py", line 77, in __init__
    self._gca_resource = getattr(self.api_client, self._getter_method)(
                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        name=full_resource_name, retry=base._DEFAULT_RETRY
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/cloud/aiplatform_v1/services/model_garden_service/client.py", line 876, in get_publisher_model
    response = rpc(
        request,
    ...<2 lines>...
        metadata=metadata,
    )
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/gapic_v1/method.py", line 131, in __call__
    return wrapped_func(*args, **kwargs)
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 294, in retry_wrapped_func
    return retry_target(
        target,
    ...<3 lines>...
        on_error=on_error,
    )
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 156, in retry_target
    next_sleep = _retry_error_helper(
        exc,
    ...<6 lines>...
        timeout,
    )
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/retry/retry_base.py", line 214, in _retry_error_helper
    raise final_exc from source_exc
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 147, in retry_target
    result = target()
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 78, in error_remapped_callable
    raise exceptions.from_grpc_error(exc) from exc
google.api_core.exceptions.PermissionDenied: 403 Vertex AI API has not been used in project ai-team-458821 before or it is disabled. Enable it by visiting https://console.developers.google.com/apis/api/aiplatform.googleapis.com/overview?project=ai-team-458821 then retry. If you enabled this API recently, wait a few minutes for the action to propagate to our systems and retry. [reason: "SERVICE_DISABLED"
domain: "googleapis.com"
metadata {
  key: "service"
  value: "aiplatform.googleapis.com"
}
metadata {
  key: "serviceTitle"
  value: "Vertex AI API"
}
metadata {
  key: "containerInfo"
  value: "ai-team-458821"
}
metadata {
  key: "consumer"
  value: "projects/ai-team-458821"
}
metadata {
  key: "activationUrl"
  value: "https://console.developers.google.com/apis/api/aiplatform.googleapis.com/overview?project=ai-team-458821"
}
, locale: "en-US"
message: "Vertex AI API has not been used in project ai-team-458821 before or it is disabled. Enable it by visiting https://console.developers.google.com/apis/api/aiplatform.googleapis.com/overview?project=ai-team-458821 then retry. If you enabled this API recently, wait a few minutes for the action to propagate to our systems and retry."
, links {
  description: "Google developers console API activation"
  url: "https://console.developers.google.com/apis/api/aiplatform.googleapis.com/overview?project=ai-team-458821"
}
]
2025-05-04 20:07:30,951 - agents.db.postgres - INFO - Closing PostgreSQL connection pool...
2025-05-04 20:07:30,955 - agents.db.postgres - INFO - PostgreSQL connection pool closed.
2025-05-04 20:07:30,955 - agent.cli - INFO - CLI resources closed.
2025-05-04 20:14:51,763 - agent.cli - INFO - Initializing CLI services...
2025-05-04 20:14:51,763 - agents.db.postgres - INFO - Initializing PostgreSQL connection pool...
2025-05-04 20:14:51,784 - agents.db.postgres - INFO - PostgreSQL connection pool initialized successfully.
2025-05-04 20:14:51,784 - agents.llm.vertex_gemini_provider - INFO - Vertex AI initialized for project 'ai-team-458821' in location 'us-central1'
2025-05-04 20:14:51,784 - agents.llm.vertex_gemini_provider - INFO - Loaded Gemini model: gemini-1.5-flash-001
2025-05-04 20:14:53,488 - agents.llm.vertex_gemini_provider - ERROR - Failed to load embedding model text-embedding-004: 403 This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry. [reason: "BILLING_DISABLED"
domain: "googleapis.com"
metadata {
  key: "service"
  value: "aiplatform.googleapis.com"
}
metadata {
  key: "containerInfo"
  value: "ai-team-458821"
}
metadata {
  key: "consumer"
  value: "projects/ai-team-458821"
}
, locale: "en-US"
message: "This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry."
, links {
  description: "Google developers console billing"
  url: "https://console.developers.google.com/billing/enable?project=ai-team-458821"
}
]
Traceback (most recent call last):
  File "/Users/giorgobg/Desktop/Software Factory/agents/cli/../../agents/llm/vertex_gemini_provider.py", line 79, in __init__
    self.embedding_model = TextEmbeddingModel.from_pretrained(
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.embedding_model_name
        ^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/vertexai/_model_garden/_model_garden_models.py", line 289, in from_pretrained
    return _from_pretrained(interface_class=cls, model_name=model_name)
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/vertexai/_model_garden/_model_garden_models.py", line 206, in _from_pretrained
    model_info = _get_model_info(
        model_id=model_name,
        schema_to_class_map={interface_class._INSTANCE_SCHEMA_URI: interface_class},
    )
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/vertexai/_model_garden/_model_garden_models.py", line 122, in _get_model_info
    _publisher_models._PublisherModel(  # pylint: disable=protected-access
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        resource_name=model_id
        ^^^^^^^^^^^^^^^^^^^^^^
    )._gca_resource
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/cloud/aiplatform/_publisher_models.py", line 77, in __init__
    self._gca_resource = getattr(self.api_client, self._getter_method)(
                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        name=full_resource_name, retry=base._DEFAULT_RETRY
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/cloud/aiplatform_v1/services/model_garden_service/client.py", line 876, in get_publisher_model
    response = rpc(
        request,
    ...<2 lines>...
        metadata=metadata,
    )
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/gapic_v1/method.py", line 131, in __call__
    return wrapped_func(*args, **kwargs)
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 294, in retry_wrapped_func
    return retry_target(
        target,
    ...<3 lines>...
        on_error=on_error,
    )
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 156, in retry_target
    next_sleep = _retry_error_helper(
        exc,
    ...<6 lines>...
        timeout,
    )
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/retry/retry_base.py", line 214, in _retry_error_helper
    raise final_exc from source_exc
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 147, in retry_target
    result = target()
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 78, in error_remapped_callable
    raise exceptions.from_grpc_error(exc) from exc
google.api_core.exceptions.PermissionDenied: 403 This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry. [reason: "BILLING_DISABLED"
domain: "googleapis.com"
metadata {
  key: "service"
  value: "aiplatform.googleapis.com"
}
metadata {
  key: "containerInfo"
  value: "ai-team-458821"
}
metadata {
  key: "consumer"
  value: "projects/ai-team-458821"
}
, locale: "en-US"
message: "This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry."
, links {
  description: "Google developers console billing"
  url: "https://console.developers.google.com/billing/enable?project=ai-team-458821"
}
]
2025-05-04 20:14:53,494 - agent.cli - ERROR - CLI Initialization failed: 403 This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry. [reason: "BILLING_DISABLED"
domain: "googleapis.com"
metadata {
  key: "service"
  value: "aiplatform.googleapis.com"
}
metadata {
  key: "containerInfo"
  value: "ai-team-458821"
}
metadata {
  key: "consumer"
  value: "projects/ai-team-458821"
}
, locale: "en-US"
message: "This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry."
, links {
  description: "Google developers console billing"
  url: "https://console.developers.google.com/billing/enable?project=ai-team-458821"
}
]
Traceback (most recent call last):
  File "/Users/giorgobg/Desktop/Software Factory/agents/cli/agent_cli.py", line 77, in initialize
    self.llm_provider = VertexGeminiProvider()
                        ~~~~~~~~~~~~~~~~~~~~^^
  File "/Users/giorgobg/Desktop/Software Factory/agents/cli/../../agents/llm/vertex_gemini_provider.py", line 79, in __init__
    self.embedding_model = TextEmbeddingModel.from_pretrained(
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.embedding_model_name
        ^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/vertexai/_model_garden/_model_garden_models.py", line 289, in from_pretrained
    return _from_pretrained(interface_class=cls, model_name=model_name)
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/vertexai/_model_garden/_model_garden_models.py", line 206, in _from_pretrained
    model_info = _get_model_info(
        model_id=model_name,
        schema_to_class_map={interface_class._INSTANCE_SCHEMA_URI: interface_class},
    )
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/vertexai/_model_garden/_model_garden_models.py", line 122, in _get_model_info
    _publisher_models._PublisherModel(  # pylint: disable=protected-access
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        resource_name=model_id
        ^^^^^^^^^^^^^^^^^^^^^^
    )._gca_resource
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/cloud/aiplatform/_publisher_models.py", line 77, in __init__
    self._gca_resource = getattr(self.api_client, self._getter_method)(
                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        name=full_resource_name, retry=base._DEFAULT_RETRY
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/cloud/aiplatform_v1/services/model_garden_service/client.py", line 876, in get_publisher_model
    response = rpc(
        request,
    ...<2 lines>...
        metadata=metadata,
    )
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/gapic_v1/method.py", line 131, in __call__
    return wrapped_func(*args, **kwargs)
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 294, in retry_wrapped_func
    return retry_target(
        target,
    ...<3 lines>...
        on_error=on_error,
    )
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 156, in retry_target
    next_sleep = _retry_error_helper(
        exc,
    ...<6 lines>...
        timeout,
    )
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/retry/retry_base.py", line 214, in _retry_error_helper
    raise final_exc from source_exc
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 147, in retry_target
    result = target()
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 78, in error_remapped_callable
    raise exceptions.from_grpc_error(exc) from exc
google.api_core.exceptions.PermissionDenied: 403 This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry. [reason: "BILLING_DISABLED"
domain: "googleapis.com"
metadata {
  key: "service"
  value: "aiplatform.googleapis.com"
}
metadata {
  key: "containerInfo"
  value: "ai-team-458821"
}
metadata {
  key: "consumer"
  value: "projects/ai-team-458821"
}
, locale: "en-US"
message: "This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry."
, links {
  description: "Google developers console billing"
  url: "https://console.developers.google.com/billing/enable?project=ai-team-458821"
}
]
2025-05-04 20:14:53,497 - agents.db.postgres - INFO - Closing PostgreSQL connection pool...
2025-05-04 20:14:53,501 - agents.db.postgres - INFO - PostgreSQL connection pool closed.
2025-05-04 20:14:53,501 - agent.cli - INFO - CLI resources closed.
2025-05-04 20:17:55,478 - agent.cli - INFO - Initializing CLI services...
2025-05-04 20:17:55,478 - agents.db.postgres - INFO - Initializing PostgreSQL connection pool...
2025-05-04 20:17:55,499 - agents.db.postgres - INFO - PostgreSQL connection pool initialized successfully.
2025-05-04 20:17:55,499 - agents.llm.vertex_gemini_provider - INFO - Vertex AI initialized for project 'ai-team-458821' in location 'us-central1'
2025-05-04 20:17:55,500 - agents.llm.vertex_gemini_provider - INFO - Loaded Gemini model: gemini-1.5-flash-001
2025-05-04 20:17:57,205 - agents.llm.vertex_gemini_provider - ERROR - Failed to load embedding model text-embedding-004: 403 This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry. [reason: "BILLING_DISABLED"
domain: "googleapis.com"
metadata {
  key: "service"
  value: "aiplatform.googleapis.com"
}
metadata {
  key: "containerInfo"
  value: "ai-team-458821"
}
metadata {
  key: "consumer"
  value: "projects/ai-team-458821"
}
, locale: "en-US"
message: "This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry."
, links {
  description: "Google developers console billing"
  url: "https://console.developers.google.com/billing/enable?project=ai-team-458821"
}
]
Traceback (most recent call last):
  File "/Users/giorgobg/Desktop/Software Factory/agents/cli/../../agents/llm/vertex_gemini_provider.py", line 79, in __init__
    self.embedding_model = TextEmbeddingModel.from_pretrained(
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.embedding_model_name
        ^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/vertexai/_model_garden/_model_garden_models.py", line 289, in from_pretrained
    return _from_pretrained(interface_class=cls, model_name=model_name)
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/vertexai/_model_garden/_model_garden_models.py", line 206, in _from_pretrained
    model_info = _get_model_info(
        model_id=model_name,
        schema_to_class_map={interface_class._INSTANCE_SCHEMA_URI: interface_class},
    )
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/vertexai/_model_garden/_model_garden_models.py", line 122, in _get_model_info
    _publisher_models._PublisherModel(  # pylint: disable=protected-access
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        resource_name=model_id
        ^^^^^^^^^^^^^^^^^^^^^^
    )._gca_resource
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/cloud/aiplatform/_publisher_models.py", line 77, in __init__
    self._gca_resource = getattr(self.api_client, self._getter_method)(
                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        name=full_resource_name, retry=base._DEFAULT_RETRY
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/cloud/aiplatform_v1/services/model_garden_service/client.py", line 876, in get_publisher_model
    response = rpc(
        request,
    ...<2 lines>...
        metadata=metadata,
    )
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/gapic_v1/method.py", line 131, in __call__
    return wrapped_func(*args, **kwargs)
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 294, in retry_wrapped_func
    return retry_target(
        target,
    ...<3 lines>...
        on_error=on_error,
    )
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 156, in retry_target
    next_sleep = _retry_error_helper(
        exc,
    ...<6 lines>...
        timeout,
    )
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/retry/retry_base.py", line 214, in _retry_error_helper
    raise final_exc from source_exc
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 147, in retry_target
    result = target()
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 78, in error_remapped_callable
    raise exceptions.from_grpc_error(exc) from exc
google.api_core.exceptions.PermissionDenied: 403 This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry. [reason: "BILLING_DISABLED"
domain: "googleapis.com"
metadata {
  key: "service"
  value: "aiplatform.googleapis.com"
}
metadata {
  key: "containerInfo"
  value: "ai-team-458821"
}
metadata {
  key: "consumer"
  value: "projects/ai-team-458821"
}
, locale: "en-US"
message: "This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry."
, links {
  description: "Google developers console billing"
  url: "https://console.developers.google.com/billing/enable?project=ai-team-458821"
}
]
2025-05-04 20:17:57,211 - agent.cli - ERROR - CLI Initialization failed: 403 This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry. [reason: "BILLING_DISABLED"
domain: "googleapis.com"
metadata {
  key: "service"
  value: "aiplatform.googleapis.com"
}
metadata {
  key: "containerInfo"
  value: "ai-team-458821"
}
metadata {
  key: "consumer"
  value: "projects/ai-team-458821"
}
, locale: "en-US"
message: "This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry."
, links {
  description: "Google developers console billing"
  url: "https://console.developers.google.com/billing/enable?project=ai-team-458821"
}
]
Traceback (most recent call last):
  File "/Users/giorgobg/Desktop/Software Factory/agents/cli/agent_cli.py", line 77, in initialize
    self.llm_provider = VertexGeminiProvider()
                        ~~~~~~~~~~~~~~~~~~~~^^
  File "/Users/giorgobg/Desktop/Software Factory/agents/cli/../../agents/llm/vertex_gemini_provider.py", line 79, in __init__
    self.embedding_model = TextEmbeddingModel.from_pretrained(
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.embedding_model_name
        ^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/vertexai/_model_garden/_model_garden_models.py", line 289, in from_pretrained
    return _from_pretrained(interface_class=cls, model_name=model_name)
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/vertexai/_model_garden/_model_garden_models.py", line 206, in _from_pretrained
    model_info = _get_model_info(
        model_id=model_name,
        schema_to_class_map={interface_class._INSTANCE_SCHEMA_URI: interface_class},
    )
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/vertexai/_model_garden/_model_garden_models.py", line 122, in _get_model_info
    _publisher_models._PublisherModel(  # pylint: disable=protected-access
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        resource_name=model_id
        ^^^^^^^^^^^^^^^^^^^^^^
    )._gca_resource
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/cloud/aiplatform/_publisher_models.py", line 77, in __init__
    self._gca_resource = getattr(self.api_client, self._getter_method)(
                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        name=full_resource_name, retry=base._DEFAULT_RETRY
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/cloud/aiplatform_v1/services/model_garden_service/client.py", line 876, in get_publisher_model
    response = rpc(
        request,
    ...<2 lines>...
        metadata=metadata,
    )
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/gapic_v1/method.py", line 131, in __call__
    return wrapped_func(*args, **kwargs)
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 294, in retry_wrapped_func
    return retry_target(
        target,
    ...<3 lines>...
        on_error=on_error,
    )
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 156, in retry_target
    next_sleep = _retry_error_helper(
        exc,
    ...<6 lines>...
        timeout,
    )
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/retry/retry_base.py", line 214, in _retry_error_helper
    raise final_exc from source_exc
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 147, in retry_target
    result = target()
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 78, in error_remapped_callable
    raise exceptions.from_grpc_error(exc) from exc
google.api_core.exceptions.PermissionDenied: 403 This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry. [reason: "BILLING_DISABLED"
domain: "googleapis.com"
metadata {
  key: "service"
  value: "aiplatform.googleapis.com"
}
metadata {
  key: "containerInfo"
  value: "ai-team-458821"
}
metadata {
  key: "consumer"
  value: "projects/ai-team-458821"
}
, locale: "en-US"
message: "This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry."
, links {
  description: "Google developers console billing"
  url: "https://console.developers.google.com/billing/enable?project=ai-team-458821"
}
]
2025-05-04 20:17:57,214 - agents.db.postgres - INFO - Closing PostgreSQL connection pool...
2025-05-04 20:17:57,218 - agents.db.postgres - INFO - PostgreSQL connection pool closed.
2025-05-04 20:17:57,218 - agent.cli - INFO - CLI resources closed.
2025-05-04 20:19:44,888 - agent.cli - INFO - Initializing CLI services...
2025-05-04 20:19:44,888 - agents.db.postgres - INFO - Initializing PostgreSQL connection pool...
2025-05-04 20:19:44,909 - agents.db.postgres - INFO - PostgreSQL connection pool initialized successfully.
2025-05-04 20:19:44,909 - agents.llm.vertex_gemini_provider - INFO - Vertex AI initialized for project 'ai-team-458821' in location 'us-central1'
2025-05-04 20:19:44,910 - agents.llm.vertex_gemini_provider - INFO - Loaded Gemini model: gemini-1.5-flash-001
2025-05-04 20:19:46,605 - agents.llm.vertex_gemini_provider - ERROR - Failed to load embedding model text-embedding-004: 403 This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry. [reason: "BILLING_DISABLED"
domain: "googleapis.com"
metadata {
  key: "service"
  value: "aiplatform.googleapis.com"
}
metadata {
  key: "containerInfo"
  value: "ai-team-458821"
}
metadata {
  key: "consumer"
  value: "projects/ai-team-458821"
}
, locale: "en-US"
message: "This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry."
, links {
  description: "Google developers console billing"
  url: "https://console.developers.google.com/billing/enable?project=ai-team-458821"
}
]
Traceback (most recent call last):
  File "/Users/giorgobg/Desktop/Software Factory/agents/cli/../../agents/llm/vertex_gemini_provider.py", line 79, in __init__
    self.embedding_model = TextEmbeddingModel.from_pretrained(
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.embedding_model_name
        ^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/vertexai/_model_garden/_model_garden_models.py", line 289, in from_pretrained
    return _from_pretrained(interface_class=cls, model_name=model_name)
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/vertexai/_model_garden/_model_garden_models.py", line 206, in _from_pretrained
    model_info = _get_model_info(
        model_id=model_name,
        schema_to_class_map={interface_class._INSTANCE_SCHEMA_URI: interface_class},
    )
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/vertexai/_model_garden/_model_garden_models.py", line 122, in _get_model_info
    _publisher_models._PublisherModel(  # pylint: disable=protected-access
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        resource_name=model_id
        ^^^^^^^^^^^^^^^^^^^^^^
    )._gca_resource
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/cloud/aiplatform/_publisher_models.py", line 77, in __init__
    self._gca_resource = getattr(self.api_client, self._getter_method)(
                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        name=full_resource_name, retry=base._DEFAULT_RETRY
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/cloud/aiplatform_v1/services/model_garden_service/client.py", line 876, in get_publisher_model
    response = rpc(
        request,
    ...<2 lines>...
        metadata=metadata,
    )
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/gapic_v1/method.py", line 131, in __call__
    return wrapped_func(*args, **kwargs)
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 294, in retry_wrapped_func
    return retry_target(
        target,
    ...<3 lines>...
        on_error=on_error,
    )
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 156, in retry_target
    next_sleep = _retry_error_helper(
        exc,
    ...<6 lines>...
        timeout,
    )
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/retry/retry_base.py", line 214, in _retry_error_helper
    raise final_exc from source_exc
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 147, in retry_target
    result = target()
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 78, in error_remapped_callable
    raise exceptions.from_grpc_error(exc) from exc
google.api_core.exceptions.PermissionDenied: 403 This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry. [reason: "BILLING_DISABLED"
domain: "googleapis.com"
metadata {
  key: "service"
  value: "aiplatform.googleapis.com"
}
metadata {
  key: "containerInfo"
  value: "ai-team-458821"
}
metadata {
  key: "consumer"
  value: "projects/ai-team-458821"
}
, locale: "en-US"
message: "This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry."
, links {
  description: "Google developers console billing"
  url: "https://console.developers.google.com/billing/enable?project=ai-team-458821"
}
]
2025-05-04 20:19:46,611 - agent.cli - ERROR - CLI Initialization failed: 403 This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry. [reason: "BILLING_DISABLED"
domain: "googleapis.com"
metadata {
  key: "service"
  value: "aiplatform.googleapis.com"
}
metadata {
  key: "containerInfo"
  value: "ai-team-458821"
}
metadata {
  key: "consumer"
  value: "projects/ai-team-458821"
}
, locale: "en-US"
message: "This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry."
, links {
  description: "Google developers console billing"
  url: "https://console.developers.google.com/billing/enable?project=ai-team-458821"
}
]
Traceback (most recent call last):
  File "/Users/giorgobg/Desktop/Software Factory/agents/cli/agent_cli.py", line 77, in initialize
    self.llm_provider = VertexGeminiProvider()
                        ~~~~~~~~~~~~~~~~~~~~^^
  File "/Users/giorgobg/Desktop/Software Factory/agents/cli/../../agents/llm/vertex_gemini_provider.py", line 79, in __init__
    self.embedding_model = TextEmbeddingModel.from_pretrained(
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.embedding_model_name
        ^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/vertexai/_model_garden/_model_garden_models.py", line 289, in from_pretrained
    return _from_pretrained(interface_class=cls, model_name=model_name)
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/vertexai/_model_garden/_model_garden_models.py", line 206, in _from_pretrained
    model_info = _get_model_info(
        model_id=model_name,
        schema_to_class_map={interface_class._INSTANCE_SCHEMA_URI: interface_class},
    )
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/vertexai/_model_garden/_model_garden_models.py", line 122, in _get_model_info
    _publisher_models._PublisherModel(  # pylint: disable=protected-access
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        resource_name=model_id
        ^^^^^^^^^^^^^^^^^^^^^^
    )._gca_resource
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/cloud/aiplatform/_publisher_models.py", line 77, in __init__
    self._gca_resource = getattr(self.api_client, self._getter_method)(
                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        name=full_resource_name, retry=base._DEFAULT_RETRY
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/cloud/aiplatform_v1/services/model_garden_service/client.py", line 876, in get_publisher_model
    response = rpc(
        request,
    ...<2 lines>...
        metadata=metadata,
    )
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/gapic_v1/method.py", line 131, in __call__
    return wrapped_func(*args, **kwargs)
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 294, in retry_wrapped_func
    return retry_target(
        target,
    ...<3 lines>...
        on_error=on_error,
    )
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 156, in retry_target
    next_sleep = _retry_error_helper(
        exc,
    ...<6 lines>...
        timeout,
    )
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/retry/retry_base.py", line 214, in _retry_error_helper
    raise final_exc from source_exc
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 147, in retry_target
    result = target()
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 78, in error_remapped_callable
    raise exceptions.from_grpc_error(exc) from exc
google.api_core.exceptions.PermissionDenied: 403 This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry. [reason: "BILLING_DISABLED"
domain: "googleapis.com"
metadata {
  key: "service"
  value: "aiplatform.googleapis.com"
}
metadata {
  key: "containerInfo"
  value: "ai-team-458821"
}
metadata {
  key: "consumer"
  value: "projects/ai-team-458821"
}
, locale: "en-US"
message: "This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry."
, links {
  description: "Google developers console billing"
  url: "https://console.developers.google.com/billing/enable?project=ai-team-458821"
}
]
2025-05-04 20:19:46,614 - agents.db.postgres - INFO - Closing PostgreSQL connection pool...
2025-05-04 20:19:46,618 - agents.db.postgres - INFO - PostgreSQL connection pool closed.
2025-05-04 20:19:46,618 - agent.cli - INFO - CLI resources closed.
2025-05-04 20:22:12,805 - agent.cli - INFO - Initializing CLI services...
2025-05-04 20:22:12,805 - agents.db.postgres - INFO - Initializing PostgreSQL connection pool...
2025-05-04 20:22:12,826 - agents.db.postgres - INFO - PostgreSQL connection pool initialized successfully.
2025-05-04 20:22:12,826 - agents.llm.vertex_gemini_provider - INFO - Vertex AI initialized for project 'ai-team-458821' in location 'us-central1'
2025-05-04 20:22:12,827 - agents.llm.vertex_gemini_provider - INFO - Loaded Gemini model: gemini-1.5-flash-001
2025-05-04 20:22:14,536 - agents.llm.vertex_gemini_provider - ERROR - Failed to load embedding model text-embedding-004: 403 This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry. [reason: "BILLING_DISABLED"
domain: "googleapis.com"
metadata {
  key: "service"
  value: "aiplatform.googleapis.com"
}
metadata {
  key: "containerInfo"
  value: "ai-team-458821"
}
metadata {
  key: "consumer"
  value: "projects/ai-team-458821"
}
, locale: "en-US"
message: "This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry."
, links {
  description: "Google developers console billing"
  url: "https://console.developers.google.com/billing/enable?project=ai-team-458821"
}
]
Traceback (most recent call last):
  File "/Users/giorgobg/Desktop/Software Factory/agents/cli/../../agents/llm/vertex_gemini_provider.py", line 79, in __init__
    self.embedding_model = TextEmbeddingModel.from_pretrained(
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.embedding_model_name
        ^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/vertexai/_model_garden/_model_garden_models.py", line 289, in from_pretrained
    return _from_pretrained(interface_class=cls, model_name=model_name)
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/vertexai/_model_garden/_model_garden_models.py", line 206, in _from_pretrained
    model_info = _get_model_info(
        model_id=model_name,
        schema_to_class_map={interface_class._INSTANCE_SCHEMA_URI: interface_class},
    )
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/vertexai/_model_garden/_model_garden_models.py", line 122, in _get_model_info
    _publisher_models._PublisherModel(  # pylint: disable=protected-access
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        resource_name=model_id
        ^^^^^^^^^^^^^^^^^^^^^^
    )._gca_resource
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/cloud/aiplatform/_publisher_models.py", line 77, in __init__
    self._gca_resource = getattr(self.api_client, self._getter_method)(
                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        name=full_resource_name, retry=base._DEFAULT_RETRY
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/cloud/aiplatform_v1/services/model_garden_service/client.py", line 876, in get_publisher_model
    response = rpc(
        request,
    ...<2 lines>...
        metadata=metadata,
    )
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/gapic_v1/method.py", line 131, in __call__
    return wrapped_func(*args, **kwargs)
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 294, in retry_wrapped_func
    return retry_target(
        target,
    ...<3 lines>...
        on_error=on_error,
    )
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 156, in retry_target
    next_sleep = _retry_error_helper(
        exc,
    ...<6 lines>...
        timeout,
    )
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/retry/retry_base.py", line 214, in _retry_error_helper
    raise final_exc from source_exc
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 147, in retry_target
    result = target()
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 78, in error_remapped_callable
    raise exceptions.from_grpc_error(exc) from exc
google.api_core.exceptions.PermissionDenied: 403 This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry. [reason: "BILLING_DISABLED"
domain: "googleapis.com"
metadata {
  key: "service"
  value: "aiplatform.googleapis.com"
}
metadata {
  key: "containerInfo"
  value: "ai-team-458821"
}
metadata {
  key: "consumer"
  value: "projects/ai-team-458821"
}
, locale: "en-US"
message: "This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry."
, links {
  description: "Google developers console billing"
  url: "https://console.developers.google.com/billing/enable?project=ai-team-458821"
}
]
2025-05-04 20:22:14,542 - agent.cli - ERROR - CLI Initialization failed: 403 This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry. [reason: "BILLING_DISABLED"
domain: "googleapis.com"
metadata {
  key: "service"
  value: "aiplatform.googleapis.com"
}
metadata {
  key: "containerInfo"
  value: "ai-team-458821"
}
metadata {
  key: "consumer"
  value: "projects/ai-team-458821"
}
, locale: "en-US"
message: "This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry."
, links {
  description: "Google developers console billing"
  url: "https://console.developers.google.com/billing/enable?project=ai-team-458821"
}
]
Traceback (most recent call last):
  File "/Users/giorgobg/Desktop/Software Factory/agents/cli/agent_cli.py", line 77, in initialize
    self.llm_provider = VertexGeminiProvider()
                        ~~~~~~~~~~~~~~~~~~~~^^
  File "/Users/giorgobg/Desktop/Software Factory/agents/cli/../../agents/llm/vertex_gemini_provider.py", line 79, in __init__
    self.embedding_model = TextEmbeddingModel.from_pretrained(
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.embedding_model_name
        ^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/vertexai/_model_garden/_model_garden_models.py", line 289, in from_pretrained
    return _from_pretrained(interface_class=cls, model_name=model_name)
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/vertexai/_model_garden/_model_garden_models.py", line 206, in _from_pretrained
    model_info = _get_model_info(
        model_id=model_name,
        schema_to_class_map={interface_class._INSTANCE_SCHEMA_URI: interface_class},
    )
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/vertexai/_model_garden/_model_garden_models.py", line 122, in _get_model_info
    _publisher_models._PublisherModel(  # pylint: disable=protected-access
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        resource_name=model_id
        ^^^^^^^^^^^^^^^^^^^^^^
    )._gca_resource
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/cloud/aiplatform/_publisher_models.py", line 77, in __init__
    self._gca_resource = getattr(self.api_client, self._getter_method)(
                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        name=full_resource_name, retry=base._DEFAULT_RETRY
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/cloud/aiplatform_v1/services/model_garden_service/client.py", line 876, in get_publisher_model
    response = rpc(
        request,
    ...<2 lines>...
        metadata=metadata,
    )
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/gapic_v1/method.py", line 131, in __call__
    return wrapped_func(*args, **kwargs)
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 294, in retry_wrapped_func
    return retry_target(
        target,
    ...<3 lines>...
        on_error=on_error,
    )
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 156, in retry_target
    next_sleep = _retry_error_helper(
        exc,
    ...<6 lines>...
        timeout,
    )
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/retry/retry_base.py", line 214, in _retry_error_helper
    raise final_exc from source_exc
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 147, in retry_target
    result = target()
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 78, in error_remapped_callable
    raise exceptions.from_grpc_error(exc) from exc
google.api_core.exceptions.PermissionDenied: 403 This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry. [reason: "BILLING_DISABLED"
domain: "googleapis.com"
metadata {
  key: "service"
  value: "aiplatform.googleapis.com"
}
metadata {
  key: "containerInfo"
  value: "ai-team-458821"
}
metadata {
  key: "consumer"
  value: "projects/ai-team-458821"
}
, locale: "en-US"
message: "This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry."
, links {
  description: "Google developers console billing"
  url: "https://console.developers.google.com/billing/enable?project=ai-team-458821"
}
]
2025-05-04 20:22:14,545 - agents.db.postgres - INFO - Closing PostgreSQL connection pool...
2025-05-04 20:22:14,549 - agents.db.postgres - INFO - PostgreSQL connection pool closed.
2025-05-04 20:22:14,549 - agent.cli - INFO - CLI resources closed.
2025-05-04 20:27:19,668 - agent.cli - INFO - Initializing CLI services...
2025-05-04 20:27:19,668 - agents.db.postgres - INFO - Initializing PostgreSQL connection pool...
2025-05-04 20:27:19,689 - agents.db.postgres - INFO - PostgreSQL connection pool initialized successfully.
2025-05-04 20:27:19,690 - agents.llm.vertex_gemini_provider - INFO - Vertex AI initialized for project 'ai-team-458821' in location 'us-central1'
2025-05-04 20:27:19,690 - agents.llm.vertex_gemini_provider - INFO - Loaded Gemini model: gemini-1.5-flash-001
2025-05-04 20:27:21,498 - agents.llm.vertex_gemini_provider - ERROR - Failed to load embedding model text-embedding-004: 403 This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry. [reason: "BILLING_DISABLED"
domain: "googleapis.com"
metadata {
  key: "service"
  value: "aiplatform.googleapis.com"
}
metadata {
  key: "containerInfo"
  value: "ai-team-458821"
}
metadata {
  key: "consumer"
  value: "projects/ai-team-458821"
}
, locale: "en-US"
message: "This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry."
, links {
  description: "Google developers console billing"
  url: "https://console.developers.google.com/billing/enable?project=ai-team-458821"
}
]
Traceback (most recent call last):
  File "/Users/giorgobg/Desktop/Software Factory/agents/cli/../../agents/llm/vertex_gemini_provider.py", line 79, in __init__
    self.embedding_model = TextEmbeddingModel.from_pretrained(
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.embedding_model_name
        ^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/vertexai/_model_garden/_model_garden_models.py", line 289, in from_pretrained
    return _from_pretrained(interface_class=cls, model_name=model_name)
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/vertexai/_model_garden/_model_garden_models.py", line 206, in _from_pretrained
    model_info = _get_model_info(
        model_id=model_name,
        schema_to_class_map={interface_class._INSTANCE_SCHEMA_URI: interface_class},
    )
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/vertexai/_model_garden/_model_garden_models.py", line 122, in _get_model_info
    _publisher_models._PublisherModel(  # pylint: disable=protected-access
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        resource_name=model_id
        ^^^^^^^^^^^^^^^^^^^^^^
    )._gca_resource
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/cloud/aiplatform/_publisher_models.py", line 77, in __init__
    self._gca_resource = getattr(self.api_client, self._getter_method)(
                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        name=full_resource_name, retry=base._DEFAULT_RETRY
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/cloud/aiplatform_v1/services/model_garden_service/client.py", line 876, in get_publisher_model
    response = rpc(
        request,
    ...<2 lines>...
        metadata=metadata,
    )
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/gapic_v1/method.py", line 131, in __call__
    return wrapped_func(*args, **kwargs)
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 294, in retry_wrapped_func
    return retry_target(
        target,
    ...<3 lines>...
        on_error=on_error,
    )
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 156, in retry_target
    next_sleep = _retry_error_helper(
        exc,
    ...<6 lines>...
        timeout,
    )
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/retry/retry_base.py", line 214, in _retry_error_helper
    raise final_exc from source_exc
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 147, in retry_target
    result = target()
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 78, in error_remapped_callable
    raise exceptions.from_grpc_error(exc) from exc
google.api_core.exceptions.PermissionDenied: 403 This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry. [reason: "BILLING_DISABLED"
domain: "googleapis.com"
metadata {
  key: "service"
  value: "aiplatform.googleapis.com"
}
metadata {
  key: "containerInfo"
  value: "ai-team-458821"
}
metadata {
  key: "consumer"
  value: "projects/ai-team-458821"
}
, locale: "en-US"
message: "This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry."
, links {
  description: "Google developers console billing"
  url: "https://console.developers.google.com/billing/enable?project=ai-team-458821"
}
]
2025-05-04 20:27:21,504 - agent.cli - ERROR - CLI Initialization failed: 403 This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry. [reason: "BILLING_DISABLED"
domain: "googleapis.com"
metadata {
  key: "service"
  value: "aiplatform.googleapis.com"
}
metadata {
  key: "containerInfo"
  value: "ai-team-458821"
}
metadata {
  key: "consumer"
  value: "projects/ai-team-458821"
}
, locale: "en-US"
message: "This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry."
, links {
  description: "Google developers console billing"
  url: "https://console.developers.google.com/billing/enable?project=ai-team-458821"
}
]
Traceback (most recent call last):
  File "/Users/giorgobg/Desktop/Software Factory/agents/cli/agent_cli.py", line 77, in initialize
    self.llm_provider = VertexGeminiProvider()
                        ~~~~~~~~~~~~~~~~~~~~^^
  File "/Users/giorgobg/Desktop/Software Factory/agents/cli/../../agents/llm/vertex_gemini_provider.py", line 79, in __init__
    self.embedding_model = TextEmbeddingModel.from_pretrained(
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.embedding_model_name
        ^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/vertexai/_model_garden/_model_garden_models.py", line 289, in from_pretrained
    return _from_pretrained(interface_class=cls, model_name=model_name)
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/vertexai/_model_garden/_model_garden_models.py", line 206, in _from_pretrained
    model_info = _get_model_info(
        model_id=model_name,
        schema_to_class_map={interface_class._INSTANCE_SCHEMA_URI: interface_class},
    )
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/vertexai/_model_garden/_model_garden_models.py", line 122, in _get_model_info
    _publisher_models._PublisherModel(  # pylint: disable=protected-access
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        resource_name=model_id
        ^^^^^^^^^^^^^^^^^^^^^^
    )._gca_resource
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/cloud/aiplatform/_publisher_models.py", line 77, in __init__
    self._gca_resource = getattr(self.api_client, self._getter_method)(
                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        name=full_resource_name, retry=base._DEFAULT_RETRY
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/cloud/aiplatform_v1/services/model_garden_service/client.py", line 876, in get_publisher_model
    response = rpc(
        request,
    ...<2 lines>...
        metadata=metadata,
    )
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/gapic_v1/method.py", line 131, in __call__
    return wrapped_func(*args, **kwargs)
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 294, in retry_wrapped_func
    return retry_target(
        target,
    ...<3 lines>...
        on_error=on_error,
    )
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 156, in retry_target
    next_sleep = _retry_error_helper(
        exc,
    ...<6 lines>...
        timeout,
    )
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/retry/retry_base.py", line 214, in _retry_error_helper
    raise final_exc from source_exc
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 147, in retry_target
    result = target()
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 78, in error_remapped_callable
    raise exceptions.from_grpc_error(exc) from exc
google.api_core.exceptions.PermissionDenied: 403 This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry. [reason: "BILLING_DISABLED"
domain: "googleapis.com"
metadata {
  key: "service"
  value: "aiplatform.googleapis.com"
}
metadata {
  key: "containerInfo"
  value: "ai-team-458821"
}
metadata {
  key: "consumer"
  value: "projects/ai-team-458821"
}
, locale: "en-US"
message: "This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry."
, links {
  description: "Google developers console billing"
  url: "https://console.developers.google.com/billing/enable?project=ai-team-458821"
}
]
2025-05-04 20:27:21,507 - agents.db.postgres - INFO - Closing PostgreSQL connection pool...
2025-05-04 20:27:21,510 - agents.db.postgres - INFO - PostgreSQL connection pool closed.
2025-05-04 20:27:21,510 - agent.cli - INFO - CLI resources closed.
2025-05-04 20:28:16,652 - agent.cli - INFO - Initializing CLI services...
2025-05-04 20:28:16,652 - agents.db.postgres - INFO - Initializing PostgreSQL connection pool...
2025-05-04 20:28:16,673 - agents.db.postgres - INFO - PostgreSQL connection pool initialized successfully.
2025-05-04 20:28:16,674 - agents.llm.vertex_gemini_provider - INFO - Vertex AI initialized for project 'ai-team-458821' in location 'us-central1'
2025-05-04 20:28:16,674 - agents.llm.vertex_gemini_provider - INFO - Loaded Gemini model: gemini-1.5-flash-001
2025-05-04 20:28:18,398 - agents.llm.vertex_gemini_provider - ERROR - Failed to load embedding model text-embedding-004: 403 This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry. [reason: "BILLING_DISABLED"
domain: "googleapis.com"
metadata {
  key: "service"
  value: "aiplatform.googleapis.com"
}
metadata {
  key: "containerInfo"
  value: "ai-team-458821"
}
metadata {
  key: "consumer"
  value: "projects/ai-team-458821"
}
, locale: "en-US"
message: "This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry."
, links {
  description: "Google developers console billing"
  url: "https://console.developers.google.com/billing/enable?project=ai-team-458821"
}
]
Traceback (most recent call last):
  File "/Users/giorgobg/Desktop/Software Factory/agents/cli/../../agents/llm/vertex_gemini_provider.py", line 79, in __init__
    self.embedding_model = TextEmbeddingModel.from_pretrained(
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.embedding_model_name
        ^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/vertexai/_model_garden/_model_garden_models.py", line 289, in from_pretrained
    return _from_pretrained(interface_class=cls, model_name=model_name)
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/vertexai/_model_garden/_model_garden_models.py", line 206, in _from_pretrained
    model_info = _get_model_info(
        model_id=model_name,
        schema_to_class_map={interface_class._INSTANCE_SCHEMA_URI: interface_class},
    )
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/vertexai/_model_garden/_model_garden_models.py", line 122, in _get_model_info
    _publisher_models._PublisherModel(  # pylint: disable=protected-access
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        resource_name=model_id
        ^^^^^^^^^^^^^^^^^^^^^^
    )._gca_resource
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/cloud/aiplatform/_publisher_models.py", line 77, in __init__
    self._gca_resource = getattr(self.api_client, self._getter_method)(
                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        name=full_resource_name, retry=base._DEFAULT_RETRY
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/cloud/aiplatform_v1/services/model_garden_service/client.py", line 876, in get_publisher_model
    response = rpc(
        request,
    ...<2 lines>...
        metadata=metadata,
    )
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/gapic_v1/method.py", line 131, in __call__
    return wrapped_func(*args, **kwargs)
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 294, in retry_wrapped_func
    return retry_target(
        target,
    ...<3 lines>...
        on_error=on_error,
    )
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 156, in retry_target
    next_sleep = _retry_error_helper(
        exc,
    ...<6 lines>...
        timeout,
    )
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/retry/retry_base.py", line 214, in _retry_error_helper
    raise final_exc from source_exc
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 147, in retry_target
    result = target()
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 78, in error_remapped_callable
    raise exceptions.from_grpc_error(exc) from exc
google.api_core.exceptions.PermissionDenied: 403 This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry. [reason: "BILLING_DISABLED"
domain: "googleapis.com"
metadata {
  key: "service"
  value: "aiplatform.googleapis.com"
}
metadata {
  key: "containerInfo"
  value: "ai-team-458821"
}
metadata {
  key: "consumer"
  value: "projects/ai-team-458821"
}
, locale: "en-US"
message: "This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry."
, links {
  description: "Google developers console billing"
  url: "https://console.developers.google.com/billing/enable?project=ai-team-458821"
}
]
2025-05-04 20:28:18,404 - agent.cli - ERROR - CLI Initialization failed: 403 This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry. [reason: "BILLING_DISABLED"
domain: "googleapis.com"
metadata {
  key: "service"
  value: "aiplatform.googleapis.com"
}
metadata {
  key: "containerInfo"
  value: "ai-team-458821"
}
metadata {
  key: "consumer"
  value: "projects/ai-team-458821"
}
, locale: "en-US"
message: "This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry."
, links {
  description: "Google developers console billing"
  url: "https://console.developers.google.com/billing/enable?project=ai-team-458821"
}
]
Traceback (most recent call last):
  File "/Users/giorgobg/Desktop/Software Factory/agents/cli/agent_cli.py", line 77, in initialize
    self.llm_provider = VertexGeminiProvider()
                        ~~~~~~~~~~~~~~~~~~~~^^
  File "/Users/giorgobg/Desktop/Software Factory/agents/cli/../../agents/llm/vertex_gemini_provider.py", line 79, in __init__
    self.embedding_model = TextEmbeddingModel.from_pretrained(
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.embedding_model_name
        ^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/vertexai/_model_garden/_model_garden_models.py", line 289, in from_pretrained
    return _from_pretrained(interface_class=cls, model_name=model_name)
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/vertexai/_model_garden/_model_garden_models.py", line 206, in _from_pretrained
    model_info = _get_model_info(
        model_id=model_name,
        schema_to_class_map={interface_class._INSTANCE_SCHEMA_URI: interface_class},
    )
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/vertexai/_model_garden/_model_garden_models.py", line 122, in _get_model_info
    _publisher_models._PublisherModel(  # pylint: disable=protected-access
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        resource_name=model_id
        ^^^^^^^^^^^^^^^^^^^^^^
    )._gca_resource
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/cloud/aiplatform/_publisher_models.py", line 77, in __init__
    self._gca_resource = getattr(self.api_client, self._getter_method)(
                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        name=full_resource_name, retry=base._DEFAULT_RETRY
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/cloud/aiplatform_v1/services/model_garden_service/client.py", line 876, in get_publisher_model
    response = rpc(
        request,
    ...<2 lines>...
        metadata=metadata,
    )
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/gapic_v1/method.py", line 131, in __call__
    return wrapped_func(*args, **kwargs)
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 294, in retry_wrapped_func
    return retry_target(
        target,
    ...<3 lines>...
        on_error=on_error,
    )
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 156, in retry_target
    next_sleep = _retry_error_helper(
        exc,
    ...<6 lines>...
        timeout,
    )
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/retry/retry_base.py", line 214, in _retry_error_helper
    raise final_exc from source_exc
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 147, in retry_target
    result = target()
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 78, in error_remapped_callable
    raise exceptions.from_grpc_error(exc) from exc
google.api_core.exceptions.PermissionDenied: 403 This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry. [reason: "BILLING_DISABLED"
domain: "googleapis.com"
metadata {
  key: "service"
  value: "aiplatform.googleapis.com"
}
metadata {
  key: "containerInfo"
  value: "ai-team-458821"
}
metadata {
  key: "consumer"
  value: "projects/ai-team-458821"
}
, locale: "en-US"
message: "This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry."
, links {
  description: "Google developers console billing"
  url: "https://console.developers.google.com/billing/enable?project=ai-team-458821"
}
]
2025-05-04 20:28:18,407 - agents.db.postgres - INFO - Closing PostgreSQL connection pool...
2025-05-04 20:28:18,411 - agents.db.postgres - INFO - PostgreSQL connection pool closed.
2025-05-04 20:28:18,411 - agent.cli - INFO - CLI resources closed.
2025-05-04 20:38:13,789 - agent.cli - INFO - Initializing CLI services...
2025-05-04 20:38:13,789 - agents.db.postgres - INFO - Initializing PostgreSQL connection pool...
2025-05-04 20:38:13,811 - agents.db.postgres - INFO - PostgreSQL connection pool initialized successfully.
2025-05-04 20:38:13,811 - agent.cli - ERROR - CLI Initialization failed: API key environment variable 'GEMINI_API_KEY' not set.
Traceback (most recent call last):
  File "/Users/giorgobg/Desktop/Software Factory/agents/cli/agent_cli.py", line 77, in initialize
    self.llm_provider = GeminiApiProvider()
                        ~~~~~~~~~~~~~~~~~^^
  File "/Users/giorgobg/Desktop/Software Factory/agents/llm/vertex_gemini_provider.py", line 52, in __init__
    raise ValueError(
        f"API key environment variable '{api_key_env_var}' not set."
    )
ValueError: API key environment variable 'GEMINI_API_KEY' not set.
2025-05-04 20:38:13,812 - agents.db.postgres - INFO - Closing PostgreSQL connection pool...
2025-05-04 20:38:13,815 - agents.db.postgres - INFO - PostgreSQL connection pool closed.
2025-05-04 20:38:13,815 - agent.cli - INFO - CLI resources closed.
2025-05-04 20:39:05,196 - agent.cli - INFO - Initializing CLI services...
2025-05-04 20:39:05,196 - agents.db.postgres - INFO - Initializing PostgreSQL connection pool...
2025-05-04 20:39:05,217 - agents.db.postgres - INFO - PostgreSQL connection pool initialized successfully.
2025-05-04 20:39:05,217 - agent.cli - ERROR - CLI Initialization failed: API key environment variable 'GEMINI_API_KEY' not set.
Traceback (most recent call last):
  File "/Users/giorgobg/Desktop/Software Factory/agents/cli/agent_cli.py", line 77, in initialize
    self.llm_provider = GeminiApiProvider()
                        ~~~~~~~~~~~~~~~~~^^
  File "/Users/giorgobg/Desktop/Software Factory/agents/llm/vertex_gemini_provider.py", line 52, in __init__
    raise ValueError(
        f"API key environment variable '{api_key_env_var}' not set."
    )
ValueError: API key environment variable 'GEMINI_API_KEY' not set.
2025-05-04 20:39:05,219 - agents.db.postgres - INFO - Closing PostgreSQL connection pool...
2025-05-04 20:39:05,222 - agents.db.postgres - INFO - PostgreSQL connection pool closed.
2025-05-04 20:39:05,222 - agent.cli - INFO - CLI resources closed.
2025-05-04 20:40:16,802 - agent.cli - INFO - Attempted to load environment variables from .env file.
2025-05-04 20:40:16,802 - agent.cli - INFO - Initializing CLI services...
2025-05-04 20:40:16,802 - agents.db.postgres - INFO - Initializing PostgreSQL connection pool...
2025-05-04 20:40:16,823 - agents.db.postgres - INFO - PostgreSQL connection pool initialized successfully.
2025-05-04 20:40:16,823 - agent.cli - ERROR - CLI Initialization failed: API key environment variable 'GEMINI_API_KEY' not set.
Traceback (most recent call last):
  File "/Users/giorgobg/Desktop/Software Factory/agents/cli/agent_cli.py", line 86, in initialize
    self.llm_provider = GeminiApiProvider()
                        ~~~~~~~~~~~~~~~~~^^
  File "/Users/giorgobg/Desktop/Software Factory/agents/llm/vertex_gemini_provider.py", line 52, in __init__
    raise ValueError(
        f"API key environment variable '{api_key_env_var}' not set."
    )
ValueError: API key environment variable 'GEMINI_API_KEY' not set.
2025-05-04 20:40:16,825 - agents.db.postgres - INFO - Closing PostgreSQL connection pool...
2025-05-04 20:40:16,828 - agents.db.postgres - INFO - PostgreSQL connection pool closed.
2025-05-04 20:40:16,828 - agent.cli - INFO - CLI resources closed.
2025-05-04 20:42:08,561 - agent.cli - INFO - Loaded environment variables from: /Users/giorgobg/Desktop/Software Factory/.env
2025-05-04 20:42:08,561 - agent.cli - INFO - Initializing CLI services...
2025-05-04 20:42:08,561 - agents.db.postgres - INFO - Initializing PostgreSQL connection pool...
2025-05-04 20:42:08,582 - agents.db.postgres - INFO - PostgreSQL connection pool initialized successfully.
2025-05-04 20:42:08,582 - agents.llm.vertex_gemini_provider - INFO - Configured Google Generative AI SDK with API key.
2025-05-04 20:42:08,582 - agents.llm.vertex_gemini_provider - INFO - Initialized Gemini API model: gemini-1.5-flash-001
2025-05-04 20:42:08,582 - agents.llm.vertex_gemini_provider - INFO - Vertex AI initialized for embedding model: project 'ai-team-458821', location 'us-central1'
2025-05-04 20:42:10,528 - agents.llm.vertex_gemini_provider - ERROR - Failed to load Vertex embedding model text-embedding-004 (this might be expected if Vertex setup is incomplete): 403 This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry. [reason: "BILLING_DISABLED"
domain: "googleapis.com"
metadata {
  key: "service"
  value: "aiplatform.googleapis.com"
}
metadata {
  key: "containerInfo"
  value: "ai-team-458821"
}
metadata {
  key: "consumer"
  value: "projects/ai-team-458821"
}
, locale: "en-US"
message: "This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry."
, links {
  description: "Google developers console billing"
  url: "https://console.developers.google.com/billing/enable?project=ai-team-458821"
}
]
2025-05-04 20:42:10,528 - agent.cli - ERROR - CLI Initialization failed: EnhancedVectorMemory.__init__() got an unexpected keyword argument 'llm_provider'
Traceback (most recent call last):
  File "/Users/giorgobg/Desktop/Software Factory/agents/cli/agent_cli.py", line 96, in initialize
    self.vector_memory = EnhancedVectorMemory(
                         ~~~~~~~~~~~~~~~~~~~~^
        self.db_client, llm_provider=self.llm_provider
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
TypeError: EnhancedVectorMemory.__init__() got an unexpected keyword argument 'llm_provider'
2025-05-04 20:42:10,530 - agents.db.postgres - INFO - Closing PostgreSQL connection pool...
2025-05-04 20:42:10,533 - agents.db.postgres - INFO - PostgreSQL connection pool closed.
2025-05-04 20:42:10,534 - agent.cli - INFO - CLI resources closed.
2025-05-04 20:42:50,219 - agent.cli - INFO - Loaded environment variables from: /Users/giorgobg/Desktop/Software Factory/.env
2025-05-04 20:42:50,219 - agent.cli - INFO - Initializing CLI services...
2025-05-04 20:42:50,220 - agents.db.postgres - INFO - Initializing PostgreSQL connection pool...
2025-05-04 20:42:50,242 - agents.db.postgres - INFO - PostgreSQL connection pool initialized successfully.
2025-05-04 20:42:50,242 - agents.llm.vertex_gemini_provider - INFO - Configured Google Generative AI SDK with API key.
2025-05-04 20:42:50,242 - agents.llm.vertex_gemini_provider - INFO - Initialized Gemini API model: gemini-1.5-flash-001
2025-05-04 20:42:50,242 - agents.llm.vertex_gemini_provider - INFO - Vertex AI initialized for embedding model: project 'ai-team-458821', location 'us-central1'
2025-05-04 20:42:52,076 - agents.llm.vertex_gemini_provider - ERROR - Failed to load Vertex embedding model text-embedding-004 (this might be expected if Vertex setup is incomplete): 403 This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry. [reason: "BILLING_DISABLED"
domain: "googleapis.com"
metadata {
  key: "service"
  value: "aiplatform.googleapis.com"
}
metadata {
  key: "containerInfo"
  value: "ai-team-458821"
}
metadata {
  key: "consumer"
  value: "projects/ai-team-458821"
}
, locale: "en-US"
message: "This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry."
, links {
  description: "Google developers console billing"
  url: "https://console.developers.google.com/billing/enable?project=ai-team-458821"
}
]
2025-05-04 20:42:52,077 - agent.memory.enhanced_vector - INFO - Initializing EnhancedVectorMemory system...
2025-05-04 20:42:52,087 - agent.memory.enhanced_vector - INFO - Enhanced vector memory system initialized successfully.
2025-05-04 20:42:52,088 - agent.factory - INFO - AgentFactory initialized with shared dependencies.
2025-05-04 20:42:52,088 - agent.cli - INFO - CLI services initialized successfully.
2025-05-04 20:42:52,088 - agent.factory - INFO - Creating agent of type 'product_manager' with name 'CLI Test PM'
2025-05-04 20:42:52,088 - agent.factory - ERROR - Failed to instantiate agent type 'product_manager' with name 'CLI Test PM': agents.base_agent.BaseAgent.__init__() got multiple values for keyword argument 'agent_type'
Traceback (most recent call last):
  File "/Users/giorgobg/Desktop/Software Factory/agents/factory.py", line 104, in create_agent
    agent_instance = agent_class(**filtered_args)
  File "/Users/giorgobg/Desktop/Software Factory/agents/specialized/product_manager.py", line 20, in __init__
    super().__init__(
    ~~~~~~~~~~~~~~~~^
        agent_type="product_manager",
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<8 lines>...
        **kwargs,
        ^^^^^^^^^
    )
    ^
TypeError: agents.base_agent.BaseAgent.__init__() got multiple values for keyword argument 'agent_type'
2025-05-04 20:42:52,091 - agent.cli - ERROR - Unexpected error creating agent CLI Test PM of type product_manager: agents.base_agent.BaseAgent.__init__() got multiple values for keyword argument 'agent_type'
Traceback (most recent call last):
  File "/Users/giorgobg/Desktop/Software Factory/agents/cli/agent_cli.py", line 146, in create_agent
    agent_instance = self.agent_factory.create_agent(
        agent_type=agent_type,
    ...<2 lines>...
        # agent_id is generated by default in BaseAgent constructor
    )
  File "/Users/giorgobg/Desktop/Software Factory/agents/factory.py", line 104, in create_agent
    agent_instance = agent_class(**filtered_args)
  File "/Users/giorgobg/Desktop/Software Factory/agents/specialized/product_manager.py", line 20, in __init__
    super().__init__(
    ~~~~~~~~~~~~~~~~^
        agent_type="product_manager",
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<8 lines>...
        **kwargs,
        ^^^^^^^^^
    )
    ^
TypeError: agents.base_agent.BaseAgent.__init__() got multiple values for keyword argument 'agent_type'
2025-05-04 20:42:52,092 - agents.db.postgres - INFO - Closing PostgreSQL connection pool...
2025-05-04 20:42:52,096 - agents.db.postgres - INFO - PostgreSQL connection pool closed.
2025-05-04 20:42:52,096 - agent.cli - INFO - CLI resources closed.
2025-05-04 20:43:39,422 - agent.cli - INFO - Loaded environment variables from: /Users/giorgobg/Desktop/Software Factory/.env
2025-05-04 20:43:39,422 - agent.cli - INFO - Initializing CLI services...
2025-05-04 20:43:39,422 - agents.db.postgres - INFO - Initializing PostgreSQL connection pool...
2025-05-04 20:43:39,444 - agents.db.postgres - INFO - PostgreSQL connection pool initialized successfully.
2025-05-04 20:43:39,444 - agents.llm.vertex_gemini_provider - INFO - Configured Google Generative AI SDK with API key.
2025-05-04 20:43:39,444 - agents.llm.vertex_gemini_provider - INFO - Initialized Gemini API model: gemini-1.5-flash-001
2025-05-04 20:43:39,444 - agents.llm.vertex_gemini_provider - INFO - Vertex AI initialized for embedding model: project 'ai-team-458821', location 'us-central1'
2025-05-04 20:43:41,181 - agents.llm.vertex_gemini_provider - ERROR - Failed to load Vertex embedding model text-embedding-004 (this might be expected if Vertex setup is incomplete): 403 This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry. [reason: "BILLING_DISABLED"
domain: "googleapis.com"
metadata {
  key: "service"
  value: "aiplatform.googleapis.com"
}
metadata {
  key: "containerInfo"
  value: "ai-team-458821"
}
metadata {
  key: "consumer"
  value: "projects/ai-team-458821"
}
, locale: "en-US"
message: "This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry."
, links {
  description: "Google developers console billing"
  url: "https://console.developers.google.com/billing/enable?project=ai-team-458821"
}
]
2025-05-04 20:43:41,182 - agent.memory.enhanced_vector - INFO - Initializing EnhancedVectorMemory system...
2025-05-04 20:43:41,190 - agent.memory.enhanced_vector - INFO - Enhanced vector memory system initialized successfully.
2025-05-04 20:43:41,190 - agent.factory - INFO - AgentFactory initialized with shared dependencies.
2025-05-04 20:43:41,190 - agent.cli - INFO - CLI services initialized successfully.
2025-05-04 20:43:41,190 - agent.factory - INFO - Creating agent of type 'product_manager' with name 'CLI Test PM'
2025-05-04 20:43:41,190 - agent.factory - ERROR - Failed to instantiate agent type 'product_manager' with name 'CLI Test PM': name 'logger' is not defined
Traceback (most recent call last):
  File "/Users/giorgobg/Desktop/Software Factory/agents/factory.py", line 104, in create_agent
    agent_instance = agent_class(**filtered_args)
  File "/Users/giorgobg/Desktop/Software Factory/agents/specialized/product_manager.py", line 37, in __init__
    logger.info(
    ^^^^^^
NameError: name 'logger' is not defined. Did you mean: 'self.logger'?
2025-05-04 20:43:41,192 - agent.cli - ERROR - Unexpected error creating agent CLI Test PM of type product_manager: name 'logger' is not defined
Traceback (most recent call last):
  File "/Users/giorgobg/Desktop/Software Factory/agents/cli/agent_cli.py", line 146, in create_agent
    agent_instance = self.agent_factory.create_agent(
        agent_type=agent_type,
    ...<2 lines>...
        # agent_id is generated by default in BaseAgent constructor
    )
  File "/Users/giorgobg/Desktop/Software Factory/agents/factory.py", line 104, in create_agent
    agent_instance = agent_class(**filtered_args)
  File "/Users/giorgobg/Desktop/Software Factory/agents/specialized/product_manager.py", line 37, in __init__
    logger.info(
    ^^^^^^
NameError: name 'logger' is not defined. Did you mean: 'self.logger'?
2025-05-04 20:43:41,193 - agents.db.postgres - INFO - Closing PostgreSQL connection pool...
2025-05-04 20:43:41,193 - agent.logging.thought - INFO - Initializing ThoughtCapture system...
2025-05-04 20:43:41,194 - agents.db.postgres - ERROR - Query execution error: pool is closing for query: 
                CREATE INDEX IF NOT EXISTS idx_thought_processes_agent_id ON thought_processes(agen...
Traceback (most recent call last):
  File "/Users/giorgobg/Desktop/Software Factory/agents/db/postgres.py", line 114, in execute
    async with self.pool.acquire() as conn:
               ~~~~~~~~~~~~~~~~~^^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/pool.py", line 1024, in __aenter__
    self.connection = await self.pool._acquire(self.timeout)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/pool.py", line 860, in _acquire
    raise exceptions.InterfaceError('pool is closing')
asyncpg.exceptions._base.InterfaceError: pool is closing
2025-05-04 20:43:41,195 - agent.logging.thought - ERROR - Failed to initialize ThoughtCapture: pool is closing
Traceback (most recent call last):
  File "/Users/giorgobg/Desktop/Software Factory/agents/logging/thought_capture.py", line 46, in initialize
    await self.db_client.execute(
    ...<3 lines>...
    )
  File "/Users/giorgobg/Desktop/Software Factory/agents/db/postgres.py", line 114, in execute
    async with self.pool.acquire() as conn:
               ~~~~~~~~~~~~~~~~~^^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/pool.py", line 1024, in __aenter__
    self.connection = await self.pool._acquire(self.timeout)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/pool.py", line 860, in _acquire
    raise exceptions.InterfaceError('pool is closing')
asyncpg.exceptions._base.InterfaceError: pool is closing
2025-05-04 20:43:41,196 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished name='Task-13' coro=<ThoughtCapture.initialize() done, defined at /Users/giorgobg/Desktop/Software Factory/agents/logging/thought_capture.py:35> exception=InterfaceError('pool is closing')>
Traceback (most recent call last):
  File "/Users/giorgobg/Desktop/Software Factory/agents/logging/thought_capture.py", line 46, in initialize
    await self.db_client.execute(
    ...<3 lines>...
    )
  File "/Users/giorgobg/Desktop/Software Factory/agents/db/postgres.py", line 114, in execute
    async with self.pool.acquire() as conn:
               ~~~~~~~~~~~~~~~~~^^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/pool.py", line 1024, in __aenter__
    self.connection = await self.pool._acquire(self.timeout)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/pool.py", line 860, in _acquire
    raise exceptions.InterfaceError('pool is closing')
asyncpg.exceptions._base.InterfaceError: pool is closing
2025-05-04 20:43:41,197 - agents.db.postgres - ERROR - Query fetch_one error: pool is closing for query: SELECT agent_id FROM agents WHERE agent_id = $1...
Traceback (most recent call last):
  File "/Users/giorgobg/Desktop/Software Factory/agents/db/postgres.py", line 131, in fetch_one
    async with self.pool.acquire() as conn:
               ~~~~~~~~~~~~~~~~~^^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/pool.py", line 1024, in __aenter__
    self.connection = await self.pool._acquire(self.timeout)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/pool.py", line 860, in _acquire
    raise exceptions.InterfaceError('pool is closing')
asyncpg.exceptions._base.InterfaceError: pool is closing
2025-05-04 20:43:41,198 - agent.product_manager.5ff7c7db - ERROR - Error during agent registration for 5ff7c7db-ec46-4667-9a14-4b901b15eb6f: pool is closing
Traceback (most recent call last):
  File "/Users/giorgobg/Desktop/Software Factory/agents/base_agent.py", line 115, in _register_agent
    result = await self.db_client.fetch_one(query_check, self.agent_id)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/giorgobg/Desktop/Software Factory/agents/db/postgres.py", line 131, in fetch_one
    async with self.pool.acquire() as conn:
               ~~~~~~~~~~~~~~~~~^^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/pool.py", line 1024, in __aenter__
    self.connection = await self.pool._acquire(self.timeout)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/pool.py", line 860, in _acquire
    raise exceptions.InterfaceError('pool is closing')
asyncpg.exceptions._base.InterfaceError: pool is closing
2025-05-04 20:43:41,202 - agents.db.postgres - INFO - PostgreSQL connection pool closed.
2025-05-04 20:43:41,202 - agent.cli - INFO - CLI resources closed.
2025-05-04 20:44:09,269 - agent.cli - INFO - Loaded environment variables from: /Users/giorgobg/Desktop/Software Factory/.env
2025-05-04 20:44:09,270 - agent.cli - INFO - Initializing CLI services...
2025-05-04 20:44:09,270 - agents.db.postgres - INFO - Initializing PostgreSQL connection pool...
2025-05-04 20:44:09,291 - agents.db.postgres - INFO - PostgreSQL connection pool initialized successfully.
2025-05-04 20:44:09,291 - agents.llm.vertex_gemini_provider - INFO - Configured Google Generative AI SDK with API key.
2025-05-04 20:44:09,291 - agents.llm.vertex_gemini_provider - INFO - Initialized Gemini API model: gemini-1.5-flash-001
2025-05-04 20:44:09,291 - agents.llm.vertex_gemini_provider - INFO - Vertex AI initialized for embedding model: project 'ai-team-458821', location 'us-central1'
2025-05-04 20:44:11,054 - agents.llm.vertex_gemini_provider - ERROR - Failed to load Vertex embedding model text-embedding-004 (this might be expected if Vertex setup is incomplete): 403 This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry. [reason: "BILLING_DISABLED"
domain: "googleapis.com"
metadata {
  key: "service"
  value: "aiplatform.googleapis.com"
}
metadata {
  key: "containerInfo"
  value: "ai-team-458821"
}
metadata {
  key: "consumer"
  value: "projects/ai-team-458821"
}
, locale: "en-US"
message: "This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry."
, links {
  description: "Google developers console billing"
  url: "https://console.developers.google.com/billing/enable?project=ai-team-458821"
}
]
2025-05-04 20:44:11,054 - agent.memory.enhanced_vector - INFO - Initializing EnhancedVectorMemory system...
2025-05-04 20:44:11,062 - agent.memory.enhanced_vector - INFO - Enhanced vector memory system initialized successfully.
2025-05-04 20:44:11,062 - agent.factory - INFO - AgentFactory initialized with shared dependencies.
2025-05-04 20:44:11,062 - agent.cli - INFO - CLI services initialized successfully.
2025-05-04 20:44:11,062 - agent.factory - INFO - Creating agent of type 'product_manager' with name 'CLI Test PM'
2025-05-04 20:44:11,062 - agent.product_manager.ecb92fc9 - INFO - ProductManagerAgent ecb92fc9-bceb-43c4-b69e-2e77875e61b0 (CLI Test PM) initialized.
2025-05-04 20:44:11,063 - agent.factory - INFO - Successfully created agent ecb92fc9-bceb-43c4-b69e-2e77875e61b0 (CLI Test PM)
2025-05-04 20:44:11,063 - agent.logging.thought - INFO - Initializing ThoughtCapture system...
2025-05-04 20:44:11,067 - agent.logging.thought - INFO - Thought capture system initialized successfully.
2025-05-04 20:44:11,067 - agent.memory.enhanced_vector - INFO - Registered entity type: ThoughtProcess
2025-05-04 20:44:11,067 - agent.logging.thought - INFO - Registered ThoughtProcess entity type with vector memory
2025-05-04 20:44:11,068 - agent.cli - INFO - Agent ecb92fc9-bceb-43c4-b69e-2e77875e61b0 (CLI Test PM) created and registered/updated in DB.
2025-05-04 20:44:11,068 - agents.db.postgres - INFO - Closing PostgreSQL connection pool...
2025-05-04 20:44:11,069 - agents.db.postgres - WARNING - Unique constraint violation during execute: duplicate key value violates unique constraint "agents_pkey"
DETAIL:  Key (agent_id)=(ecb92fc9-bceb-43c4-b69e-2e77875e61b0) already exists.
2025-05-04 20:44:11,070 - agent.product_manager.ecb92fc9 - ERROR - Error during agent registration for ecb92fc9-bceb-43c4-b69e-2e77875e61b0: duplicate key value violates unique constraint "agents_pkey"
DETAIL:  Key (agent_id)=(ecb92fc9-bceb-43c4-b69e-2e77875e61b0) already exists.
Traceback (most recent call last):
  File "/Users/giorgobg/Desktop/Software Factory/agents/base_agent.py", line 123, in _register_agent
    await self.db_client.execute(
    ...<6 lines>...
    )
  File "/Users/giorgobg/Desktop/Software Factory/agents/db/postgres.py", line 115, in execute
    status = await conn.execute(query, *args)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connection.py", line 352, in execute
    _, status, _ = await self._execute(
                   ^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connection.py", line 1864, in _execute
    result, _ = await self.__execute(
                ^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connection.py", line 1961, in __execute
    result, stmt = await self._do_execute(
                   ^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connection.py", line 2024, in _do_execute
    result = await executor(stmt, None)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "asyncpg/protocol/protocol.pyx", line 206, in bind_execute
asyncpg.exceptions.UniqueViolationError: duplicate key value violates unique constraint "agents_pkey"
DETAIL:  Key (agent_id)=(ecb92fc9-bceb-43c4-b69e-2e77875e61b0) already exists.
2025-05-04 20:44:11,076 - agents.db.postgres - INFO - PostgreSQL connection pool closed.
2025-05-04 20:44:11,076 - agent.cli - INFO - CLI resources closed.
2025-05-04 20:44:53,570 - agent.cli - INFO - Loaded environment variables from: /Users/giorgobg/Desktop/Software Factory/.env
2025-05-04 20:44:53,570 - agent.cli - INFO - Initializing CLI services...
2025-05-04 20:44:53,570 - agents.db.postgres - INFO - Initializing PostgreSQL connection pool...
2025-05-04 20:44:53,616 - agents.db.postgres - INFO - PostgreSQL connection pool initialized successfully.
2025-05-04 20:44:53,616 - agents.llm.vertex_gemini_provider - INFO - Configured Google Generative AI SDK with API key.
2025-05-04 20:44:53,616 - agents.llm.vertex_gemini_provider - INFO - Initialized Gemini API model: gemini-1.5-flash-001
2025-05-04 20:44:53,617 - agents.llm.vertex_gemini_provider - INFO - Vertex AI initialized for embedding model: project 'ai-team-458821', location 'us-central1'
2025-05-04 20:44:55,701 - agents.llm.vertex_gemini_provider - ERROR - Failed to load Vertex embedding model text-embedding-004 (this might be expected if Vertex setup is incomplete): 403 This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry. [reason: "BILLING_DISABLED"
domain: "googleapis.com"
metadata {
  key: "service"
  value: "aiplatform.googleapis.com"
}
metadata {
  key: "containerInfo"
  value: "ai-team-458821"
}
metadata {
  key: "consumer"
  value: "projects/ai-team-458821"
}
, locale: "en-US"
message: "This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry."
, links {
  description: "Google developers console billing"
  url: "https://console.developers.google.com/billing/enable?project=ai-team-458821"
}
]
2025-05-04 20:44:55,701 - agent.memory.enhanced_vector - INFO - Initializing EnhancedVectorMemory system...
2025-05-04 20:44:55,713 - agent.memory.enhanced_vector - INFO - Enhanced vector memory system initialized successfully.
2025-05-04 20:44:55,713 - agent.factory - INFO - AgentFactory initialized with shared dependencies.
2025-05-04 20:44:55,713 - agent.cli - INFO - CLI services initialized successfully.
2025-05-04 20:44:55,717 - agents.db.postgres - INFO - Closing PostgreSQL connection pool...
2025-05-04 20:44:55,723 - agents.db.postgres - INFO - PostgreSQL connection pool closed.
2025-05-04 20:44:55,723 - agent.cli - INFO - CLI resources closed.
2025-05-04 20:45:42,525 - agent.cli - INFO - Loaded environment variables from: /Users/giorgobg/Desktop/Software Factory/.env
2025-05-04 20:45:42,525 - agent.cli - INFO - Initializing CLI services...
2025-05-04 20:45:42,526 - agents.db.postgres - INFO - Initializing PostgreSQL connection pool...
2025-05-04 20:45:42,571 - agents.db.postgres - INFO - PostgreSQL connection pool initialized successfully.
2025-05-04 20:45:42,571 - agents.llm.vertex_gemini_provider - INFO - Configured Google Generative AI SDK with API key.
2025-05-04 20:45:42,571 - agents.llm.vertex_gemini_provider - INFO - Initialized Gemini API model: gemini-1.5-flash-001
2025-05-04 20:45:42,572 - agents.llm.vertex_gemini_provider - INFO - Vertex AI initialized for embedding model: project 'ai-team-458821', location 'us-central1'
2025-05-04 20:45:44,631 - agents.llm.vertex_gemini_provider - ERROR - Failed to load Vertex embedding model text-embedding-004 (this might be expected if Vertex setup is incomplete): 403 This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry. [reason: "BILLING_DISABLED"
domain: "googleapis.com"
metadata {
  key: "service"
  value: "aiplatform.googleapis.com"
}
metadata {
  key: "containerInfo"
  value: "ai-team-458821"
}
metadata {
  key: "consumer"
  value: "projects/ai-team-458821"
}
, locale: "en-US"
message: "This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry."
, links {
  description: "Google developers console billing"
  url: "https://console.developers.google.com/billing/enable?project=ai-team-458821"
}
]
2025-05-04 20:45:44,632 - agent.memory.enhanced_vector - INFO - Initializing EnhancedVectorMemory system...
2025-05-04 20:45:44,659 - agent.memory.enhanced_vector - INFO - Enhanced vector memory system initialized successfully.
2025-05-04 20:45:44,659 - agent.factory - INFO - AgentFactory initialized with shared dependencies.
2025-05-04 20:45:44,659 - agent.cli - INFO - CLI services initialized successfully.
2025-05-04 20:45:44,659 - agent.factory - INFO - Creating agent of type 'scrum_master' with name 'CLI Test SM'
2025-05-04 20:45:44,660 - agent.factory - ERROR - Failed to instantiate agent type 'scrum_master' with name 'CLI Test SM': agents.base_agent.BaseAgent.__init__() got multiple values for keyword argument 'agent_type'
Traceback (most recent call last):
  File "/Users/giorgobg/Desktop/Software Factory/agents/factory.py", line 104, in create_agent
    agent_instance = agent_class(**filtered_args)
  File "/Users/giorgobg/Desktop/Software Factory/agents/specialized/scrum_master.py", line 20, in __init__
    super().__init__(
    ~~~~~~~~~~~~~~~~^
        agent_type="scrum_master",
        ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<8 lines>...
        **kwargs,
        ^^^^^^^^^
    )
    ^
TypeError: agents.base_agent.BaseAgent.__init__() got multiple values for keyword argument 'agent_type'
2025-05-04 20:45:44,662 - agent.cli - ERROR - Unexpected error creating agent CLI Test SM of type scrum_master: agents.base_agent.BaseAgent.__init__() got multiple values for keyword argument 'agent_type'
Traceback (most recent call last):
  File "/Users/giorgobg/Desktop/Software Factory/agents/cli/agent_cli.py", line 146, in create_agent
    agent_instance = self.agent_factory.create_agent(
        agent_type=agent_type,
    ...<2 lines>...
        # agent_id is generated by default in BaseAgent constructor
    )
  File "/Users/giorgobg/Desktop/Software Factory/agents/factory.py", line 104, in create_agent
    agent_instance = agent_class(**filtered_args)
  File "/Users/giorgobg/Desktop/Software Factory/agents/specialized/scrum_master.py", line 20, in __init__
    super().__init__(
    ~~~~~~~~~~~~~~~~^
        agent_type="scrum_master",
        ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<8 lines>...
        **kwargs,
        ^^^^^^^^^
    )
    ^
TypeError: agents.base_agent.BaseAgent.__init__() got multiple values for keyword argument 'agent_type'
2025-05-04 20:45:44,664 - agents.db.postgres - INFO - Closing PostgreSQL connection pool...
2025-05-04 20:45:44,669 - agents.db.postgres - INFO - PostgreSQL connection pool closed.
2025-05-04 20:45:44,669 - agent.cli - INFO - CLI resources closed.
2025-05-04 20:46:06,162 - agent.cli - INFO - Loaded environment variables from: /Users/giorgobg/Desktop/Software Factory/.env
2025-05-04 20:46:06,162 - agent.cli - INFO - Initializing CLI services...
2025-05-04 20:46:06,162 - agents.db.postgres - INFO - Initializing PostgreSQL connection pool...
2025-05-04 20:46:06,208 - agents.db.postgres - INFO - PostgreSQL connection pool initialized successfully.
2025-05-04 20:46:06,208 - agents.llm.vertex_gemini_provider - INFO - Configured Google Generative AI SDK with API key.
2025-05-04 20:46:06,208 - agents.llm.vertex_gemini_provider - INFO - Initialized Gemini API model: gemini-1.5-flash-001
2025-05-04 20:46:06,208 - agents.llm.vertex_gemini_provider - INFO - Vertex AI initialized for embedding model: project 'ai-team-458821', location 'us-central1'
2025-05-04 20:46:08,282 - agents.llm.vertex_gemini_provider - ERROR - Failed to load Vertex embedding model text-embedding-004 (this might be expected if Vertex setup is incomplete): 403 This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry. [reason: "BILLING_DISABLED"
domain: "googleapis.com"
metadata {
  key: "service"
  value: "aiplatform.googleapis.com"
}
metadata {
  key: "containerInfo"
  value: "ai-team-458821"
}
metadata {
  key: "consumer"
  value: "projects/ai-team-458821"
}
, locale: "en-US"
message: "This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry."
, links {
  description: "Google developers console billing"
  url: "https://console.developers.google.com/billing/enable?project=ai-team-458821"
}
]
2025-05-04 20:46:08,283 - agent.memory.enhanced_vector - INFO - Initializing EnhancedVectorMemory system...
2025-05-04 20:46:08,310 - agent.memory.enhanced_vector - INFO - Enhanced vector memory system initialized successfully.
2025-05-04 20:46:08,310 - agent.factory - INFO - AgentFactory initialized with shared dependencies.
2025-05-04 20:46:08,310 - agent.cli - INFO - CLI services initialized successfully.
2025-05-04 20:46:08,311 - agent.factory - INFO - Creating agent of type 'scrum_master' with name 'CLI Test SM'
2025-05-04 20:46:08,311 - agent.scrum_master.e29f58f7 - INFO - ScrumMasterAgent e29f58f7-efa0-40f0-8675-e36bb76bccfb (CLI Test SM) initialized.
2025-05-04 20:46:08,311 - agent.factory - INFO - Successfully created agent e29f58f7-efa0-40f0-8675-e36bb76bccfb (CLI Test SM)
2025-05-04 20:46:08,311 - agent.logging.thought - INFO - Initializing ThoughtCapture system...
2025-05-04 20:46:08,314 - agent.cli - INFO - Agent e29f58f7-efa0-40f0-8675-e36bb76bccfb (CLI Test SM) created and registered/updated in DB.
2025-05-04 20:46:08,314 - agents.db.postgres - INFO - Closing PostgreSQL connection pool...
2025-05-04 20:46:08,315 - agents.db.postgres - ERROR - Query execution error: pool is closing for query: 
                CREATE INDEX IF NOT EXISTS idx_thought_processes_task_id ON thought_processes(relat...
Traceback (most recent call last):
  File "/Users/giorgobg/Desktop/Software Factory/agents/db/postgres.py", line 114, in execute
    async with self.pool.acquire() as conn:
               ~~~~~~~~~~~~~~~~~^^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/pool.py", line 1024, in __aenter__
    self.connection = await self.pool._acquire(self.timeout)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/pool.py", line 860, in _acquire
    raise exceptions.InterfaceError('pool is closing')
asyncpg.exceptions._base.InterfaceError: pool is closing
2025-05-04 20:46:08,318 - agent.logging.thought - ERROR - Failed to initialize ThoughtCapture: pool is closing
Traceback (most recent call last):
  File "/Users/giorgobg/Desktop/Software Factory/agents/logging/thought_capture.py", line 52, in initialize
    await self.db_client.execute(
    ...<3 lines>...
    )
  File "/Users/giorgobg/Desktop/Software Factory/agents/db/postgres.py", line 114, in execute
    async with self.pool.acquire() as conn:
               ~~~~~~~~~~~~~~~~~^^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/pool.py", line 1024, in __aenter__
    self.connection = await self.pool._acquire(self.timeout)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/pool.py", line 860, in _acquire
    raise exceptions.InterfaceError('pool is closing')
asyncpg.exceptions._base.InterfaceError: pool is closing
2025-05-04 20:46:08,320 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished name='Task-13' coro=<ThoughtCapture.initialize() done, defined at /Users/giorgobg/Desktop/Software Factory/agents/logging/thought_capture.py:35> exception=InterfaceError('pool is closing')>
Traceback (most recent call last):
  File "/Users/giorgobg/Desktop/Software Factory/agents/logging/thought_capture.py", line 52, in initialize
    await self.db_client.execute(
    ...<3 lines>...
    )
  File "/Users/giorgobg/Desktop/Software Factory/agents/db/postgres.py", line 114, in execute
    async with self.pool.acquire() as conn:
               ~~~~~~~~~~~~~~~~~^^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/pool.py", line 1024, in __aenter__
    self.connection = await self.pool._acquire(self.timeout)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/pool.py", line 860, in _acquire
    raise exceptions.InterfaceError('pool is closing')
asyncpg.exceptions._base.InterfaceError: pool is closing
2025-05-04 20:46:08,326 - agents.db.postgres - INFO - PostgreSQL connection pool closed.
2025-05-04 20:46:08,326 - agent.cli - INFO - CLI resources closed.
2025-05-04 20:46:29,403 - agent.cli - INFO - Loaded environment variables from: /Users/giorgobg/Desktop/Software Factory/.env
2025-05-04 20:46:29,403 - agent.cli - INFO - Initializing CLI services...
2025-05-04 20:46:29,403 - agents.db.postgres - INFO - Initializing PostgreSQL connection pool...
2025-05-04 20:46:29,451 - agents.db.postgres - INFO - PostgreSQL connection pool initialized successfully.
2025-05-04 20:46:29,451 - agents.llm.vertex_gemini_provider - INFO - Configured Google Generative AI SDK with API key.
2025-05-04 20:46:29,451 - agents.llm.vertex_gemini_provider - INFO - Initialized Gemini API model: gemini-1.5-flash-001
2025-05-04 20:46:29,451 - agents.llm.vertex_gemini_provider - INFO - Vertex AI initialized for embedding model: project 'ai-team-458821', location 'us-central1'
2025-05-04 20:46:31,571 - agents.llm.vertex_gemini_provider - ERROR - Failed to load Vertex embedding model text-embedding-004 (this might be expected if Vertex setup is incomplete): 403 This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry. [reason: "BILLING_DISABLED"
domain: "googleapis.com"
metadata {
  key: "service"
  value: "aiplatform.googleapis.com"
}
metadata {
  key: "containerInfo"
  value: "ai-team-458821"
}
metadata {
  key: "consumer"
  value: "projects/ai-team-458821"
}
, locale: "en-US"
message: "This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry."
, links {
  description: "Google developers console billing"
  url: "https://console.developers.google.com/billing/enable?project=ai-team-458821"
}
]
2025-05-04 20:46:31,572 - agent.memory.enhanced_vector - INFO - Initializing EnhancedVectorMemory system...
2025-05-04 20:46:31,583 - agent.memory.enhanced_vector - INFO - Enhanced vector memory system initialized successfully.
2025-05-04 20:46:31,583 - agent.factory - INFO - AgentFactory initialized with shared dependencies.
2025-05-04 20:46:31,583 - agent.cli - INFO - CLI services initialized successfully.
2025-05-04 20:46:31,611 - agent.cli - INFO - Message 2b515dbb-06ae-4224-ae90-a8abf7d17c15 logged to DB: ecb92fc9-bceb-43c4-b69e-2e77875e61b0 -> e29f58f7-efa0-40f0-8675-e36bb76bccfb
2025-05-04 20:46:31,611 - agents.llm.vertex_gemini_provider - ERROR - Vertex AI embedding model not loaded (likely due to setup issues). Cannot generate embeddings.
2025-05-04 20:46:31,611 - agent.cli - WARNING - Failed to generate embedding for message 2b515dbb-06ae-4224-ae90-a8abf7d17c15 (using LLM provider: GeminiApiProvider)
2025-05-04 20:46:31,611 - agents.db.postgres - INFO - Closing PostgreSQL connection pool...
2025-05-04 20:46:31,616 - agents.db.postgres - INFO - PostgreSQL connection pool closed.
2025-05-04 20:46:31,617 - agent.cli - INFO - CLI resources closed.
2025-05-04 20:47:29,670 - agent.cli - INFO - Loaded environment variables from: /Users/giorgobg/Desktop/Software Factory/.env
2025-05-04 20:47:29,671 - agent.cli - INFO - Initializing CLI services...
2025-05-04 20:47:29,671 - agents.db.postgres - INFO - Initializing PostgreSQL connection pool...
2025-05-04 20:47:29,712 - agents.db.postgres - INFO - PostgreSQL connection pool initialized successfully.
2025-05-04 20:47:29,712 - agents.llm.vertex_gemini_provider - INFO - Configured Google Generative AI SDK with API key.
2025-05-04 20:47:29,712 - agents.llm.vertex_gemini_provider - INFO - Initialized Gemini API model: gemini-1.5-flash-001
2025-05-04 20:47:29,713 - agents.llm.vertex_gemini_provider - INFO - Vertex AI initialized for embedding model: project 'ai-team-458821', location 'us-central1'
2025-05-04 20:47:31,836 - agents.llm.vertex_gemini_provider - ERROR - Failed to load Vertex embedding model text-embedding-004 (this might be expected if Vertex setup is incomplete): 403 This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry. [reason: "BILLING_DISABLED"
domain: "googleapis.com"
metadata {
  key: "service"
  value: "aiplatform.googleapis.com"
}
metadata {
  key: "containerInfo"
  value: "ai-team-458821"
}
metadata {
  key: "consumer"
  value: "projects/ai-team-458821"
}
, locale: "en-US"
message: "This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry."
, links {
  description: "Google developers console billing"
  url: "https://console.developers.google.com/billing/enable?project=ai-team-458821"
}
]
2025-05-04 20:47:31,836 - agent.memory.enhanced_vector - INFO - Initializing EnhancedVectorMemory system...
2025-05-04 20:47:31,861 - agent.memory.enhanced_vector - INFO - Enhanced vector memory system initialized successfully.
2025-05-04 20:47:31,861 - agent.factory - INFO - AgentFactory initialized with shared dependencies.
2025-05-04 20:47:31,861 - agent.cli - INFO - CLI services initialized successfully.
2025-05-04 20:47:31,866 - agents.db.postgres - INFO - Closing PostgreSQL connection pool...
2025-05-04 20:47:31,871 - agents.db.postgres - INFO - PostgreSQL connection pool closed.
2025-05-04 20:47:31,871 - agent.cli - INFO - CLI resources closed.
2025-05-05 15:44:31,337 - agent.cli - INFO - Loaded environment variables from: /Users/giorgobg/Desktop/Software Factory/.env
2025-05-05 15:44:31,337 - agent.cli - INFO - Initializing CLI services...
2025-05-05 15:44:31,337 - agents.db.postgres - INFO - Initializing PostgreSQL connection pool...
2025-05-05 15:44:31,357 - agents.db.postgres - INFO - PostgreSQL connection pool initialized successfully.
2025-05-05 15:44:31,357 - agents.llm.vertex_gemini_provider - INFO - Configured Google Generative AI SDK with API key.
2025-05-05 15:44:31,357 - agents.llm.vertex_gemini_provider - INFO - Initialized Gemini API model: gemini-1.5-flash-001
2025-05-05 15:44:31,357 - agents.llm.vertex_gemini_provider - INFO - Vertex AI initialized for embedding model: project 'ai-team-458821', location 'us-central1'
2025-05-05 15:44:33,637 - agents.llm.vertex_gemini_provider - ERROR - Failed to load Vertex embedding model text-embedding-004 (this might be expected if Vertex setup is incomplete): 403 This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry. [reason: "BILLING_DISABLED"
domain: "googleapis.com"
metadata {
  key: "service"
  value: "aiplatform.googleapis.com"
}
metadata {
  key: "containerInfo"
  value: "ai-team-458821"
}
metadata {
  key: "consumer"
  value: "projects/ai-team-458821"
}
, locale: "en-US"
message: "This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry."
, links {
  description: "Google developers console billing"
  url: "https://console.developers.google.com/billing/enable?project=ai-team-458821"
}
]
2025-05-05 15:44:33,637 - agent.memory.enhanced_vector - INFO - Initializing EnhancedVectorMemory system...
2025-05-05 15:44:33,655 - agent.memory.enhanced_vector - INFO - Enhanced vector memory system initialized successfully.
2025-05-05 15:44:33,655 - agent.factory - INFO - AgentFactory initialized with shared dependencies.
2025-05-05 15:44:33,655 - agent.cli - INFO - CLI services initialized successfully.
2025-05-05 15:44:33,663 - agent.cli - INFO - Message 202666a4-4562-49a2-8ad5-9c789816c53f logged to DB: ecb92fc9-bceb-43c4-b69e-2e77875e61b0 -> e29f58f7-efa0-40f0-8675-e36bb76bccfb
2025-05-05 15:44:34,252 - agent.cli - ERROR - Failed to store embedding for message 202666a4-4562-49a2-8ad5-9c789816c53f: Embedding dimension mismatch. Expected 1536, got 3072.
Traceback (most recent call last):
  File "/Users/giorgobg/Desktop/Software Factory/agents/cli/agent_cli.py", line 353, in _store_message_embedding
    await self.vector_memory.store_entity(
    ...<12 lines>...
    )
  File "/Users/giorgobg/Desktop/Software Factory/agents/memory/vector_memory.py", line 147, in store_entity
    raise ValueError(
        f"Embedding dimension mismatch. Expected {self.EMBEDDING_DIM}, got {len(embedding)}."
    )
ValueError: Embedding dimension mismatch. Expected 1536, got 3072.
2025-05-05 15:44:34,254 - agents.db.postgres - INFO - Closing PostgreSQL connection pool...
2025-05-05 15:44:34,257 - agents.db.postgres - INFO - PostgreSQL connection pool closed.
2025-05-05 15:44:34,257 - agent.cli - INFO - CLI resources closed.
2025-05-05 15:45:51,861 - agent.cli - INFO - Loaded environment variables from: /Users/giorgobg/Desktop/Software Factory/.env
2025-05-05 15:45:51,861 - agent.cli - INFO - Initializing CLI services...
2025-05-05 15:45:51,861 - agents.db.postgres - INFO - Initializing PostgreSQL connection pool...
2025-05-05 15:45:51,876 - agents.db.postgres - INFO - PostgreSQL connection pool initialized successfully.
2025-05-05 15:45:51,876 - agents.llm.vertex_gemini_provider - INFO - Configured Google Generative AI SDK with API key.
2025-05-05 15:45:51,876 - agents.llm.vertex_gemini_provider - INFO - Initialized Gemini API model: gemini-1.5-flash-001
2025-05-05 15:45:51,877 - agents.llm.vertex_gemini_provider - INFO - Vertex AI initialized for embedding model: project 'ai-team-458821', location 'us-central1'
2025-05-05 15:45:53,335 - agents.llm.vertex_gemini_provider - ERROR - Failed to load Vertex embedding model text-embedding-004 (this might be expected if Vertex setup is incomplete): 403 This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry. [reason: "BILLING_DISABLED"
domain: "googleapis.com"
metadata {
  key: "service"
  value: "aiplatform.googleapis.com"
}
metadata {
  key: "containerInfo"
  value: "ai-team-458821"
}
metadata {
  key: "consumer"
  value: "projects/ai-team-458821"
}
, locale: "en-US"
message: "This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry."
, links {
  description: "Google developers console billing"
  url: "https://console.developers.google.com/billing/enable?project=ai-team-458821"
}
]
2025-05-05 15:45:53,335 - agent.memory.enhanced_vector - INFO - Initializing EnhancedVectorMemory system...
2025-05-05 15:45:53,341 - agent.memory.enhanced_vector - INFO - Enhanced vector memory system initialized successfully.
2025-05-05 15:45:53,342 - agent.factory - INFO - AgentFactory initialized with shared dependencies.
2025-05-05 15:45:53,342 - agent.cli - INFO - CLI services initialized successfully.
2025-05-05 15:45:53,346 - agent.cli - INFO - Message 7535c4cb-6336-410f-bccf-2c09e5f1f811 logged to DB: ecb92fc9-bceb-43c4-b69e-2e77875e61b0 -> e29f58f7-efa0-40f0-8675-e36bb76bccfb
2025-05-05 15:45:53,851 - agents.db.postgres - ERROR - Query fetch_one error: invalid input for query argument $3: [-0.011011861, 0.0029664873, 0.009239071... (expected str, got list) for query: 
        INSERT INTO enhanced_vector_storage (
            entity_type, entity_id, embedding, conten...
Traceback (most recent call last):
  File "asyncpg/protocol/prepared_stmt.pyx", line 175, in asyncpg.protocol.protocol.PreparedStatementState._encode_bind_msg
  File "asyncpg/protocol/codecs/base.pyx", line 227, in asyncpg.protocol.protocol.Codec.encode
  File "asyncpg/protocol/codecs/base.pyx", line 129, in asyncpg.protocol.protocol.Codec.encode_scalar
  File "asyncpg/pgproto/./codecs/text.pyx", line 29, in asyncpg.pgproto.pgproto.text_encode
  File "asyncpg/pgproto/./codecs/text.pyx", line 12, in asyncpg.pgproto.pgproto.as_pg_string_and_size
TypeError: expected str, got list

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/giorgobg/Desktop/Software Factory/agents/db/postgres.py", line 132, in fetch_one
    row = await conn.fetchrow(query, *args)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connection.py", line 748, in fetchrow
    data = await self._execute(
           ^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connection.py", line 1864, in _execute
    result, _ = await self.__execute(
                ^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connection.py", line 1961, in __execute
    result, stmt = await self._do_execute(
                   ^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connection.py", line 2024, in _do_execute
    result = await executor(stmt, None)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "asyncpg/protocol/protocol.pyx", line 185, in bind_execute
  File "asyncpg/protocol/prepared_stmt.pyx", line 204, in asyncpg.protocol.protocol.PreparedStatementState._encode_bind_msg
asyncpg.exceptions.DataError: invalid input for query argument $3: [-0.011011861, 0.0029664873, 0.009239071... (expected str, got list)
2025-05-05 15:45:53,857 - agent.memory.enhanced_vector - ERROR - Error storing entity AgentMessage:7535c4cb-6336-410f-bccf-2c09e5f1f811: invalid input for query argument $3: [-0.011011861, 0.0029664873, 0.009239071... (expected str, got list)
Traceback (most recent call last):
  File "asyncpg/protocol/prepared_stmt.pyx", line 175, in asyncpg.protocol.protocol.PreparedStatementState._encode_bind_msg
  File "asyncpg/protocol/codecs/base.pyx", line 227, in asyncpg.protocol.protocol.Codec.encode
  File "asyncpg/protocol/codecs/base.pyx", line 129, in asyncpg.protocol.protocol.Codec.encode_scalar
  File "asyncpg/pgproto/./codecs/text.pyx", line 29, in asyncpg.pgproto.pgproto.text_encode
  File "asyncpg/pgproto/./codecs/text.pyx", line 12, in asyncpg.pgproto.pgproto.as_pg_string_and_size
TypeError: expected str, got list

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/giorgobg/Desktop/Software Factory/agents/memory/vector_memory.py", line 168, in store_entity
    result = await self.db_client.fetch_one(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/agents/db/postgres.py", line 132, in fetch_one
    row = await conn.fetchrow(query, *args)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connection.py", line 748, in fetchrow
    data = await self._execute(
           ^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connection.py", line 1864, in _execute
    result, _ = await self.__execute(
                ^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connection.py", line 1961, in __execute
    result, stmt = await self._do_execute(
                   ^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connection.py", line 2024, in _do_execute
    result = await executor(stmt, None)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "asyncpg/protocol/protocol.pyx", line 185, in bind_execute
  File "asyncpg/protocol/prepared_stmt.pyx", line 204, in asyncpg.protocol.protocol.PreparedStatementState._encode_bind_msg
asyncpg.exceptions.DataError: invalid input for query argument $3: [-0.011011861, 0.0029664873, 0.009239071... (expected str, got list)
2025-05-05 15:45:53,858 - agent.cli - ERROR - Failed to store embedding for message 7535c4cb-6336-410f-bccf-2c09e5f1f811: invalid input for query argument $3: [-0.011011861, 0.0029664873, 0.009239071... (expected str, got list)
Traceback (most recent call last):
  File "asyncpg/protocol/prepared_stmt.pyx", line 175, in asyncpg.protocol.protocol.PreparedStatementState._encode_bind_msg
  File "asyncpg/protocol/codecs/base.pyx", line 227, in asyncpg.protocol.protocol.Codec.encode
  File "asyncpg/protocol/codecs/base.pyx", line 129, in asyncpg.protocol.protocol.Codec.encode_scalar
  File "asyncpg/pgproto/./codecs/text.pyx", line 29, in asyncpg.pgproto.pgproto.text_encode
  File "asyncpg/pgproto/./codecs/text.pyx", line 12, in asyncpg.pgproto.pgproto.as_pg_string_and_size
TypeError: expected str, got list

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/giorgobg/Desktop/Software Factory/agents/cli/agent_cli.py", line 353, in _store_message_embedding
    await self.vector_memory.store_entity(
    ...<12 lines>...
    )
  File "/Users/giorgobg/Desktop/Software Factory/agents/memory/vector_memory.py", line 168, in store_entity
    result = await self.db_client.fetch_one(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/agents/db/postgres.py", line 132, in fetch_one
    row = await conn.fetchrow(query, *args)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connection.py", line 748, in fetchrow
    data = await self._execute(
           ^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connection.py", line 1864, in _execute
    result, _ = await self.__execute(
                ^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connection.py", line 1961, in __execute
    result, stmt = await self._do_execute(
                   ^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connection.py", line 2024, in _do_execute
    result = await executor(stmt, None)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "asyncpg/protocol/protocol.pyx", line 185, in bind_execute
  File "asyncpg/protocol/prepared_stmt.pyx", line 204, in asyncpg.protocol.protocol.PreparedStatementState._encode_bind_msg
asyncpg.exceptions.DataError: invalid input for query argument $3: [-0.011011861, 0.0029664873, 0.009239071... (expected str, got list)
2025-05-05 15:45:53,861 - agents.db.postgres - INFO - Closing PostgreSQL connection pool...
2025-05-05 15:45:53,864 - agents.db.postgres - INFO - PostgreSQL connection pool closed.
2025-05-05 15:45:53,864 - agent.cli - INFO - CLI resources closed.
2025-05-05 15:46:30,267 - agent.cli - INFO - Loaded environment variables from: /Users/giorgobg/Desktop/Software Factory/.env
2025-05-05 15:46:30,267 - agent.cli - INFO - Initializing CLI services...
2025-05-05 15:46:30,268 - agents.db.postgres - INFO - Initializing PostgreSQL connection pool...
2025-05-05 15:46:30,285 - agents.db.postgres - INFO - PostgreSQL connection pool initialized successfully.
2025-05-05 15:46:30,285 - agents.llm.vertex_gemini_provider - INFO - Configured Google Generative AI SDK with API key.
2025-05-05 15:46:30,285 - agents.llm.vertex_gemini_provider - INFO - Initialized Gemini API model: gemini-1.5-flash-001
2025-05-05 15:46:30,286 - agents.llm.vertex_gemini_provider - INFO - Vertex AI initialized for embedding model: project 'ai-team-458821', location 'us-central1'
2025-05-05 15:46:31,738 - agents.llm.vertex_gemini_provider - ERROR - Failed to load Vertex embedding model text-embedding-004 (this might be expected if Vertex setup is incomplete): 403 This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry. [reason: "BILLING_DISABLED"
domain: "googleapis.com"
metadata {
  key: "service"
  value: "aiplatform.googleapis.com"
}
metadata {
  key: "containerInfo"
  value: "ai-team-458821"
}
metadata {
  key: "consumer"
  value: "projects/ai-team-458821"
}
, locale: "en-US"
message: "This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry."
, links {
  description: "Google developers console billing"
  url: "https://console.developers.google.com/billing/enable?project=ai-team-458821"
}
]
2025-05-05 15:46:31,739 - agent.memory.enhanced_vector - INFO - Initializing EnhancedVectorMemory system...
2025-05-05 15:46:31,746 - agent.memory.enhanced_vector - INFO - Enhanced vector memory system initialized successfully.
2025-05-05 15:46:31,746 - agent.factory - INFO - AgentFactory initialized with shared dependencies.
2025-05-05 15:46:31,746 - agent.cli - INFO - CLI services initialized successfully.
2025-05-05 15:46:31,751 - agent.cli - INFO - Message 1ad3e5df-b160-44f3-8836-147476a6037f logged to DB: ecb92fc9-bceb-43c4-b69e-2e77875e61b0 -> e29f58f7-efa0-40f0-8675-e36bb76bccfb
2025-05-05 15:46:32,260 - agents.db.postgres - ERROR - Query fetch_one error: expected 1536 dimensions, not 3072 for query: 
        INSERT INTO enhanced_vector_storage (
            entity_type, entity_id, embedding, conten...
Traceback (most recent call last):
  File "/Users/giorgobg/Desktop/Software Factory/agents/db/postgres.py", line 132, in fetch_one
    row = await conn.fetchrow(query, *args)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connection.py", line 748, in fetchrow
    data = await self._execute(
           ^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connection.py", line 1864, in _execute
    result, _ = await self.__execute(
                ^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connection.py", line 1961, in __execute
    result, stmt = await self._do_execute(
                   ^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connection.py", line 2024, in _do_execute
    result = await executor(stmt, None)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "asyncpg/protocol/protocol.pyx", line 206, in bind_execute
asyncpg.exceptions.DataError: expected 1536 dimensions, not 3072
2025-05-05 15:46:32,263 - agent.memory.enhanced_vector - ERROR - Error storing entity AgentMessage:1ad3e5df-b160-44f3-8836-147476a6037f: expected 1536 dimensions, not 3072
Traceback (most recent call last):
  File "/Users/giorgobg/Desktop/Software Factory/agents/memory/vector_memory.py", line 171, in store_entity
    result = await self.db_client.fetch_one(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/agents/db/postgres.py", line 132, in fetch_one
    row = await conn.fetchrow(query, *args)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connection.py", line 748, in fetchrow
    data = await self._execute(
           ^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connection.py", line 1864, in _execute
    result, _ = await self.__execute(
                ^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connection.py", line 1961, in __execute
    result, stmt = await self._do_execute(
                   ^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connection.py", line 2024, in _do_execute
    result = await executor(stmt, None)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "asyncpg/protocol/protocol.pyx", line 206, in bind_execute
asyncpg.exceptions.DataError: expected 1536 dimensions, not 3072
2025-05-05 15:46:32,265 - agent.cli - ERROR - Failed to store embedding for message 1ad3e5df-b160-44f3-8836-147476a6037f: expected 1536 dimensions, not 3072
Traceback (most recent call last):
  File "/Users/giorgobg/Desktop/Software Factory/agents/cli/agent_cli.py", line 353, in _store_message_embedding
    await self.vector_memory.store_entity(
    ...<12 lines>...
    )
  File "/Users/giorgobg/Desktop/Software Factory/agents/memory/vector_memory.py", line 171, in store_entity
    result = await self.db_client.fetch_one(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/agents/db/postgres.py", line 132, in fetch_one
    row = await conn.fetchrow(query, *args)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connection.py", line 748, in fetchrow
    data = await self._execute(
           ^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connection.py", line 1864, in _execute
    result, _ = await self.__execute(
                ^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connection.py", line 1961, in __execute
    result, stmt = await self._do_execute(
                   ^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connection.py", line 2024, in _do_execute
    result = await executor(stmt, None)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "asyncpg/protocol/protocol.pyx", line 206, in bind_execute
asyncpg.exceptions.DataError: expected 1536 dimensions, not 3072
2025-05-05 15:46:32,267 - agents.db.postgres - INFO - Closing PostgreSQL connection pool...
2025-05-05 15:46:32,271 - agents.db.postgres - INFO - PostgreSQL connection pool closed.
2025-05-05 15:46:32,271 - agent.cli - INFO - CLI resources closed.
2025-05-05 15:57:53,952 - agent.cli - INFO - Loaded environment variables from: /Users/giorgobg/Desktop/Software Factory/.env
2025-05-05 15:57:53,952 - agent.cli - INFO - Initializing CLI services...
2025-05-05 15:57:53,952 - agents.db.postgres - INFO - Initializing PostgreSQL connection pool...
2025-05-05 15:57:53,971 - agents.db.postgres - INFO - PostgreSQL connection pool initialized successfully.
2025-05-05 15:57:53,972 - agents.llm.vertex_gemini_provider - INFO - Configured Google Generative AI SDK with API key.
2025-05-05 15:57:53,972 - agents.llm.vertex_gemini_provider - INFO - Initialized Gemini API model: gemini-1.5-flash-001
2025-05-05 15:57:53,972 - agents.llm.vertex_gemini_provider - INFO - Vertex AI initialized for embedding model: project 'ai-team-458821', location 'us-central1'
2025-05-05 15:57:55,318 - agents.llm.vertex_gemini_provider - ERROR - Failed to load Vertex embedding model text-embedding-004 (this might be expected if Vertex setup is incomplete): 403 This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry. [reason: "BILLING_DISABLED"
domain: "googleapis.com"
metadata {
  key: "service"
  value: "aiplatform.googleapis.com"
}
metadata {
  key: "containerInfo"
  value: "ai-team-458821"
}
metadata {
  key: "consumer"
  value: "projects/ai-team-458821"
}
, locale: "en-US"
message: "This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry."
, links {
  description: "Google developers console billing"
  url: "https://console.developers.google.com/billing/enable?project=ai-team-458821"
}
]
2025-05-05 15:57:55,318 - agent.memory.enhanced_vector - INFO - Initializing EnhancedVectorMemory system...
2025-05-05 15:57:55,328 - agents.db.postgres - ERROR - Query execution error: column cannot have more than 2000 dimensions for ivfflat index for query: 
                CREATE INDEX IF NOT EXISTS idx_enhanced_vector_embedding
                ON enhance...
Traceback (most recent call last):
  File "/Users/giorgobg/Desktop/Software Factory/agents/db/postgres.py", line 115, in execute
    status = await conn.execute(query, *args)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connection.py", line 349, in execute
    result = await self._protocol.query(query, timeout)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "asyncpg/protocol/protocol.pyx", line 375, in query
asyncpg.exceptions.ProgramLimitExceededError: column cannot have more than 2000 dimensions for ivfflat index
2025-05-05 15:57:55,330 - agent.memory.enhanced_vector - ERROR - Failed to initialize EnhancedVectorMemory: column cannot have more than 2000 dimensions for ivfflat index
Traceback (most recent call last):
  File "/Users/giorgobg/Desktop/Software Factory/agents/memory/vector_memory.py", line 62, in initialize
    await self.db_client.execute(
    ...<4 lines>...
    )
  File "/Users/giorgobg/Desktop/Software Factory/agents/db/postgres.py", line 115, in execute
    status = await conn.execute(query, *args)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connection.py", line 349, in execute
    result = await self._protocol.query(query, timeout)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "asyncpg/protocol/protocol.pyx", line 375, in query
asyncpg.exceptions.ProgramLimitExceededError: column cannot have more than 2000 dimensions for ivfflat index
2025-05-05 15:57:55,331 - agent.cli - ERROR - CLI Initialization failed: column cannot have more than 2000 dimensions for ivfflat index
Traceback (most recent call last):
  File "/Users/giorgobg/Desktop/Software Factory/agents/cli/agent_cli.py", line 103, in initialize
    await self.vector_memory.initialize()
  File "/Users/giorgobg/Desktop/Software Factory/agents/memory/vector_memory.py", line 62, in initialize
    await self.db_client.execute(
    ...<4 lines>...
    )
  File "/Users/giorgobg/Desktop/Software Factory/agents/db/postgres.py", line 115, in execute
    status = await conn.execute(query, *args)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connection.py", line 349, in execute
    result = await self._protocol.query(query, timeout)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "asyncpg/protocol/protocol.pyx", line 375, in query
asyncpg.exceptions.ProgramLimitExceededError: column cannot have more than 2000 dimensions for ivfflat index
2025-05-05 15:57:55,332 - agents.db.postgres - INFO - Closing PostgreSQL connection pool...
2025-05-05 15:57:55,335 - agents.db.postgres - INFO - PostgreSQL connection pool closed.
2025-05-05 15:57:55,335 - agent.cli - INFO - CLI resources closed.
2025-05-05 15:59:36,955 - agent.cli - INFO - Loaded environment variables from: /Users/giorgobg/Desktop/Software Factory/.env
2025-05-05 15:59:36,955 - agent.cli - INFO - Initializing CLI services...
2025-05-05 15:59:36,955 - agents.db.postgres - INFO - Initializing PostgreSQL connection pool...
2025-05-05 15:59:36,971 - agents.db.postgres - INFO - PostgreSQL connection pool initialized successfully.
2025-05-05 15:59:36,971 - agents.llm.vertex_gemini_provider - INFO - Configured Google Generative AI SDK with API key.
2025-05-05 15:59:36,972 - agents.llm.vertex_gemini_provider - INFO - Initialized Gemini API model: gemini-1.5-flash-001
2025-05-05 15:59:36,972 - agents.llm.vertex_gemini_provider - INFO - Vertex AI initialized for embedding model: project 'ai-team-458821', location 'us-central1'
2025-05-05 15:59:38,440 - agents.llm.vertex_gemini_provider - ERROR - Failed to load Vertex embedding model text-embedding-004 (this might be expected if Vertex setup is incomplete): 403 This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry. [reason: "BILLING_DISABLED"
domain: "googleapis.com"
metadata {
  key: "service"
  value: "aiplatform.googleapis.com"
}
metadata {
  key: "containerInfo"
  value: "ai-team-458821"
}
metadata {
  key: "consumer"
  value: "projects/ai-team-458821"
}
, locale: "en-US"
message: "This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry."
, links {
  description: "Google developers console billing"
  url: "https://console.developers.google.com/billing/enable?project=ai-team-458821"
}
]
2025-05-05 15:59:38,440 - agent.memory.enhanced_vector - INFO - Initializing EnhancedVectorMemory system...
2025-05-05 15:59:38,448 - agents.db.postgres - ERROR - Query execution error: column cannot have more than 2000 dimensions for ivfflat index for query: 
                CREATE INDEX IF NOT EXISTS idx_enhanced_vector_embedding
                ON enhance...
Traceback (most recent call last):
  File "/Users/giorgobg/Desktop/Software Factory/agents/db/postgres.py", line 115, in execute
    status = await conn.execute(query, *args)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connection.py", line 349, in execute
    result = await self._protocol.query(query, timeout)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "asyncpg/protocol/protocol.pyx", line 375, in query
asyncpg.exceptions.ProgramLimitExceededError: column cannot have more than 2000 dimensions for ivfflat index
2025-05-05 15:59:38,450 - agent.memory.enhanced_vector - ERROR - Failed to initialize EnhancedVectorMemory: column cannot have more than 2000 dimensions for ivfflat index
Traceback (most recent call last):
  File "/Users/giorgobg/Desktop/Software Factory/agents/memory/vector_memory.py", line 62, in initialize
    await self.db_client.execute(
    ...<4 lines>...
    )
  File "/Users/giorgobg/Desktop/Software Factory/agents/db/postgres.py", line 115, in execute
    status = await conn.execute(query, *args)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connection.py", line 349, in execute
    result = await self._protocol.query(query, timeout)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "asyncpg/protocol/protocol.pyx", line 375, in query
asyncpg.exceptions.ProgramLimitExceededError: column cannot have more than 2000 dimensions for ivfflat index
2025-05-05 15:59:38,451 - agent.cli - ERROR - CLI Initialization failed: column cannot have more than 2000 dimensions for ivfflat index
Traceback (most recent call last):
  File "/Users/giorgobg/Desktop/Software Factory/agents/cli/agent_cli.py", line 103, in initialize
    await self.vector_memory.initialize()
  File "/Users/giorgobg/Desktop/Software Factory/agents/memory/vector_memory.py", line 62, in initialize
    await self.db_client.execute(
    ...<4 lines>...
    )
  File "/Users/giorgobg/Desktop/Software Factory/agents/db/postgres.py", line 115, in execute
    status = await conn.execute(query, *args)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connection.py", line 349, in execute
    result = await self._protocol.query(query, timeout)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "asyncpg/protocol/protocol.pyx", line 375, in query
asyncpg.exceptions.ProgramLimitExceededError: column cannot have more than 2000 dimensions for ivfflat index
2025-05-05 15:59:38,452 - agents.db.postgres - INFO - Closing PostgreSQL connection pool...
2025-05-05 15:59:38,455 - agents.db.postgres - INFO - PostgreSQL connection pool closed.
2025-05-05 15:59:38,455 - agent.cli - INFO - CLI resources closed.
2025-05-05 16:53:22,018 - agent.cli - INFO - Loaded environment variables from: /Users/giorgobg/Desktop/Software Factory/.env
2025-05-05 16:53:22,018 - agent.cli - INFO - Initializing CLI services...
2025-05-05 16:53:22,018 - agents.db.postgres - INFO - Initializing PostgreSQL connection pool...
2025-05-05 16:53:22,041 - agents.db.postgres - INFO - PostgreSQL connection pool initialized successfully.
2025-05-05 16:53:22,041 - agents.llm.vertex_gemini_provider - INFO - Configured Google Generative AI SDK with API key.
2025-05-05 16:53:22,041 - agents.llm.vertex_gemini_provider - INFO - Initialized Gemini API model: gemini-1.5-flash-001
2025-05-05 16:53:22,041 - agents.llm.vertex_gemini_provider - INFO - Vertex AI initialized for embedding model: project 'ai-team-458821', location 'us-central1'
2025-05-05 16:53:24,619 - agents.llm.vertex_gemini_provider - ERROR - Failed to load Vertex embedding model text-embedding-004 (this might be expected if Vertex setup is incomplete): 403 This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry. [reason: "BILLING_DISABLED"
domain: "googleapis.com"
metadata {
  key: "service"
  value: "aiplatform.googleapis.com"
}
metadata {
  key: "containerInfo"
  value: "ai-team-458821"
}
metadata {
  key: "consumer"
  value: "projects/ai-team-458821"
}
, locale: "en-US"
message: "This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry."
, links {
  description: "Google developers console billing"
  url: "https://console.developers.google.com/billing/enable?project=ai-team-458821"
}
]
2025-05-05 16:53:24,619 - agent.memory.enhanced_vector - INFO - Initializing EnhancedVectorMemory system...
2025-05-05 16:53:24,621 - agents.db.postgres - ERROR - Query execution error: extension "pgvector" is not available
DETAIL:  Could not open extension control file "/usr/local/opt/postgresql@16/share/postgresql@16/extension/pgvector.control": No such file or directory.
HINT:  The extension must first be installed on the system where PostgreSQL is running. for query: CREATE EXTENSION IF NOT EXISTS pgvector;...
Traceback (most recent call last):
  File "/Users/giorgobg/Desktop/Software Factory/agents/db/postgres.py", line 115, in execute
    status = await conn.execute(query, *args)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connection.py", line 349, in execute
    result = await self._protocol.query(query, timeout)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "asyncpg/protocol/protocol.pyx", line 375, in query
asyncpg.exceptions.FeatureNotSupportedError: extension "pgvector" is not available
DETAIL:  Could not open extension control file "/usr/local/opt/postgresql@16/share/postgresql@16/extension/pgvector.control": No such file or directory.
HINT:  The extension must first be installed on the system where PostgreSQL is running.
2025-05-05 16:53:24,624 - agent.memory.enhanced_vector - ERROR - Failed to initialize EnhancedVectorMemory: extension "pgvector" is not available
DETAIL:  Could not open extension control file "/usr/local/opt/postgresql@16/share/postgresql@16/extension/pgvector.control": No such file or directory.
HINT:  The extension must first be installed on the system where PostgreSQL is running.
Traceback (most recent call last):
  File "/Users/giorgobg/Desktop/Software Factory/agents/memory/vector_memory.py", line 41, in initialize
    await self.db_client.execute("CREATE EXTENSION IF NOT EXISTS pgvector;")
  File "/Users/giorgobg/Desktop/Software Factory/agents/db/postgres.py", line 115, in execute
    status = await conn.execute(query, *args)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connection.py", line 349, in execute
    result = await self._protocol.query(query, timeout)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "asyncpg/protocol/protocol.pyx", line 375, in query
asyncpg.exceptions.FeatureNotSupportedError: extension "pgvector" is not available
DETAIL:  Could not open extension control file "/usr/local/opt/postgresql@16/share/postgresql@16/extension/pgvector.control": No such file or directory.
HINT:  The extension must first be installed on the system where PostgreSQL is running.
2025-05-05 16:53:24,625 - agent.cli - ERROR - CLI Initialization failed: extension "pgvector" is not available
DETAIL:  Could not open extension control file "/usr/local/opt/postgresql@16/share/postgresql@16/extension/pgvector.control": No such file or directory.
HINT:  The extension must first be installed on the system where PostgreSQL is running.
Traceback (most recent call last):
  File "/Users/giorgobg/Desktop/Software Factory/agents/cli/agent_cli.py", line 103, in initialize
    await self.vector_memory.initialize()
  File "/Users/giorgobg/Desktop/Software Factory/agents/memory/vector_memory.py", line 41, in initialize
    await self.db_client.execute("CREATE EXTENSION IF NOT EXISTS pgvector;")
  File "/Users/giorgobg/Desktop/Software Factory/agents/db/postgres.py", line 115, in execute
    status = await conn.execute(query, *args)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connection.py", line 349, in execute
    result = await self._protocol.query(query, timeout)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "asyncpg/protocol/protocol.pyx", line 375, in query
asyncpg.exceptions.FeatureNotSupportedError: extension "pgvector" is not available
DETAIL:  Could not open extension control file "/usr/local/opt/postgresql@16/share/postgresql@16/extension/pgvector.control": No such file or directory.
HINT:  The extension must first be installed on the system where PostgreSQL is running.
2025-05-05 16:53:24,626 - agents.db.postgres - INFO - Closing PostgreSQL connection pool...
2025-05-05 16:53:24,630 - agents.db.postgres - INFO - PostgreSQL connection pool closed.
2025-05-05 16:53:24,630 - agent.cli - INFO - CLI resources closed.
2025-05-05 18:08:23,355 - agent.cli - INFO - Loaded environment variables from: /Users/giorgobg/Desktop/Software Factory/.env
2025-05-05 18:08:23,356 - agent.cli - INFO - Initializing CLI services...
2025-05-05 18:08:23,356 - agents.db.postgres - INFO - Initializing PostgreSQL connection pool...
2025-05-05 18:08:23,384 - agents.db.postgres - INFO - PostgreSQL connection pool initialized successfully.
2025-05-05 18:08:23,384 - agents.llm.vertex_gemini_provider - INFO - Configured Google Generative AI SDK with API key.
2025-05-05 18:08:23,384 - agents.llm.vertex_gemini_provider - INFO - Initialized Gemini API model: gemini-1.5-flash-001
2025-05-05 18:08:23,384 - agents.llm.vertex_gemini_provider - INFO - Vertex AI initialized for embedding model: project 'ai-team-458821', location 'us-central1'
2025-05-05 18:08:29,343 - agents.llm.vertex_gemini_provider - ERROR - Failed to load Vertex embedding model text-embedding-004 (this might be expected if Vertex setup is incomplete): 403 This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry. [reason: "BILLING_DISABLED"
domain: "googleapis.com"
metadata {
  key: "service"
  value: "aiplatform.googleapis.com"
}
metadata {
  key: "containerInfo"
  value: "ai-team-458821"
}
metadata {
  key: "consumer"
  value: "projects/ai-team-458821"
}
, locale: "en-US"
message: "This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry."
, links {
  description: "Google developers console billing"
  url: "https://console.developers.google.com/billing/enable?project=ai-team-458821"
}
]
2025-05-05 18:08:29,343 - agent.memory.enhanced_vector - INFO - Initializing EnhancedVectorMemory system...
2025-05-05 18:08:29,346 - agents.db.postgres - ERROR - Query execution error: relation "enhanced_vector_storage" does not exist for query: 
                CREATE INDEX IF NOT EXISTS idx_enhanced_vector_entity_type
                ON enhan...
Traceback (most recent call last):
  File "/Users/giorgobg/Desktop/Software Factory/agents/db/postgres.py", line 115, in execute
    status = await conn.execute(query, *args)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connection.py", line 349, in execute
    result = await self._protocol.query(query, timeout)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "asyncpg/protocol/protocol.pyx", line 375, in query
asyncpg.exceptions.UndefinedTableError: relation "enhanced_vector_storage" does not exist
2025-05-05 18:08:29,350 - agent.memory.enhanced_vector - ERROR - Failed to initialize EnhancedVectorMemory: relation "enhanced_vector_storage" does not exist
Traceback (most recent call last):
  File "/Users/giorgobg/Desktop/Software Factory/agents/memory/vector_memory.py", line 48, in initialize
    await self.db_client.execute(
    ...<4 lines>...
    )
  File "/Users/giorgobg/Desktop/Software Factory/agents/db/postgres.py", line 115, in execute
    status = await conn.execute(query, *args)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connection.py", line 349, in execute
    result = await self._protocol.query(query, timeout)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "asyncpg/protocol/protocol.pyx", line 375, in query
asyncpg.exceptions.UndefinedTableError: relation "enhanced_vector_storage" does not exist
2025-05-05 18:08:29,351 - agent.cli - ERROR - CLI Initialization failed: relation "enhanced_vector_storage" does not exist
Traceback (most recent call last):
  File "/Users/giorgobg/Desktop/Software Factory/agents/cli/agent_cli.py", line 103, in initialize
    await self.vector_memory.initialize()
  File "/Users/giorgobg/Desktop/Software Factory/agents/memory/vector_memory.py", line 48, in initialize
    await self.db_client.execute(
    ...<4 lines>...
    )
  File "/Users/giorgobg/Desktop/Software Factory/agents/db/postgres.py", line 115, in execute
    status = await conn.execute(query, *args)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connection.py", line 349, in execute
    result = await self._protocol.query(query, timeout)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "asyncpg/protocol/protocol.pyx", line 375, in query
asyncpg.exceptions.UndefinedTableError: relation "enhanced_vector_storage" does not exist
2025-05-05 18:08:29,352 - agents.db.postgres - INFO - Closing PostgreSQL connection pool...
2025-05-05 18:08:29,356 - agents.db.postgres - INFO - PostgreSQL connection pool closed.
2025-05-05 18:08:29,356 - agent.cli - INFO - CLI resources closed.
2025-05-05 18:12:29,968 - agent.cli - INFO - Loaded environment variables from: /Users/giorgobg/Desktop/Software Factory/.env
2025-05-05 18:12:29,968 - agent.cli - INFO - Initializing CLI services...
2025-05-05 18:12:29,968 - agents.db.postgres - INFO - Initializing PostgreSQL connection pool...
2025-05-05 18:12:29,990 - agents.db.postgres - INFO - PostgreSQL connection pool initialized successfully.
2025-05-05 18:12:29,990 - agents.llm.vertex_gemini_provider - INFO - Configured Google Generative AI SDK with API key.
2025-05-05 18:12:29,990 - agents.llm.vertex_gemini_provider - INFO - Initialized Gemini API model: gemini-1.5-flash-001
2025-05-05 18:12:29,991 - agents.llm.vertex_gemini_provider - INFO - Vertex AI initialized for embedding model: project 'ai-team-458821', location 'us-central1'
2025-05-05 18:12:31,835 - agents.llm.vertex_gemini_provider - ERROR - Failed to load Vertex embedding model text-embedding-004 (this might be expected if Vertex setup is incomplete): 403 This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry. [reason: "BILLING_DISABLED"
domain: "googleapis.com"
metadata {
  key: "service"
  value: "aiplatform.googleapis.com"
}
metadata {
  key: "containerInfo"
  value: "ai-team-458821"
}
metadata {
  key: "consumer"
  value: "projects/ai-team-458821"
}
, locale: "en-US"
message: "This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry."
, links {
  description: "Google developers console billing"
  url: "https://console.developers.google.com/billing/enable?project=ai-team-458821"
}
]
2025-05-05 18:12:31,835 - agent.memory.enhanced_vector - INFO - Initializing EnhancedVectorMemory system...
2025-05-05 18:12:31,844 - agents.db.postgres - ERROR - Query execution error: column cannot have more than 2000 dimensions for ivfflat index for query: 
                CREATE INDEX IF NOT EXISTS idx_enhanced_vector_embedding
                ON enhance...
Traceback (most recent call last):
  File "/Users/giorgobg/Desktop/Software Factory/agents/db/postgres.py", line 115, in execute
    status = await conn.execute(query, *args)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connection.py", line 349, in execute
    result = await self._protocol.query(query, timeout)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "asyncpg/protocol/protocol.pyx", line 375, in query
asyncpg.exceptions.ProgramLimitExceededError: column cannot have more than 2000 dimensions for ivfflat index
2025-05-05 18:12:31,846 - agent.memory.enhanced_vector - ERROR - Failed to initialize EnhancedVectorMemory: column cannot have more than 2000 dimensions for ivfflat index
Traceback (most recent call last):
  File "/Users/giorgobg/Desktop/Software Factory/agents/memory/vector_memory.py", line 62, in initialize
    await self.db_client.execute(
    ...<4 lines>...
    )
  File "/Users/giorgobg/Desktop/Software Factory/agents/db/postgres.py", line 115, in execute
    status = await conn.execute(query, *args)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connection.py", line 349, in execute
    result = await self._protocol.query(query, timeout)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "asyncpg/protocol/protocol.pyx", line 375, in query
asyncpg.exceptions.ProgramLimitExceededError: column cannot have more than 2000 dimensions for ivfflat index
2025-05-05 18:12:31,847 - agent.cli - ERROR - CLI Initialization failed: column cannot have more than 2000 dimensions for ivfflat index
Traceback (most recent call last):
  File "/Users/giorgobg/Desktop/Software Factory/agents/cli/agent_cli.py", line 103, in initialize
    await self.vector_memory.initialize()
  File "/Users/giorgobg/Desktop/Software Factory/agents/memory/vector_memory.py", line 62, in initialize
    await self.db_client.execute(
    ...<4 lines>...
    )
  File "/Users/giorgobg/Desktop/Software Factory/agents/db/postgres.py", line 115, in execute
    status = await conn.execute(query, *args)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connection.py", line 349, in execute
    result = await self._protocol.query(query, timeout)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "asyncpg/protocol/protocol.pyx", line 375, in query
asyncpg.exceptions.ProgramLimitExceededError: column cannot have more than 2000 dimensions for ivfflat index
2025-05-05 18:12:31,848 - agents.db.postgres - INFO - Closing PostgreSQL connection pool...
2025-05-05 18:12:31,852 - agents.db.postgres - INFO - PostgreSQL connection pool closed.
2025-05-05 18:12:31,852 - agent.cli - INFO - CLI resources closed.
2025-05-05 18:13:45,569 - agent.cli - INFO - Loaded environment variables from: /Users/giorgobg/Desktop/Software Factory/.env
2025-05-05 18:13:45,569 - agent.cli - INFO - Initializing CLI services...
2025-05-05 18:13:45,569 - agents.db.postgres - INFO - Initializing PostgreSQL connection pool...
2025-05-05 18:13:45,596 - agents.db.postgres - INFO - PostgreSQL connection pool initialized successfully.
2025-05-05 18:13:45,596 - agents.llm.vertex_gemini_provider - INFO - Configured Google Generative AI SDK with API key.
2025-05-05 18:13:45,597 - agents.llm.vertex_gemini_provider - INFO - Initialized Gemini API model: gemini-1.5-flash-001
2025-05-05 18:13:45,597 - agents.llm.vertex_gemini_provider - INFO - Vertex AI initialized for embedding model: project 'ai-team-458821', location 'us-central1'
2025-05-05 18:13:47,812 - agents.llm.vertex_gemini_provider - ERROR - Failed to load Vertex embedding model text-embedding-004 (this might be expected if Vertex setup is incomplete): 403 This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry. [reason: "BILLING_DISABLED"
domain: "googleapis.com"
metadata {
  key: "service"
  value: "aiplatform.googleapis.com"
}
metadata {
  key: "containerInfo"
  value: "ai-team-458821"
}
metadata {
  key: "consumer"
  value: "projects/ai-team-458821"
}
, locale: "en-US"
message: "This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry."
, links {
  description: "Google developers console billing"
  url: "https://console.developers.google.com/billing/enable?project=ai-team-458821"
}
]
2025-05-05 18:13:47,812 - agent.memory.enhanced_vector - INFO - Initializing EnhancedVectorMemory system...
2025-05-05 18:13:47,820 - agents.db.postgres - ERROR - Query execution error: column cannot have more than 2000 dimensions for ivfflat index for query: 
                CREATE INDEX IF NOT EXISTS idx_enhanced_vector_embedding
                ON enhance...
Traceback (most recent call last):
  File "/Users/giorgobg/Desktop/Software Factory/agents/db/postgres.py", line 115, in execute
    status = await conn.execute(query, *args)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connection.py", line 349, in execute
    result = await self._protocol.query(query, timeout)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "asyncpg/protocol/protocol.pyx", line 375, in query
asyncpg.exceptions.ProgramLimitExceededError: column cannot have more than 2000 dimensions for ivfflat index
2025-05-05 18:13:47,822 - agent.memory.enhanced_vector - ERROR - Failed to initialize EnhancedVectorMemory: column cannot have more than 2000 dimensions for ivfflat index
Traceback (most recent call last):
  File "/Users/giorgobg/Desktop/Software Factory/agents/memory/vector_memory.py", line 62, in initialize
    await self.db_client.execute(
    ...<4 lines>...
    )
  File "/Users/giorgobg/Desktop/Software Factory/agents/db/postgres.py", line 115, in execute
    status = await conn.execute(query, *args)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connection.py", line 349, in execute
    result = await self._protocol.query(query, timeout)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "asyncpg/protocol/protocol.pyx", line 375, in query
asyncpg.exceptions.ProgramLimitExceededError: column cannot have more than 2000 dimensions for ivfflat index
2025-05-05 18:13:47,823 - agent.cli - ERROR - CLI Initialization failed: column cannot have more than 2000 dimensions for ivfflat index
Traceback (most recent call last):
  File "/Users/giorgobg/Desktop/Software Factory/agents/cli/agent_cli.py", line 103, in initialize
    await self.vector_memory.initialize()
  File "/Users/giorgobg/Desktop/Software Factory/agents/memory/vector_memory.py", line 62, in initialize
    await self.db_client.execute(
    ...<4 lines>...
    )
  File "/Users/giorgobg/Desktop/Software Factory/agents/db/postgres.py", line 115, in execute
    status = await conn.execute(query, *args)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connection.py", line 349, in execute
    result = await self._protocol.query(query, timeout)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "asyncpg/protocol/protocol.pyx", line 375, in query
asyncpg.exceptions.ProgramLimitExceededError: column cannot have more than 2000 dimensions for ivfflat index
2025-05-05 18:13:47,824 - agents.db.postgres - INFO - Closing PostgreSQL connection pool...
2025-05-05 18:13:47,828 - agents.db.postgres - INFO - PostgreSQL connection pool closed.
2025-05-05 18:13:47,828 - agent.cli - INFO - CLI resources closed.
2025-05-05 18:16:46,371 - agent.cli - INFO - Loaded environment variables from: /Users/giorgobg/Desktop/Software Factory/.env
2025-05-05 18:16:46,371 - agent.cli - INFO - Initializing CLI services...
2025-05-05 18:16:46,371 - agents.db.postgres - INFO - Initializing PostgreSQL connection pool...
2025-05-05 18:16:46,394 - agents.db.postgres - INFO - PostgreSQL connection pool initialized successfully.
2025-05-05 18:16:46,394 - agents.llm.vertex_gemini_provider - INFO - Configured Google Generative AI SDK with API key.
2025-05-05 18:16:46,395 - agents.llm.vertex_gemini_provider - INFO - Initialized Gemini API model: gemini-1.5-flash-001
2025-05-05 18:16:46,395 - agents.llm.vertex_gemini_provider - INFO - Vertex AI initialized for embedding model: project 'ai-team-458821', location 'us-central1'
2025-05-05 18:16:48,215 - agents.llm.vertex_gemini_provider - ERROR - Failed to load Vertex embedding model text-embedding-004 (this might be expected if Vertex setup is incomplete): 403 This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry. [reason: "BILLING_DISABLED"
domain: "googleapis.com"
metadata {
  key: "service"
  value: "aiplatform.googleapis.com"
}
metadata {
  key: "containerInfo"
  value: "ai-team-458821"
}
metadata {
  key: "consumer"
  value: "projects/ai-team-458821"
}
, locale: "en-US"
message: "This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry."
, links {
  description: "Google developers console billing"
  url: "https://console.developers.google.com/billing/enable?project=ai-team-458821"
}
]
2025-05-05 18:16:48,215 - agent.memory.enhanced_vector - INFO - Initializing EnhancedVectorMemory system...
2025-05-05 18:16:48,224 - agents.db.postgres - ERROR - Query execution error: column cannot have more than 2000 dimensions for hnsw index for query: 
                CREATE INDEX IF NOT EXISTS idx_enhanced_vector_embedding
                ON enhance...
Traceback (most recent call last):
  File "/Users/giorgobg/Desktop/Software Factory/agents/db/postgres.py", line 115, in execute
    status = await conn.execute(query, *args)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connection.py", line 349, in execute
    result = await self._protocol.query(query, timeout)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "asyncpg/protocol/protocol.pyx", line 375, in query
asyncpg.exceptions.ProgramLimitExceededError: column cannot have more than 2000 dimensions for hnsw index
2025-05-05 18:16:48,226 - agent.memory.enhanced_vector - ERROR - Failed to initialize EnhancedVectorMemory: column cannot have more than 2000 dimensions for hnsw index
Traceback (most recent call last):
  File "/Users/giorgobg/Desktop/Software Factory/agents/memory/vector_memory.py", line 63, in initialize
    await self.db_client.execute(
    ...<4 lines>...
    )
  File "/Users/giorgobg/Desktop/Software Factory/agents/db/postgres.py", line 115, in execute
    status = await conn.execute(query, *args)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connection.py", line 349, in execute
    result = await self._protocol.query(query, timeout)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "asyncpg/protocol/protocol.pyx", line 375, in query
asyncpg.exceptions.ProgramLimitExceededError: column cannot have more than 2000 dimensions for hnsw index
2025-05-05 18:16:48,227 - agent.cli - ERROR - CLI Initialization failed: column cannot have more than 2000 dimensions for hnsw index
Traceback (most recent call last):
  File "/Users/giorgobg/Desktop/Software Factory/agents/cli/agent_cli.py", line 103, in initialize
    await self.vector_memory.initialize()
  File "/Users/giorgobg/Desktop/Software Factory/agents/memory/vector_memory.py", line 63, in initialize
    await self.db_client.execute(
    ...<4 lines>...
    )
  File "/Users/giorgobg/Desktop/Software Factory/agents/db/postgres.py", line 115, in execute
    status = await conn.execute(query, *args)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connection.py", line 349, in execute
    result = await self._protocol.query(query, timeout)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "asyncpg/protocol/protocol.pyx", line 375, in query
asyncpg.exceptions.ProgramLimitExceededError: column cannot have more than 2000 dimensions for hnsw index
2025-05-05 18:16:48,228 - agents.db.postgres - INFO - Closing PostgreSQL connection pool...
2025-05-05 18:16:48,232 - agents.db.postgres - INFO - PostgreSQL connection pool closed.
2025-05-05 18:16:48,232 - agent.cli - INFO - CLI resources closed.
2025-05-05 19:43:39,994 - agent.cli - INFO - Loaded environment variables from: /Users/giorgobg/Desktop/Software Factory/.env
2025-05-05 19:43:39,994 - agent.cli - INFO - Initializing CLI services...
2025-05-05 19:43:39,994 - agents.db.postgres - INFO - Initializing PostgreSQL connection pool...
2025-05-05 19:43:40,010 - agents.db.postgres - INFO - PostgreSQL connection pool initialized successfully.
2025-05-05 19:43:40,010 - agents.llm.vertex_gemini_provider - INFO - Configured Google Generative AI SDK with API key.
2025-05-05 19:43:40,010 - agents.llm.vertex_gemini_provider - INFO - Initialized Gemini API model: gemini-1.5-flash-001
2025-05-05 19:43:40,010 - agents.llm.vertex_gemini_provider - INFO - Vertex AI initialized for embedding model: project 'ai-team-458821', location 'us-central1'
2025-05-05 19:43:42,136 - agents.llm.vertex_gemini_provider - ERROR - Failed to load Vertex embedding model text-embedding-004 (this might be expected if Vertex setup is incomplete): 403 This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry. [reason: "BILLING_DISABLED"
domain: "googleapis.com"
metadata {
  key: "service"
  value: "aiplatform.googleapis.com"
}
metadata {
  key: "containerInfo"
  value: "ai-team-458821"
}
metadata {
  key: "consumer"
  value: "projects/ai-team-458821"
}
, locale: "en-US"
message: "This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry."
, links {
  description: "Google developers console billing"
  url: "https://console.developers.google.com/billing/enable?project=ai-team-458821"
}
]
2025-05-05 19:43:42,136 - agent.memory.enhanced_vector - INFO - Initializing EnhancedVectorMemory system...
2025-05-05 19:43:42,142 - agent.memory.enhanced_vector - INFO - Enhanced vector memory system initialized successfully.
2025-05-05 19:43:42,142 - agent.factory - INFO - AgentFactory initialized with shared dependencies.
2025-05-05 19:43:42,142 - agent.cli - INFO - CLI services initialized successfully.
2025-05-05 19:43:42,146 - agent.cli - ERROR - Sender agent ecb92fc9-bceb-43c4-b69e-2e77875e61b0 not found in database.
2025-05-05 19:43:42,146 - agents.db.postgres - INFO - Closing PostgreSQL connection pool...
2025-05-05 19:43:42,150 - agents.db.postgres - INFO - PostgreSQL connection pool closed.
2025-05-05 19:43:42,150 - agent.cli - INFO - CLI resources closed.
2025-05-05 19:44:01,403 - agent.cli - INFO - Loaded environment variables from: /Users/giorgobg/Desktop/Software Factory/.env
2025-05-05 19:44:01,403 - agent.cli - INFO - Initializing CLI services...
2025-05-05 19:44:01,403 - agents.db.postgres - INFO - Initializing PostgreSQL connection pool...
2025-05-05 19:44:01,420 - agents.db.postgres - INFO - PostgreSQL connection pool initialized successfully.
2025-05-05 19:44:01,420 - agents.llm.vertex_gemini_provider - INFO - Configured Google Generative AI SDK with API key.
2025-05-05 19:44:01,420 - agents.llm.vertex_gemini_provider - INFO - Initialized Gemini API model: gemini-1.5-flash-001
2025-05-05 19:44:01,420 - agents.llm.vertex_gemini_provider - INFO - Vertex AI initialized for embedding model: project 'ai-team-458821', location 'us-central1'
2025-05-05 19:44:02,904 - agents.llm.vertex_gemini_provider - ERROR - Failed to load Vertex embedding model text-embedding-004 (this might be expected if Vertex setup is incomplete): 403 This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry. [reason: "BILLING_DISABLED"
domain: "googleapis.com"
metadata {
  key: "service"
  value: "aiplatform.googleapis.com"
}
metadata {
  key: "containerInfo"
  value: "ai-team-458821"
}
metadata {
  key: "consumer"
  value: "projects/ai-team-458821"
}
, locale: "en-US"
message: "This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry."
, links {
  description: "Google developers console billing"
  url: "https://console.developers.google.com/billing/enable?project=ai-team-458821"
}
]
2025-05-05 19:44:02,905 - agent.memory.enhanced_vector - INFO - Initializing EnhancedVectorMemory system...
2025-05-05 19:44:02,912 - agent.memory.enhanced_vector - INFO - Enhanced vector memory system initialized successfully.
2025-05-05 19:44:02,912 - agent.factory - INFO - AgentFactory initialized with shared dependencies.
2025-05-05 19:44:02,912 - agent.cli - INFO - CLI services initialized successfully.
2025-05-05 19:44:02,912 - agent.factory - INFO - Creating agent of type 'product_manager' with name 'Fresh PM Agent'
2025-05-05 19:44:02,913 - agent.product_manager.7e65e19e - INFO - ProductManagerAgent 7e65e19e-e835-4b86-b837-afa0cc64b06e (Fresh PM Agent) initialized.
2025-05-05 19:44:02,913 - agent.factory - INFO - Successfully created agent 7e65e19e-e835-4b86-b837-afa0cc64b06e (Fresh PM Agent)
2025-05-05 19:44:02,913 - agent.logging.thought - INFO - Initializing ThoughtCapture system...
2025-05-05 19:44:02,917 - agent.cli - INFO - Agent 7e65e19e-e835-4b86-b837-afa0cc64b06e (Fresh PM Agent) created and registered/updated in DB.
2025-05-05 19:44:02,917 - agents.db.postgres - INFO - Closing PostgreSQL connection pool...
2025-05-05 19:44:02,918 - agent.logging.thought - INFO - Thought capture system initialized successfully.
2025-05-05 19:44:02,918 - agent.memory.enhanced_vector - INFO - Registered entity type: ThoughtProcess
2025-05-05 19:44:02,918 - agent.logging.thought - INFO - Registered ThoughtProcess entity type with vector memory
2025-05-05 19:44:02,918 - agents.db.postgres - WARNING - Unique constraint violation during execute: duplicate key value violates unique constraint "agents_pkey"
DETAIL:  Key (agent_id)=(7e65e19e-e835-4b86-b837-afa0cc64b06e) already exists.
2025-05-05 19:44:02,918 - agent.product_manager.7e65e19e - ERROR - Error during agent registration for 7e65e19e-e835-4b86-b837-afa0cc64b06e: duplicate key value violates unique constraint "agents_pkey"
DETAIL:  Key (agent_id)=(7e65e19e-e835-4b86-b837-afa0cc64b06e) already exists.
Traceback (most recent call last):
  File "/Users/giorgobg/Desktop/Software Factory/agents/base_agent.py", line 123, in _register_agent
    await self.db_client.execute(
    ...<6 lines>...
    )
  File "/Users/giorgobg/Desktop/Software Factory/agents/db/postgres.py", line 115, in execute
    status = await conn.execute(query, *args)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connection.py", line 352, in execute
    _, status, _ = await self._execute(
                   ^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connection.py", line 1864, in _execute
    result, _ = await self.__execute(
                ^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connection.py", line 1961, in __execute
    result, stmt = await self._do_execute(
                   ^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/connection.py", line 2024, in _do_execute
    result = await executor(stmt, None)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "asyncpg/protocol/protocol.pyx", line 206, in bind_execute
asyncpg.exceptions.UniqueViolationError: duplicate key value violates unique constraint "agents_pkey"
DETAIL:  Key (agent_id)=(7e65e19e-e835-4b86-b837-afa0cc64b06e) already exists.
2025-05-05 19:44:02,925 - agents.db.postgres - INFO - PostgreSQL connection pool closed.
2025-05-05 19:44:02,925 - agent.cli - INFO - CLI resources closed.
2025-05-05 19:44:16,917 - agent.cli - INFO - Loaded environment variables from: /Users/giorgobg/Desktop/Software Factory/.env
2025-05-05 19:44:16,917 - agent.cli - INFO - Initializing CLI services...
2025-05-05 19:44:16,917 - agents.db.postgres - INFO - Initializing PostgreSQL connection pool...
2025-05-05 19:44:16,937 - agents.db.postgres - INFO - PostgreSQL connection pool initialized successfully.
2025-05-05 19:44:16,937 - agents.llm.vertex_gemini_provider - INFO - Configured Google Generative AI SDK with API key.
2025-05-05 19:44:16,937 - agents.llm.vertex_gemini_provider - INFO - Initialized Gemini API model: gemini-1.5-flash-001
2025-05-05 19:44:16,937 - agents.llm.vertex_gemini_provider - INFO - Vertex AI initialized for embedding model: project 'ai-team-458821', location 'us-central1'
2025-05-05 19:44:18,416 - agents.llm.vertex_gemini_provider - ERROR - Failed to load Vertex embedding model text-embedding-004 (this might be expected if Vertex setup is incomplete): 403 This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry. [reason: "BILLING_DISABLED"
domain: "googleapis.com"
metadata {
  key: "service"
  value: "aiplatform.googleapis.com"
}
metadata {
  key: "containerInfo"
  value: "ai-team-458821"
}
metadata {
  key: "consumer"
  value: "projects/ai-team-458821"
}
, locale: "en-US"
message: "This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry."
, links {
  description: "Google developers console billing"
  url: "https://console.developers.google.com/billing/enable?project=ai-team-458821"
}
]
2025-05-05 19:44:18,416 - agent.memory.enhanced_vector - INFO - Initializing EnhancedVectorMemory system...
2025-05-05 19:44:18,423 - agent.memory.enhanced_vector - INFO - Enhanced vector memory system initialized successfully.
2025-05-05 19:44:18,423 - agent.factory - INFO - AgentFactory initialized with shared dependencies.
2025-05-05 19:44:18,423 - agent.cli - INFO - CLI services initialized successfully.
2025-05-05 19:44:18,424 - agent.factory - INFO - Creating agent of type 'scrum_master' with name 'Fresh SM Agent'
2025-05-05 19:44:18,424 - agent.scrum_master.47d374c0 - INFO - ScrumMasterAgent 47d374c0-afe9-44ad-81ea-5651cab68fdc (Fresh SM Agent) initialized.
2025-05-05 19:44:18,424 - agent.factory - INFO - Successfully created agent 47d374c0-afe9-44ad-81ea-5651cab68fdc (Fresh SM Agent)
2025-05-05 19:44:18,424 - agent.logging.thought - INFO - Initializing ThoughtCapture system...
2025-05-05 19:44:18,426 - agent.cli - INFO - Agent 47d374c0-afe9-44ad-81ea-5651cab68fdc (Fresh SM Agent) created and registered/updated in DB.
2025-05-05 19:44:18,426 - agents.db.postgres - INFO - Closing PostgreSQL connection pool...
2025-05-05 19:44:18,427 - agents.db.postgres - ERROR - Query execution error: pool is closing for query: 
                CREATE INDEX IF NOT EXISTS idx_thought_processes_task_id ON thought_processes(relat...
Traceback (most recent call last):
  File "/Users/giorgobg/Desktop/Software Factory/agents/db/postgres.py", line 114, in execute
    async with self.pool.acquire() as conn:
               ~~~~~~~~~~~~~~~~~^^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/pool.py", line 1024, in __aenter__
    self.connection = await self.pool._acquire(self.timeout)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/pool.py", line 860, in _acquire
    raise exceptions.InterfaceError('pool is closing')
asyncpg.exceptions._base.InterfaceError: pool is closing
2025-05-05 19:44:18,429 - agent.logging.thought - ERROR - Failed to initialize ThoughtCapture: pool is closing
Traceback (most recent call last):
  File "/Users/giorgobg/Desktop/Software Factory/agents/logging/thought_capture.py", line 52, in initialize
    await self.db_client.execute(
    ...<3 lines>...
    )
  File "/Users/giorgobg/Desktop/Software Factory/agents/db/postgres.py", line 114, in execute
    async with self.pool.acquire() as conn:
               ~~~~~~~~~~~~~~~~~^^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/pool.py", line 1024, in __aenter__
    self.connection = await self.pool._acquire(self.timeout)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/pool.py", line 860, in _acquire
    raise exceptions.InterfaceError('pool is closing')
asyncpg.exceptions._base.InterfaceError: pool is closing
2025-05-05 19:44:18,430 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished name='Task-13' coro=<ThoughtCapture.initialize() done, defined at /Users/giorgobg/Desktop/Software Factory/agents/logging/thought_capture.py:35> exception=InterfaceError('pool is closing')>
Traceback (most recent call last):
  File "/Users/giorgobg/Desktop/Software Factory/agents/logging/thought_capture.py", line 52, in initialize
    await self.db_client.execute(
    ...<3 lines>...
    )
  File "/Users/giorgobg/Desktop/Software Factory/agents/db/postgres.py", line 114, in execute
    async with self.pool.acquire() as conn:
               ~~~~~~~~~~~~~~~~~^^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/pool.py", line 1024, in __aenter__
    self.connection = await self.pool._acquire(self.timeout)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/giorgobg/Desktop/Software Factory/.venv/lib/python3.13/site-packages/asyncpg/pool.py", line 860, in _acquire
    raise exceptions.InterfaceError('pool is closing')
asyncpg.exceptions._base.InterfaceError: pool is closing
2025-05-05 19:44:18,434 - agents.db.postgres - INFO - PostgreSQL connection pool closed.
2025-05-05 19:44:18,434 - agent.cli - INFO - CLI resources closed.
2025-05-05 19:44:30,196 - agent.cli - INFO - Loaded environment variables from: /Users/giorgobg/Desktop/Software Factory/.env
2025-05-05 19:44:30,196 - agent.cli - INFO - Initializing CLI services...
2025-05-05 19:44:30,196 - agents.db.postgres - INFO - Initializing PostgreSQL connection pool...
2025-05-05 19:44:30,218 - agents.db.postgres - INFO - PostgreSQL connection pool initialized successfully.
2025-05-05 19:44:30,218 - agents.llm.vertex_gemini_provider - INFO - Configured Google Generative AI SDK with API key.
2025-05-05 19:44:30,218 - agents.llm.vertex_gemini_provider - INFO - Initialized Gemini API model: gemini-1.5-flash-001
2025-05-05 19:44:30,219 - agents.llm.vertex_gemini_provider - INFO - Vertex AI initialized for embedding model: project 'ai-team-458821', location 'us-central1'
2025-05-05 19:44:31,705 - agents.llm.vertex_gemini_provider - ERROR - Failed to load Vertex embedding model text-embedding-004 (this might be expected if Vertex setup is incomplete): 403 This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry. [reason: "BILLING_DISABLED"
domain: "googleapis.com"
metadata {
  key: "service"
  value: "aiplatform.googleapis.com"
}
metadata {
  key: "containerInfo"
  value: "ai-team-458821"
}
metadata {
  key: "consumer"
  value: "projects/ai-team-458821"
}
, locale: "en-US"
message: "This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry."
, links {
  description: "Google developers console billing"
  url: "https://console.developers.google.com/billing/enable?project=ai-team-458821"
}
]
2025-05-05 19:44:31,705 - agent.memory.enhanced_vector - INFO - Initializing EnhancedVectorMemory system...
2025-05-05 19:44:31,712 - agent.memory.enhanced_vector - INFO - Enhanced vector memory system initialized successfully.
2025-05-05 19:44:31,713 - agent.factory - INFO - AgentFactory initialized with shared dependencies.
2025-05-05 19:44:31,713 - agent.cli - INFO - CLI services initialized successfully.
2025-05-05 19:44:31,719 - agent.cli - INFO - Message 06807dd7-375f-4275-a249-7b5ab73b3e3a logged to DB: 7e65e19e-e835-4b86-b837-afa0cc64b06e -> 47d374c0-afe9-44ad-81ea-5651cab68fdc
2025-05-05 19:44:32,907 - agents.db.postgres - INFO - Closing PostgreSQL connection pool...
2025-05-05 19:44:32,911 - agents.db.postgres - INFO - PostgreSQL connection pool closed.
2025-05-05 19:44:32,911 - agent.cli - INFO - CLI resources closed.
2025-05-05 19:44:50,003 - agent.cli - INFO - Loaded environment variables from: /Users/giorgobg/Desktop/Software Factory/.env
2025-05-05 19:44:50,003 - agent.cli - INFO - Initializing CLI services...
2025-05-05 19:44:50,003 - agents.db.postgres - INFO - Initializing PostgreSQL connection pool...
2025-05-05 19:44:50,020 - agents.db.postgres - INFO - PostgreSQL connection pool initialized successfully.
2025-05-05 19:44:50,020 - agents.llm.vertex_gemini_provider - INFO - Configured Google Generative AI SDK with API key.
2025-05-05 19:44:50,020 - agents.llm.vertex_gemini_provider - INFO - Initialized Gemini API model: gemini-1.5-flash-001
2025-05-05 19:44:50,020 - agents.llm.vertex_gemini_provider - INFO - Vertex AI initialized for embedding model: project 'ai-team-458821', location 'us-central1'
2025-05-05 19:44:51,558 - agents.llm.vertex_gemini_provider - ERROR - Failed to load Vertex embedding model text-embedding-004 (this might be expected if Vertex setup is incomplete): 403 This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry. [reason: "BILLING_DISABLED"
domain: "googleapis.com"
metadata {
  key: "service"
  value: "aiplatform.googleapis.com"
}
metadata {
  key: "containerInfo"
  value: "ai-team-458821"
}
metadata {
  key: "consumer"
  value: "projects/ai-team-458821"
}
, locale: "en-US"
message: "This API method requires billing to be enabled. Please enable billing on project #ai-team-458821 by visiting https://console.developers.google.com/billing/enable?project=ai-team-458821 then retry. If you enabled billing for this project recently, wait a few minutes for the action to propagate to our systems and retry."
, links {
  description: "Google developers console billing"
  url: "https://console.developers.google.com/billing/enable?project=ai-team-458821"
}
]
2025-05-05 19:44:51,559 - agent.memory.enhanced_vector - INFO - Initializing EnhancedVectorMemory system...
2025-05-05 19:44:51,562 - agent.memory.enhanced_vector - INFO - Enhanced vector memory system initialized successfully.
2025-05-05 19:44:51,562 - agent.factory - INFO - AgentFactory initialized with shared dependencies.
2025-05-05 19:44:51,563 - agent.cli - INFO - CLI services initialized successfully.
2025-05-05 19:44:52,227 - agents.db.postgres - INFO - Closing PostgreSQL connection pool...
2025-05-05 19:44:52,232 - agents.db.postgres - INFO - PostgreSQL connection pool closed.
2025-05-05 19:44:52,232 - agent.cli - INFO - CLI resources closed.
