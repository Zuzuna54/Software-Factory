name: Deploy to GCP

on:
  push:
    branches: [main]
    paths-ignore:
      - "docs/**"
      - "**.md"
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to deploy to"
        required: true
        default: "staging"
        type: choice
        options:
          - staging
          - production

jobs:
  build-and-deploy-backend:
    name: Build and deploy backend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Cloud SDK
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Authenticate with Google Container Registry
        run: |
          gcloud auth configure-docker

      - name: Build and push API Docker image
        run: |
          export IMAGE_TAG=gcr.io/${{ secrets.GCP_PROJECT_ID }}/autonomous-ai-dev-api:${{ github.sha }}
          docker build -f infra/docker/api.Dockerfile -t $IMAGE_TAG .
          docker push $IMAGE_TAG

      - name: Deploy to Cloud Run
        run: |
          export IMAGE_TAG=gcr.io/${{ secrets.GCP_PROJECT_ID }}/autonomous-ai-dev-api:${{ github.sha }}
          gcloud run deploy autonomous-ai-dev-api \
            --image $IMAGE_TAG \
            --platform managed \
            --region us-central1 \
            --allow-unauthenticated \
            --set-env-vars="DATABASE_URL=${{ secrets.DATABASE_URL }},REDIS_URL=${{ secrets.REDIS_URL }}"

      - name: Run database migrations
        run: |
          export IMAGE_TAG=gcr.io/${{ secrets.GCP_PROJECT_ID }}/autonomous-ai-dev-api:${{ github.sha }}
          gcloud run jobs create migration-job \
            --image $IMAGE_TAG \
            --set-env-vars="DATABASE_URL=${{ secrets.DATABASE_URL }}" \
            --command="alembic" \
            --args="upgrade,head" \
            --region=us-central1 \
            --execute-now

  build-and-deploy-frontend:
    name: Build and deploy frontend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: "dashboard/package-lock.json"

      - name: Install dependencies
        working-directory: dashboard
        run: npm ci

      - name: Build project
        working-directory: dashboard
        env:
          NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}
        run: npm run build

      - name: Set up Cloud SDK
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Authenticate with Google Container Registry
        run: |
          gcloud auth configure-docker

      - name: Build and push Dashboard Docker image
        run: |
          export IMAGE_TAG=gcr.io/${{ secrets.GCP_PROJECT_ID }}/autonomous-ai-dev-dashboard:${{ github.sha }}
          docker build -f infra/docker/dashboard.Dockerfile -t $IMAGE_TAG .
          docker push $IMAGE_TAG

      - name: Deploy to Cloud Run
        run: |
          export IMAGE_TAG=gcr.io/${{ secrets.GCP_PROJECT_ID }}/autonomous-ai-dev-dashboard:${{ github.sha }}
          gcloud run deploy autonomous-ai-dev-dashboard \
            --image $IMAGE_TAG \
            --platform managed \
            --region us-central1 \
            --allow-unauthenticated \
            --set-env-vars="NEXT_PUBLIC_API_URL=${{ secrets.NEXT_PUBLIC_API_URL }}"
