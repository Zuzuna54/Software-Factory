# .github/workflows/ci.yml

name: CI Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]

    services:
      postgres:
        image: ankane/pgvector:v0.7.0-pg16
        env:
          POSTGRES_DB: agent_team_test
          POSTGRES_USER: agent_user
          POSTGRES_PASSWORD: test_password # Use a fixed password for CI
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          # Install linters
          pip install ruff black isort
          # Install test dependencies
          pip install pytest pytest-cov pytest-asyncio
          # Install application dependencies
          pip install -r requirements.txt

      - name: Lint with Ruff
        run: |
          ruff check .

      - name: Format with Black and isort (Check only)
        run: |
          black --check .
          isort --check-only .

      - name: Initialize Test Database
        run: |
          # Wait for PostgreSQL to be ready
          sleep 5
          # Connect and apply schema
          psql -h 127.0.0.1 -p 5432 -U agent_user -d agent_team_test -f infra/docker/postgres/init.sql
        env:
          PGPASSWORD: test_password

      - name: Run Pytest
        run: |
          pytest --cov=agents --cov=app --cov-report=xml
        env:
          DATABASE_URL: postgresql+asyncpg://agent_user:test_password@127.0.0.1:5432/agent_team_test
          REDIS_URL: redis://127.0.0.1:6379/0
          # Set other necessary test environment variables here

      # Optional: Upload coverage report
      # - name: Upload coverage to Codecov
      #   uses: codecov/codecov-action@v3
      #   with:
      #     token: ${{ secrets.CODECOV_TOKEN }} # Set this secret in GitHub repo settings
      #     file: ./coverage.xml
      #     flags: pytest
      #     name: codecov-umbrella
